DIGEST 603d88cdedf4c692cd7a904fb91a862f
FLogic
R91:98 MoreProp <> <> lib
ind 112:116 <> Ptree
constr 140:141 <> c1
constr 166:167 <> c2
R155:159 Logic <> Ptree ind
R193:197 Logic <> Ptree ind
R182:186 Logic <> Ptree ind
R171:175 Logic <> Ptree ind
R222:223 Logic <> c1 constr
R251:252 Logic <> c2 constr
def 270:273 <> flug
R294:298 Logic <> Ptree ind
R300:300 Logic <> X var
R311:311 Logic <> Y var
R308:308 Logic <> X var
R316:320 Logic <> Ptree ind
R322:322 Logic <> Y var
R333:333 Logic <> l var
R343:344 Logic <> c1 constr
R355:356 Logic <> c1 constr
R366:366 Logic <> f var
R359:359 Logic <> f var
R375:376 Logic <> c2 constr
R387:388 Logic <> c2 constr
R403:406 Logic <> flug def
R411:411 Logic <> f var
R391:394 Logic <> flug def
R399:399 Logic <> f var
ind 1172:1174 <> and
constr 1201:1204 <> conj
R1219:1221 Logic <> and ind
R2098:2100 Logic <> and ind
not 2085 <> :type_scope:x_'/\'_x
R2301:2304 Logic <> conj constr
prf 3042:3052 <> and_example
R3059:3059 Logic <> :type_scope:x_'/\'_x not
R3071:3076 Logic <> :type_scope:x_'/\'_x not
R3088:3088 Logic <> :type_scope:x_'/\'_x not
R3060:3068 Prop <> beautiful ind
R3077:3085 Prop <> beautiful ind
R3106:3109 Logic <> conj constr
R3106:3109 Logic <> conj constr
R3139:3141 Prop <> b_0 constr
R3139:3141 Prop <> b_0 constr
R3172:3174 Prop <> b_3 constr
R3172:3174 Prop <> b_3 constr
prf 3662:3673 <> and_example'
R3680:3680 Logic <> :type_scope:x_'/\'_x not
R3685:3690 Logic <> :type_scope:x_'/\'_x not
R3695:3695 Logic <> :type_scope:x_'/\'_x not
R3681:3682 Prop <> ev ind
R3691:3692 Prop <> ev ind
R3737:3740 Prop <> ev_0 constr
R3737:3740 Prop <> ev_0 constr
R3767:3771 Prop <> ev_SS constr
R3767:3771 Prop <> ev_SS constr
R3780:3784 Prop <> ev_SS constr
R3780:3784 Prop <> ev_SS constr
R3793:3796 Prop <> ev_0 constr
R3793:3796 Prop <> ev_0 constr
prf 4054:4058 <> proj1
R4094:4094 Logic <> P var
R4085:4088 Logic <> :type_scope:x_'/\'_x not
R4084:4084 Logic <> P var
R4089:4089 Logic <> Q var
prf 4221:4225 <> proj2
R4261:4261 Logic <> Q var
R4252:4255 Logic <> :type_scope:x_'/\'_x not
R4251:4251 Logic <> P var
R4256:4256 Logic <> Q var
prf 4340:4349 <> and_commut
R4386:4389 Logic <> :type_scope:x_'/\'_x not
R4385:4385 Logic <> Q var
R4390:4390 Logic <> P var
R4376:4379 Logic <> :type_scope:x_'/\'_x not
R4375:4375 Logic <> P var
R4380:4380 Logic <> Q var
prf 5338:5346 <> and_assoc
R5391:5391 Logic <> :type_scope:x_'/\'_x not
R5398:5402 Logic <> :type_scope:x_'/\'_x not
R5393:5396 Logic <> :type_scope:x_'/\'_x not
R5392:5392 Logic <> P var
R5397:5397 Logic <> Q var
R5403:5403 Logic <> R var
R5375:5379 Logic <> :type_scope:x_'/\'_x not
R5386:5386 Logic <> :type_scope:x_'/\'_x not
R5374:5374 Logic <> P var
R5381:5384 Logic <> :type_scope:x_'/\'_x not
R5380:5380 Logic <> Q var
R5385:5385 Logic <> R var
prf 6066:6073 <> even__ev
R6088:6090 Coq.Init.Datatypes <> nat ind
R6095:6095 Logic <> :type_scope:x_'/\'_x not
R6110:6115 Logic <> :type_scope:x_'/\'_x not
R6138:6138 Logic <> :type_scope:x_'/\'_x not
R6106:6107 Prop <> ev ind
R6109:6109 Logic <> n var
R6096:6099 Prop <> even def
R6101:6101 Logic <> n var
R6130:6131 Prop <> ev ind
R6134:6134 Coq.Init.Datatypes <> S constr
R6136:6136 Logic <> n var
R6116:6119 Prop <> even def
R6122:6122 Coq.Init.Datatypes <> S constr
R6124:6124 Logic <> n var
R6220:6223 Prop <> ev_0 constr
R6220:6223 Prop <> ev_0 constr
R6378:6381 Prop <> even def
R6414:6418 Prop <> ev_SS constr
R6414:6418 Prop <> ev_SS constr
prf 6583:6592 <> conj_fact'
R6631:6634 Logic <> :type_scope:x_'/\'_x not
R6630:6630 Logic <> P var
R6635:6635 Logic <> R var
R6621:6624 Logic <> :type_scope:x_'/\'_x not
R6620:6620 Logic <> Q var
R6625:6625 Logic <> R var
R6611:6614 Logic <> :type_scope:x_'/\'_x not
R6610:6610 Logic <> P var
R6615:6615 Logic <> Q var
R6659:6662 Logic <> conj constr
R6659:6662 Logic <> conj constr
R6671:6675 Logic <> proj1 thm
R6671:6675 Logic <> proj1 thm
R6698:6702 Logic <> proj2 thm
R6698:6702 Logic <> proj2 thm
def 6739:6747 <> conj_fact
R6786:6789 Logic <> :type_scope:x_'/\'_x not
R6785:6785 Logic <> P var
R6790:6790 Logic <> R var
R6776:6779 Logic <> :type_scope:x_'/\'_x not
R6775:6775 Logic <> Q var
R6780:6780 Logic <> R var
R6766:6769 Logic <> :type_scope:x_'/\'_x not
R6765:6765 Logic <> P var
R6770:6770 Logic <> Q var
R6811:6814 Logic <> :type_scope:x_'/\'_x not
R6810:6810 Logic <> P var
R6815:6815 Logic <> Q var
R6827:6830 Logic <> :type_scope:x_'/\'_x not
R6826:6826 Logic <> Q var
R6831:6831 Logic <> R var
R6838:6841 Logic <> conj constr
R6864:6868 Logic <> proj2 thm
R6874:6875 Logic <> H2 var
R6872:6872 Logic <> R var
R6870:6870 Logic <> Q var
R6849:6853 Logic <> proj1 thm
R6859:6860 Logic <> H1 var
R6857:6857 Logic <> Q var
R6855:6855 Logic <> P var
R6845:6845 Logic <> R var
R6843:6843 Logic <> P var
def 7073:7075 <> iff
R7093:7093 Logic <> :type_scope:x_'/\'_x not
R7100:7105 Logic <> :type_scope:x_'/\'_x not
R7112:7112 Logic <> :type_scope:x_'/\'_x not
R7099:7099 Logic <> Q var
R7094:7094 Logic <> P var
R7111:7111 Logic <> P var
R7106:7106 Logic <> Q var
R7139:7141 Logic <> iff def
not 7125 <> :type_scope:x_'<->'_x
prf 7249:7259 <> iff_implies
R7303:7303 Logic <> Q var
R7298:7298 Logic <> P var
R7287:7291 Logic <> :type_scope:x_'<->'_x not
R7286:7286 Logic <> P var
R7292:7292 Logic <> Q var
prf 7386:7392 <> iff_sym
R7433:7437 Logic <> :type_scope:x_'<->'_x not
R7432:7432 Logic <> Q var
R7438:7438 Logic <> P var
R7420:7424 Logic <> :type_scope:x_'<->'_x not
R7419:7419 Logic <> P var
R7425:7425 Logic <> Q var
prf 7780:7787 <> iff_refl
R7812:7816 Logic <> :type_scope:x_'<->'_x not
R7811:7811 Logic <> P var
R7817:7817 Logic <> P var
prf 7868:7876 <> iff_trans
R7932:7936 Logic <> :type_scope:x_'<->'_x not
R7931:7931 Logic <> P var
R7937:7937 Logic <> R var
R7919:7923 Logic <> :type_scope:x_'<->'_x not
R7918:7918 Logic <> Q var
R7924:7924 Logic <> R var
R7906:7910 Logic <> :type_scope:x_'<->'_x not
R7905:7905 Logic <> P var
R7911:7911 Logic <> Q var
def 8619:8640 <> beautiful_iff_gorgeous
R8667:8671 Logic <> :type_scope:x_'<->'_x not
R8656:8664 Prop <> beautiful ind
R8666:8666 Logic <> n var
R8672:8679 Prop <> gorgeous ind
R8681:8681 Logic <> n var
R8696:8699 Logic <> conj constr
R8783:8801 Prop <> gorgeous__beautiful thm
R8803:8803 Logic <> n var
R8759:8777 Prop <> beautiful__gorgeous thm
R8779:8779 Logic <> n var
R8744:8752 Prop <> beautiful ind
R8754:8754 Logic <> n var
R8730:8737 Prop <> gorgeous ind
R8739:8739 Logic <> n var
R8717:8724 Prop <> gorgeous ind
R8726:8726 Logic <> n var
R8702:8710 Prop <> beautiful ind
R8712:8712 Logic <> n var
ind 9247:9248 <> or
constr 9277:9285 <> or_introl
constr 9305:9313 <> or_intror
R9294:9295 Logic <> or ind
R9322:9323 Logic <> or ind
R9354:9355 Logic <> or ind
not 9341 <> :type_scope:x_'\/'_x
R9443:9451 Logic <> or_introl constr
R9682:9690 Logic <> or_intror constr
prf 10264:10272 <> or_commut
R10309:10312 Logic <> :type_scope:x_'\/'_x not
R10308:10308 Logic <> Q var
R10313:10313 Logic <> P var
R10298:10301 Logic <> :type_scope:x_'\/'_x not
R10297:10297 Logic <> P var
R10302:10302 Logic <> Q var
R10390:10398 Logic <> or_intror constr
R10390:10398 Logic <> or_intror constr
R10435:10443 Logic <> or_introl constr
R10435:10443 Logic <> or_introl constr
prf 10601:10610 <> or_commut'
R10647:10650 Logic <> :type_scope:x_'\/'_x not
R10646:10646 Logic <> Q var
R10651:10651 Logic <> P var
R10636:10639 Logic <> :type_scope:x_'\/'_x not
R10635:10635 Logic <> P var
R10640:10640 Logic <> Q var
prf 11010:11034 <> or_distributes_over_and_1
R11078:11078 Logic <> :type_scope:x_'/\'_x not
R11085:11090 Logic <> :type_scope:x_'/\'_x not
R11097:11097 Logic <> :type_scope:x_'/\'_x not
R11080:11083 Logic <> :type_scope:x_'\/'_x not
R11079:11079 Logic <> P var
R11084:11084 Logic <> Q var
R11092:11095 Logic <> :type_scope:x_'\/'_x not
R11091:11091 Logic <> P var
R11096:11096 Logic <> R var
R11062:11066 Logic <> :type_scope:x_'\/'_x not
R11073:11073 Logic <> :type_scope:x_'\/'_x not
R11061:11061 Logic <> P var
R11068:11071 Logic <> :type_scope:x_'/\'_x not
R11067:11067 Logic <> Q var
R11072:11072 Logic <> R var
prf 11436:11460 <> or_distributes_over_and_2
R11512:11516 Logic <> :type_scope:x_'\/'_x not
R11523:11523 Logic <> :type_scope:x_'\/'_x not
R11511:11511 Logic <> P var
R11518:11521 Logic <> :type_scope:x_'/\'_x not
R11517:11517 Logic <> Q var
R11522:11522 Logic <> R var
R11487:11487 Logic <> :type_scope:x_'/\'_x not
R11494:11499 Logic <> :type_scope:x_'/\'_x not
R11506:11506 Logic <> :type_scope:x_'/\'_x not
R11489:11492 Logic <> :type_scope:x_'\/'_x not
R11488:11488 Logic <> P var
R11493:11493 Logic <> Q var
R11501:11504 Logic <> :type_scope:x_'\/'_x not
R11500:11500 Logic <> P var
R11505:11505 Logic <> R var
R11588:11596 Logic <> or_introl constr
R11588:11596 Logic <> or_introl constr
R11657:11665 Logic <> or_introl constr
R11657:11665 Logic <> or_introl constr
R11698:11706 Logic <> or_intror constr
R11698:11706 Logic <> or_intror constr
prf 11826:11848 <> or_distributes_over_and
R11888:11892 Logic <> :type_scope:x_'<->'_x not
R11876:11880 Logic <> :type_scope:x_'\/'_x not
R11887:11887 Logic <> :type_scope:x_'\/'_x not
R11875:11875 Logic <> P var
R11882:11885 Logic <> :type_scope:x_'/\'_x not
R11881:11881 Logic <> Q var
R11886:11886 Logic <> R var
R11893:11893 Logic <> :type_scope:x_'/\'_x not
R11900:11905 Logic <> :type_scope:x_'/\'_x not
R11912:11912 Logic <> :type_scope:x_'/\'_x not
R11895:11898 Logic <> :type_scope:x_'\/'_x not
R11894:11894 Logic <> P var
R11899:11899 Logic <> Q var
R11907:11910 Logic <> :type_scope:x_'\/'_x not
R11906:11906 Logic <> P var
R11911:11911 Logic <> R var
prf 12589:12602 <> andb_true__and
R12647:12650 Logic <> :type_scope:x_'/\'_x not
R12640:12642 Coq.Init.Logic <> :type_scope:x_'='_x not
R12639:12639 Logic <> b var
R12643:12646 Basics <> true constr
R12652:12654 Coq.Init.Logic <> :type_scope:x_'='_x not
R12651:12651 Logic <> c var
R12655:12658 Basics <> true constr
R12628:12630 Coq.Init.Logic <> :type_scope:x_'='_x not
R12620:12623 Basics <> andb def
R12627:12627 Logic <> c var
R12625:12625 Logic <> b var
R12631:12634 Basics <> true constr
R12785:12788 Logic <> conj constr
R12785:12788 Logic <> conj constr
prf 12905:12918 <> and__andb_true
R12968:12970 Coq.Init.Logic <> :type_scope:x_'='_x not
R12960:12963 Basics <> andb def
R12967:12967 Logic <> c var
R12965:12965 Logic <> b var
R12971:12974 Basics <> true constr
R12944:12947 Logic <> :type_scope:x_'/\'_x not
R12937:12939 Coq.Init.Logic <> :type_scope:x_'='_x not
R12936:12936 Logic <> b var
R12940:12943 Basics <> true constr
R12949:12951 Coq.Init.Logic <> :type_scope:x_'='_x not
R12948:12948 Logic <> c var
R12952:12955 Basics <> true constr
prf 13144:13153 <> andb_false
R13200:13203 Logic <> :type_scope:x_'\/'_x not
R13192:13194 Coq.Init.Logic <> :type_scope:x_'='_x not
R13191:13191 Logic <> b var
R13195:13199 Basics <> false constr
R13205:13207 Coq.Init.Logic <> :type_scope:x_'='_x not
R13204:13204 Logic <> c var
R13208:13212 Basics <> false constr
R13179:13181 Coq.Init.Logic <> :type_scope:x_'='_x not
R13171:13174 Basics <> andb def
R13178:13178 Logic <> c var
R13176:13176 Logic <> b var
R13182:13186 Basics <> false constr
prf 13263:13270 <> orb_true
R13314:13317 Logic <> :type_scope:x_'\/'_x not
R13307:13309 Coq.Init.Logic <> :type_scope:x_'='_x not
R13306:13306 Logic <> b var
R13310:13313 Basics <> true constr
R13319:13321 Coq.Init.Logic <> :type_scope:x_'='_x not
R13318:13318 Logic <> c var
R13322:13325 Basics <> true constr
R13295:13297 Coq.Init.Logic <> :type_scope:x_'='_x not
R13288:13290 Basics <> orb def
R13294:13294 Logic <> c var
R13292:13292 Logic <> b var
R13298:13301 Basics <> true constr
prf 13375:13383 <> orb_false
R13429:13432 Logic <> :type_scope:x_'/\'_x not
R13421:13423 Coq.Init.Logic <> :type_scope:x_'='_x not
R13420:13420 Logic <> b var
R13424:13428 Basics <> false constr
R13434:13436 Coq.Init.Logic <> :type_scope:x_'='_x not
R13433:13433 Logic <> c var
R13437:13441 Basics <> false constr
R13408:13410 Coq.Init.Logic <> :type_scope:x_'='_x not
R13401:13403 Basics <> orb def
R13407:13407 Logic <> c var
R13405:13405 Logic <> b var
R13411:13415 Basics <> false constr
ind 13698:13702 <> False
prf 13982:14003 <> False_implies_nonsense
R14023:14025 Coq.Init.Logic <> :type_scope:x_'='_x not
R14019:14021 Basics <> :nat_scope:x_'+'_x not
R14009:14013 Logic <> False ind
prf 14496:14517 <> nonsense_implies_False
R14536:14540 Logic <> False ind
R14528:14530 Coq.Init.Logic <> :type_scope:x_'='_x not
R14524:14526 Basics <> :nat_scope:x_'+'_x not
prf 14822:14839 <> ex_falso_quodlibet
R14871:14871 Logic <> P var
R14862:14866 Logic <> False ind
ind 15561:15564 <> True
constr 15576:15576 <> P
R15577:15577 Logic <> True ind
def 16013:16015 <> not
R16034:16038 Logic <> False ind
R16029:16029 Logic <> P var
R16179:16181 Logic <> not def
not 16169 <> :type_scope:'~'_x
R16207:16209 Logic <> not def
prf 16586:16594 <> not_False
R16601:16602 Logic <> :type_scope:'~'_x not
R16603:16607 Logic <> False ind
R16626:16628 Logic <> not def
prf 16669:16698 <> contradiction_implies_anything
R16736:16736 Logic <> Q var
R16725:16728 Logic <> :type_scope:x_'/\'_x not
R16724:16724 Logic <> P var
R16729:16729 Logic <> :type_scope:'~'_x not
R16730:16730 Logic <> P var
R16819:16821 Logic <> not def
prf 16880:16889 <> double_neg
R16917:16917 Logic <> :type_scope:'~'_x not
R16918:16918 Logic <> :type_scope:'~'_x not
R16919:16919 Logic <> P var
R16912:16912 Logic <> P var
R16974:16976 Logic <> not def
prf 17549:17562 <> contrapositive
R17606:17606 Logic <> :type_scope:'~'_x not
R17607:17607 Logic <> P var
R17600:17600 Logic <> :type_scope:'~'_x not
R17601:17601 Logic <> Q var
R17593:17593 Logic <> Q var
R17588:17588 Logic <> P var
R17633:17635 Logic <> not def
R17651:17653 Logic <> not def
prf 17786:17808 <> not_both_true_and_false
R17831:17833 Logic <> :type_scope:'~'_x not
R17841:17841 Logic <> :type_scope:'~'_x not
R17835:17838 Logic <> :type_scope:x_'/\'_x not
R17834:17834 Logic <> P var
R17839:17839 Logic <> :type_scope:'~'_x not
R17840:17840 Logic <> P var
R17867:17869 Logic <> not def
prf 18374:18386 <> five_not_even
R18394:18395 Logic <> :type_scope:'~'_x not
R18396:18397 Prop <> ev ind
R18443:18445 Logic <> not def
prf 18743:18753 <> ev_not_ev_S
R18777:18778 Logic <> :type_scope:'~'_x not
R18779:18780 Prop <> ev ind
R18783:18783 Coq.Init.Datatypes <> S constr
R18785:18785 Logic <> n var
R18769:18770 Prop <> ev ind
R18772:18772 Logic <> n var
R18806:18808 Logic <> not def
R18931:18940 Prop <> SSev__even thm
R18931:18940 Prop <> SSev__even thm
prf 19177:19194 <> classic_double_neg
R19224:19224 Logic <> P var
R19217:19217 Logic <> :type_scope:'~'_x not
R19218:19218 Logic <> :type_scope:'~'_x not
R19219:19219 Logic <> P var
R19279:19281 Logic <> not def
def 19956:19961 <> peirce
R20000:20000 Logic <> P var
R19996:19996 Logic <> P var
R19992:19992 Logic <> Q var
R19989:19989 Logic <> P var
def 20014:20020 <> classic
R20050:20050 Logic <> P var
R20043:20043 Logic <> :type_scope:'~'_x not
R20044:20044 Logic <> :type_scope:'~'_x not
R20045:20045 Logic <> P var
def 20064:20078 <> excluded_middle
R20102:20105 Logic <> :type_scope:x_'\/'_x not
R20101:20101 Logic <> P var
R20106:20106 Logic <> :type_scope:'~'_x not
R20107:20107 Logic <> P var
def 20121:20141 <> de_morgan_not_and_not
R20180:20181 Logic <> :type_scope:x_'\/'_x not
R20179:20179 Logic <> P var
R20182:20182 Logic <> Q var
R20166:20167 Logic <> :type_scope:'~'_x not
R20174:20174 Logic <> :type_scope:'~'_x not
R20170:20171 Logic <> :type_scope:x_'/\'_x not
R20168:20168 Logic <> :type_scope:'~'_x not
R20169:20169 Logic <> P var
R20172:20172 Logic <> :type_scope:'~'_x not
R20173:20173 Logic <> Q var
def 20196:20208 <> implies_to_or
R20246:20247 Logic <> :type_scope:x_'\/'_x not
R20244:20244 Logic <> :type_scope:'~'_x not
R20245:20245 Logic <> P var
R20248:20248 Logic <> Q var
R20237:20237 Logic <> Q var
R20234:20234 Logic <> P var
R20456:20458 Logic <> :type_scope:'~'_x not
R20464:20464 Logic <> :type_scope:'~'_x not
R20460:20462 Coq.Init.Logic <> :type_scope:x_'='_x not
not 20443 <> :type_scope:x_'<>'_x
prf 20976:20994 <> not_false_then_true
R21009:21012 Basics <> bool ind
R21032:21034 Coq.Init.Logic <> :type_scope:x_'='_x not
R21031:21031 Logic <> b var
R21035:21038 Basics <> true constr
R21018:21021 Logic <> :type_scope:x_'<>'_x not
R21017:21017 Logic <> b var
R21022:21026 Basics <> false constr
R21137:21139 Logic <> not def
R21159:21176 Logic <> ex_falso_quodlibet thm
R21159:21176 Logic <> ex_falso_quodlibet thm
prf 21272:21287 <> not_eq_beq_false
R21305:21307 Coq.Init.Datatypes <> nat ind
R21343:21345 Coq.Init.Logic <> :type_scope:x_'='_x not
R21331:21337 Basics <> beq_nat def
R21341:21342 Logic <> n' var
R21339:21339 Logic <> n var
R21346:21350 Basics <> false constr
R21316:21319 Logic <> :type_scope:x_'<>'_x not
R21315:21315 Logic <> n var
R21320:21321 Logic <> n' var
R21385:21391 Basics <> beq_nat def
R21385:21391 Basics <> beq_nat def
R21445:21454 MoreCoq <> beq_nat_eq thm
R21445:21454 MoreCoq <> beq_nat_eq thm
R21473:21475 Logic <> not def
prf 21635:21650 <> beq_false_not_eq
R21692:21695 Logic <> :type_scope:x_'<>'_x not
R21691:21691 Logic <> n var
R21696:21696 Logic <> m var
R21673:21675 Coq.Init.Logic <> :type_scope:x_'='_x not
R21668:21672 Basics <> false constr
R21676:21682 Basics <> beq_nat def
R21686:21686 Logic <> m var
R21684:21684 Logic <> n var
ind 21998:21999 <> ex
constr 22036:22043 <> ex_intro
R22015:22015 Logic <> X var
R22080:22081 Logic <> ex ind
R22069:22075 Logic <> witness var
def 22533:22548 <> some_nat_is_even
R22563:22564 Logic <> ex ind
R22570:22571 Prop <> ev ind
R22566:22568 Coq.Init.Datatypes <> nat ind
def 22740:22743 <> snie
R22747:22762 Logic <> some_nat_is_even def
R22770:22777 Logic <> ex_intro constr
R22787:22791 Prop <> ev_SS constr
R22796:22800 Prop <> ev_SS constr
R22804:22807 Prop <> ev_0 constr
R22781:22782 Prop <> ev ind
R23318:23319 Logic <> ex ind
not 23297 <> :type_scope:'exists'_x_','_x
R23432:23433 Logic <> ex ind
not 23407 <> :type_scope:'exists'_x_':'_x_','_x
def 23863:23878 <> exists_example_1
R23882:23888 Logic <> :type_scope:'exists'_x_','_x not
R23890:23891 Logic <> :type_scope:'exists'_x_','_x not
R23903:23905 Coq.Init.Logic <> :type_scope:x_'='_x not
R23893:23896 Basics <> :nat_scope:x_'+'_x not
R23902:23902 Basics <> :nat_scope:x_'+'_x not
R23898:23900 Basics <> :nat_scope:x_'*'_x not
R23924:23931 Logic <> ex_intro constr
R23924:23931 Logic <> ex_intro constr
def 24213:24229 <> exists_example_1'
R24233:24239 Logic <> :type_scope:'exists'_x_','_x not
R24241:24242 Logic <> :type_scope:'exists'_x_','_x not
R24254:24256 Coq.Init.Logic <> :type_scope:x_'='_x not
R24244:24247 Basics <> :nat_scope:x_'+'_x not
R24253:24253 Basics <> :nat_scope:x_'+'_x not
R24249:24251 Basics <> :nat_scope:x_'*'_x not
prf 24712:24727 <> exists_example_2
R24771:24777 Logic <> :type_scope:'exists'_x_','_x not
R24779:24780 Logic <> :type_scope:'exists'_x_','_x not
R24782:24784 Coq.Init.Logic <> :type_scope:x_'='_x not
R24781:24781 Logic <> n var
R24786:24788 Basics <> :nat_scope:x_'+'_x not
R24744:24750 Logic <> :type_scope:'exists'_x_','_x not
R24752:24753 Logic <> :type_scope:'exists'_x_','_x not
R24755:24757 Coq.Init.Logic <> :type_scope:x_'='_x not
R24754:24754 Logic <> n var
R24759:24761 Basics <> :nat_scope:x_'+'_x not
R24851:24853 Basics <> :nat_scope:x_'+'_x not
R24851:24853 Basics <> :nat_scope:x_'+'_x not
def 25131:25131 <> p
R25135:25136 Logic <> ex ind
R25152:25160 Prop <> beautiful ind
R25163:25163 Coq.Init.Datatypes <> S constr
R25165:25165 Logic <> n var
R25138:25140 Coq.Init.Datatypes <> nat ind
R25191:25195 Basics <> admit prfax
prf 25388:25402 <> dist_not_exists
R25427:25427 Logic <> X var
R25460:25462 Logic <> :type_scope:'~'_x not
R25478:25478 Logic <> :type_scope:'~'_x not
R25463:25469 Logic <> :type_scope:'exists'_x_','_x not
R25471:25472 Logic <> :type_scope:'exists'_x_','_x not
R25473:25474 Logic <> :type_scope:'~'_x not
R25475:25475 Logic <> P var
R25452:25452 Logic <> P var
R25454:25454 Logic <> x var
R25525:25527 Logic <> not def
prf 25808:25822 <> not_exists_dist
R25870:25870 Logic <> X var
R25920:25920 Logic <> P var
R25922:25922 Logic <> x var
R25886:25888 Logic <> :type_scope:'~'_x not
R25904:25904 Logic <> :type_scope:'~'_x not
R25889:25895 Logic <> :type_scope:'exists'_x_','_x not
R25897:25898 Logic <> :type_scope:'exists'_x_','_x not
R25899:25900 Logic <> :type_scope:'~'_x not
R25901:25901 Logic <> P var
R25828:25842 Logic <> excluded_middle def
prf 26110:26123 <> dist_exists_or
R26150:26150 Logic <> X var
R26164:26164 Logic <> :type_scope:x_'<->'_x not
R26185:26190 Logic <> :type_scope:x_'<->'_x not
R26165:26171 Logic <> :type_scope:'exists'_x_','_x not
R26173:26174 Logic <> :type_scope:'exists'_x_','_x not
R26178:26181 Logic <> :type_scope:x_'\/'_x not
R26175:26175 Logic <> P var
R26182:26182 Logic <> Q var
R26191:26191 Logic <> :type_scope:x_'\/'_x not
R26205:26210 Logic <> :type_scope:x_'\/'_x not
R26224:26224 Logic <> :type_scope:x_'\/'_x not
R26192:26198 Logic <> :type_scope:'exists'_x_','_x not
R26200:26201 Logic <> :type_scope:'exists'_x_','_x not
R26202:26202 Logic <> P var
R26211:26217 Logic <> :type_scope:'exists'_x_','_x not
R26219:26220 Logic <> :type_scope:'exists'_x_','_x not
R26221:26221 Logic <> Q var
R26319:26327 Logic <> or_introl constr
R26319:26327 Logic <> or_introl constr
R26336:26343 Logic <> ex_intro constr
R26336:26343 Logic <> ex_intro constr
R26382:26390 Logic <> or_intror constr
R26382:26390 Logic <> or_intror constr
R26399:26406 Logic <> ex_intro constr
R26399:26406 Logic <> ex_intro constr
R26492:26499 Logic <> ex_intro constr
R26492:26499 Logic <> ex_intro constr
R26528:26536 Logic <> or_introl constr
R26528:26536 Logic <> or_introl constr
R26569:26576 Logic <> ex_intro constr
R26569:26576 Logic <> ex_intro constr
R26611:26619 Logic <> or_intror constr
R26611:26619 Logic <> or_intror constr
mod 27021:27030 <> MyEquality
ind 27044:27045 MyEquality eq
constr 27078:27087 MyEquality refl_equal
R27101:27102 Logic <> eq ind
R27108:27108 Logic <> x var
R27106:27106 Logic <> x var
R27166:27167 Logic MyEquality eq ind
not 27154 MyEquality :type_scope:x_'='_x
prf 27956:27971 MyEquality leibniz_equality
R27999:27999 Logic <> X var
R28025:28025 Logic <> X var
R28043:28043 Logic <> P var
R28045:28045 Logic <> y var
R28036:28036 Logic <> P var
R28038:28038 Logic <> x var
R28006:28008 Logic MyEquality :type_scope:x_'='_x not
R28005:28005 Logic <> x var
R28009:28009 Logic <> y var
def 28911:28914 MyEquality four
R28923:28925 Logic MyEquality :type_scope:x_'='_x not
R28919:28921 Basics <> :nat_scope:x_'+'_x not
R28927:28929 Basics <> :nat_scope:x_'+'_x not
R28939:28948 Logic MyEquality refl_equal constr
R28950:28952 Coq.Init.Datatypes <> nat ind
def 28970:28978 MyEquality singleton
R29000:29000 Logic <> X var
R29011:29013 Logic MyEquality :type_scope:x_'='_x not
R29006:29007 Poly <> ::x_'++'_x not
R29004:29005 Poly <> ::'['_']' not
R29008:29008 Poly <> ::'['_x_','_'..'_','_x_']' not
R29010:29010 Poly <> ::'['_x_','_'..'_','_x_']' not
R29009:29009 Logic <> x var
R29015:29016 Poly <> ::x_'::'_x not
R29014:29014 Logic <> x var
R29017:29018 Poly <> ::'['_']' not
R29041:29041 Logic <> X var
R29047:29056 Logic MyEquality refl_equal constr
R29067:29067 Poly <> ::'['_x_','_'..'_','_x_']' not
R29069:29069 Poly <> ::'['_x_','_'..'_','_x_']' not
R29068:29068 Logic <> x var
R29059:29062 Poly <> list ind
R29064:29064 Logic <> X var
R29078:29087 Logic <> <> mod
prf 31438:31463 <> dist_and_or_eq_implies_and
R31508:31509 Logic <> :type_scope:x_'/\'_x not
R31507:31507 Logic <> P var
R31510:31510 Logic <> Q var
R31482:31485 Logic <> :type_scope:x_'/\'_x not
R31481:31481 Logic <> P var
R31486:31486 Logic <> :type_scope:x_'/\'_x not
R31493:31497 Logic <> :type_scope:x_'/\'_x not
R31488:31491 Logic <> :type_scope:x_'\/'_x not
R31487:31487 Logic <> Q var
R31492:31492 Logic <> R var
R31499:31501 Coq.Init.Logic <> :type_scope:x_'='_x not
R31498:31498 Logic <> Q var
R31502:31502 Logic <> R var
def 31948:31958 <> funny_prop1
R31988:31996 Prop <> beautiful ind
R31998:31998 Logic <> n var
R32002:32010 Prop <> beautiful ind
R32014:32014 Basics <> :nat_scope:x_'+'_x not
R32013:32013 Logic <> n var
def 32446:32457 <> funny_prop1'
R32487:32495 Prop <> beautiful ind
R32497:32497 Logic <> n var
R32501:32509 Prop <> beautiful ind
R32513:32513 Basics <> :nat_scope:x_'+'_x not
R32512:32512 Logic <> n var
def 32599:32611 <> funny_prop1''
R32644:32652 Prop <> beautiful ind
R32656:32656 Basics <> :nat_scope:x_'+'_x not
R32655:32655 Logic <> n var
R32629:32637 Prop <> beautiful ind
R32639:32639 Logic <> n var
mod 33220:33227 <> LeModule
ind 33716:33717 LeModule le
constr 33747:33750 LeModule le_n
constr 33775:33778 LeModule le_S
R33728:33730 Coq.Init.Datatypes <> nat ind
R33721:33723 Coq.Init.Datatypes <> nat ind
R33764:33765 Logic <> le ind
R33769:33769 Logic <> n var
R33767:33767 Logic <> n var
R33807:33808 Logic <> le ind
R33813:33813 Coq.Init.Datatypes <> S constr
R33815:33815 Logic <> m var
R33810:33810 Logic <> n var
R33795:33796 Logic <> le ind
R33800:33800 Logic <> m var
R33798:33798 Logic <> n var
R33843:33844 Logic LeModule le ind
not 33830 LeModule ::x_'<='_x
prf 34644:34651 LeModule test_le1
R34658:34661 Logic LeModule ::x_'<='_x not
R34704:34707 Logic LeModule le_n constr
R34704:34707 Logic LeModule le_n constr
prf 34725:34732 LeModule test_le2
R34739:34742 Logic LeModule ::x_'<='_x not
R34785:34788 Logic LeModule le_S constr
R34785:34788 Logic LeModule le_S constr
R34797:34800 Logic LeModule le_S constr
R34797:34800 Logic LeModule le_S constr
R34809:34812 Logic LeModule le_S constr
R34809:34812 Logic LeModule le_S constr
R34821:34824 Logic LeModule le_n constr
R34821:34824 Logic LeModule le_n constr
prf 34842:34849 LeModule test_le3
R34855:34857 Logic <> :type_scope:'~'_x not
R34864:34864 Logic <> :type_scope:'~'_x not
R34859:34862 Logic LeModule ::x_'<='_x not
R35040:35047 Logic <> <> mod
def 35062:35063 <> lt
R35070:35072 Coq.Init.Datatypes <> nat ind
R35078:35079 Coq.Init.Peano <> le ind
R35087:35087 Logic <> m var
R35082:35082 Coq.Init.Datatypes <> S constr
R35084:35084 Logic <> n var
R35112:35113 Logic <> lt def
not 35100 <> ::x_'<'_x
ind 35189:35197 <> square_of
constr 35225:35226 <> sq
R35208:35210 Coq.Init.Datatypes <> nat ind
R35201:35203 Coq.Init.Datatypes <> nat ind
R35239:35241 Coq.Init.Datatypes <> nat ind
R35244:35252 Logic <> square_of ind
R35258:35260 Basics <> :nat_scope:x_'*'_x not
R35257:35257 Logic <> n var
R35261:35261 Logic <> n var
R35254:35254 Logic <> n var
ind 35276:35283 <> next_nat
constr 35314:35315 <> nn
R35288:35290 Coq.Init.Datatypes <> nat ind
R35295:35297 Coq.Init.Datatypes <> nat ind
R35319:35326 Logic <> next_nat ind
R35331:35331 Coq.Init.Datatypes <> S constr
ind 35348:35356 <> next_even
constr 35387:35390 <> ne_1
constr 35428:35431 <> ne_2
R35361:35363 Coq.Init.Datatypes <> nat ind
R35368:35370 Coq.Init.Datatypes <> nat ind
R35406:35414 Logic <> next_even ind
R35419:35419 Coq.Init.Datatypes <> S constr
R35394:35395 Prop <> ev ind
R35398:35398 Coq.Init.Datatypes <> S constr
R35451:35459 Logic <> next_even ind
R35464:35464 Coq.Init.Datatypes <> S constr
R35467:35467 Coq.Init.Datatypes <> S constr
R35435:35436 Prop <> ev ind
R35439:35439 Coq.Init.Datatypes <> S constr
R35442:35442 Coq.Init.Datatypes <> S constr
ind 35647:35660 <> total_relation
constr 35687:35688 <> tr
R35671:35673 Coq.Init.Datatypes <> nat ind
R35664:35666 Coq.Init.Datatypes <> nat ind
R35707:35709 Coq.Init.Datatypes <> nat ind
R35712:35725 Logic <> total_relation ind
R35730:35731 Logic <> n2 var
R35727:35728 Logic <> n1 var
ind 35898:35911 <> empty_relation
constr 35938:35939 <> er
R35922:35924 Coq.Init.Datatypes <> nat ind
R35915:35917 Coq.Init.Datatypes <> nat ind
R35956:35958 Coq.Init.Datatypes <> nat ind
R35970:35983 Logic <> empty_relation ind
R35987:35987 Logic <> m var
R35985:35985 Logic <> n var
R35961:35965 Logic <> False ind
mod 36055:36055 <> R
ind 36261:36261 R R
constr 36299:36300 R c1
constr 36318:36319 R c2
constr 36369:36370 R c3
constr 36420:36421 R c4
constr 36479:36480 R c5
R36279:36281 Coq.Init.Datatypes <> nat ind
R36272:36274 Coq.Init.Datatypes <> nat ind
R36265:36267 Coq.Init.Datatypes <> nat ind
R36304:36304 Logic <> R ind
R36348:36348 Logic <> R ind
R36359:36359 Coq.Init.Datatypes <> S constr
R36361:36361 Logic <> o var
R36356:36356 Logic <> n var
R36351:36351 Coq.Init.Datatypes <> S constr
R36353:36353 Logic <> m var
R36337:36337 Logic <> R ind
R36343:36343 Logic <> o var
R36341:36341 Logic <> n var
R36339:36339 Logic <> m var
R36399:36399 Logic <> R ind
R36410:36410 Coq.Init.Datatypes <> S constr
R36412:36412 Logic <> o var
R36404:36404 Coq.Init.Datatypes <> S constr
R36406:36406 Logic <> n var
R36401:36401 Logic <> m var
R36388:36388 Logic <> R ind
R36394:36394 Logic <> o var
R36392:36392 Logic <> n var
R36390:36390 Logic <> m var
R36466:36466 Logic <> R ind
R36472:36472 Logic <> o var
R36470:36470 Logic <> n var
R36468:36468 Logic <> m var
R36439:36439 Logic <> R ind
R36454:36454 Coq.Init.Datatypes <> S constr
R36457:36457 Coq.Init.Datatypes <> S constr
R36459:36459 Logic <> o var
R36448:36448 Coq.Init.Datatypes <> S constr
R36450:36450 Logic <> n var
R36442:36442 Coq.Init.Datatypes <> S constr
R36444:36444 Logic <> m var
R36509:36509 Logic <> R ind
R36515:36515 Logic <> o var
R36513:36513 Logic <> m var
R36511:36511 Logic <> n var
R36498:36498 Logic <> R ind
R36504:36504 Logic <> o var
R36502:36502 Logic <> n var
R36500:36500 Logic <> m var
R37353:37353 Logic <> <> mod
ind 37708:37710 <> all
constr 37761:37767 <> all_nil
constr 37784:37796 <> all_recursive
R37728:37728 Logic <> X var
R37741:37744 Poly <> list ind
R37771:37773 Logic <> all ind
R37779:37780 Poly <> ::'['_']' not
R37821:37824 Poly <> list ind
R37900:37902 Logic <> all ind
R37911:37912 Poly <> ::x_'::'_x not
R37909:37910 Logic <> hd var
R37913:37913 Logic <> l var
R37838:37840 Logic <> all ind
R37846:37846 Logic <> l var
R37832:37833 Logic <> hd var
prf 38521:38531 <> all_forallb
R38566:38569 Basics <> bool ind
R38561:38561 Logic <> X var
R38577:38580 Poly <> list ind
R38582:38582 Logic <> X var
R38586:38586 Logic <> :type_scope:x_'<->'_x not
R38623:38629 Logic <> :type_scope:x_'<->'_x not
R38652:38652 Logic <> :type_scope:x_'<->'_x not
R38587:38589 Logic <> all ind
R38622:38622 Logic <> l var
R38600:38600 Logic <> X var
R38612:38614 Coq.Init.Logic <> :type_scope:x_'='_x not
R38606:38609 Logic <> test var
R38611:38611 Logic <> x var
R38615:38618 Basics <> true constr
R38591:38591 Logic <> X var
R38645:38647 Coq.Init.Logic <> :type_scope:x_'='_x not
R38630:38636 MoreCoq <> forallb def
R38644:38644 Logic <> l var
R38639:38642 Logic <> test var
R38648:38651 Basics <> true constr
R38934:38940 Logic <> all_nil constr
R38934:38940 Logic <> all_nil constr
R38978:38990 Logic <> all_recursive constr
R38978:38990 Logic <> all_recursive constr
R39015:39029 Induction <> andb_true_elim1 thm
R39015:39029 Induction <> andb_true_elim1 thm
R39068:39082 Induction <> andb_true_elim2 thm
R39068:39082 Induction <> andb_true_elim2 thm
ind 40266:40279 <> in_order_merge
constr 40331:40335 <> nil_l
constr 40374:40378 <> l_nil
constr 40417:40422 <> head_l
constr 40521:40526 <> l_head
R40311:40314 Poly <> list ind
R40301:40304 Poly <> list ind
R40291:40294 Poly <> list ind
R40349:40362 Logic <> in_order_merge ind
R40370:40370 Logic <> l var
R40368:40368 Logic <> l var
R40364:40366 Poly <> nil constr
R40392:40405 Logic <> in_order_merge ind
R40413:40413 Logic <> l var
R40409:40411 Poly <> nil constr
R40407:40407 Logic <> l var
R40448:40451 Poly <> list ind
R40486:40499 Logic <> in_order_merge ind
R40514:40515 Poly <> ::x_'::'_x not
R40513:40513 Logic <> x var
R40516:40516 Logic <> l var
R40509:40510 Logic <> l2 var
R40503:40504 Poly <> ::x_'::'_x not
R40502:40502 Logic <> x var
R40505:40506 Logic <> l1 var
R40460:40473 Logic <> in_order_merge ind
R40481:40481 Logic <> l var
R40478:40479 Logic <> l2 var
R40475:40476 Logic <> l1 var
R40552:40555 Poly <> list ind
R40590:40603 Logic <> in_order_merge ind
R40618:40619 Poly <> ::x_'::'_x not
R40617:40617 Logic <> x var
R40620:40620 Logic <> l var
R40610:40611 Poly <> ::x_'::'_x not
R40609:40609 Logic <> x var
R40612:40613 Logic <> l2 var
R40605:40606 Logic <> l1 var
R40564:40577 Logic <> in_order_merge ind
R40585:40585 Logic <> l var
R40582:40583 Logic <> l2 var
R40579:40580 Logic <> l1 var
prf 40631:40652 <> all_false_filter_empty
R40679:40682 Poly <> list ind
R40684:40684 Logic <> X var
R40697:40700 Basics <> bool ind
R40694:40694 Logic <> X var
R40755:40757 Coq.Init.Logic <> :type_scope:x_'='_x not
R40742:40747 Poly <> filter def
R40754:40754 Logic <> l var
R40749:40752 Logic <> test var
R40758:40759 Poly <> ::'['_']' not
R40705:40707 Logic <> all ind
R40737:40737 Logic <> l var
R40727:40729 Coq.Init.Logic <> :type_scope:x_'='_x not
R40721:40724 Logic <> test var
R40726:40726 Logic <> x var
R40730:40734 Basics <> false constr
R40709:40709 Logic <> X var
prf 40916:40935 <> all_true_filter_full
R40962:40965 Poly <> list ind
R40967:40967 Logic <> X var
R40980:40983 Basics <> bool ind
R40977:40977 Logic <> X var
R41037:41039 Coq.Init.Logic <> :type_scope:x_'='_x not
R41024:41029 Poly <> filter def
R41036:41036 Logic <> l var
R41031:41034 Logic <> test var
R41040:41040 Logic <> l var
R40988:40990 Logic <> all ind
R41019:41019 Logic <> l var
R41010:41012 Coq.Init.Logic <> :type_scope:x_'='_x not
R41004:41007 Logic <> test var
R41009:41009 Logic <> x var
R41013:41016 Basics <> true constr
R40992:40992 Logic <> X var
prf 41215:41230 <> filter_challenge
R41263:41266 Poly <> list ind
R41268:41268 Logic <> X var
R41284:41287 Basics <> bool ind
R41279:41279 Logic <> X var
R41408:41410 Coq.Init.Logic <> :type_scope:x_'='_x not
R41395:41400 Poly <> filter def
R41407:41407 Logic <> l var
R41402:41405 Logic <> test var
R41411:41412 Logic <> l1 var
R41368:41381 Logic <> in_order_merge ind
R41389:41389 Logic <> l var
R41386:41387 Logic <> l2 var
R41383:41384 Logic <> l1 var
R41329:41331 Logic <> all ind
R41362:41363 Logic <> l2 var
R41352:41354 Coq.Init.Logic <> :type_scope:x_'='_x not
R41346:41349 Logic <> test var
R41351:41351 Logic <> x var
R41355:41359 Basics <> false constr
R41333:41333 Logic <> X var
R41291:41293 Logic <> all ind
R41323:41324 Logic <> l1 var
R41314:41316 Coq.Init.Logic <> :type_scope:x_'='_x not
R41308:41311 Logic <> test var
R41313:41313 Logic <> x var
R41317:41320 Basics <> true constr
R41295:41295 Logic <> X var
R41467:41488 Logic <> all_false_filter_empty thm
R41467:41488 Logic <> all_false_filter_empty thm
R41523:41542 Logic <> all_true_filter_full thm
R41523:41542 Logic <> all_true_filter_full thm
ind 42324:42333 <> appears_in
constr 42374:42380 <> ai_here
constr 42418:42425 <> ai_later
R42347:42347 Logic <> X var
R42352:42355 Poly <> list ind
R42394:42403 Logic <> appears_in ind
R42409:42410 Poly <> ::x_'::'_x not
R42411:42411 Logic <> l var
R42459:42468 Logic <> appears_in ind
R42474:42475 Poly <> ::x_'::'_x not
R42473:42473 Logic <> b var
R42476:42476 Logic <> l var
R42441:42450 Logic <> appears_in ind
R42454:42454 Logic <> l var
R42652:42659 Logic <> ai_later constr
R42668:42674 Logic <> ai_here constr
def 42688:42702 <> appears_example
R42719:42721 Coq.Init.Datatypes <> nat ind
R42724:42733 Logic <> appears_in ind
R42738:42738 Poly <> ::'['_x_','_'..'_','_x_']' not
R42740:42741 Poly <> ::'['_x_','_'..'_','_x_']' not
R42743:42744 Poly <> ::'['_x_','_'..'_','_x_']' not
R42746:42746 Poly <> ::'['_x_','_'..'_','_x_']' not
R42745:42745 Logic <> y var
R42739:42739 Logic <> x var
R42761:42768 Logic <> ai_later constr
R42782:42788 Logic <> ai_here constr
R42792:42792 Poly <> ::'['_x_','_'..'_','_x_']' not
R42794:42794 Poly <> ::'['_x_','_'..'_','_x_']' not
R42793:42793 Logic <> y var
R42774:42774 Poly <> ::'['_x_','_'..'_','_x_']' not
R42776:42777 Poly <> ::'['_x_','_'..'_','_x_']' not
R42779:42779 Poly <> ::'['_x_','_'..'_','_x_']' not
R42778:42778 Logic <> y var
R42772:42772 Logic <> x var
prf 42805:42818 <> appears_in_app
R42847:42850 Poly <> list ind
R42852:42852 Logic <> X var
R42858:42858 Logic <> X var
R42910:42913 Logic <> :type_scope:x_'\/'_x not
R42895:42904 Logic <> appears_in ind
R42908:42909 Logic <> xs var
R42906:42906 Logic <> x var
R42914:42923 Logic <> appears_in ind
R42927:42928 Logic <> ys var
R42925:42925 Logic <> x var
R42868:42877 Logic <> appears_in ind
R42884:42887 Poly <> ::x_'++'_x not
R42882:42883 Logic <> xs var
R42888:42889 Logic <> ys var
R42879:42879 Logic <> x var
R43005:43013 Logic <> or_intror constr
R43005:43013 Logic <> or_intror constr
R43104:43112 Logic <> or_introl constr
R43104:43112 Logic <> or_introl constr
R43121:43127 Logic <> ai_here constr
R43121:43127 Logic <> ai_here constr
R43192:43200 Logic <> or_introl constr
R43192:43200 Logic <> or_introl constr
R43237:43244 Logic <> ai_later constr
R43237:43244 Logic <> ai_later constr
R43287:43295 Logic <> or_intror constr
R43287:43295 Logic <> or_intror constr
prf 43321:43334 <> app_appears_in
R43363:43366 Poly <> list ind
R43368:43368 Logic <> X var
R43374:43374 Logic <> X var
R43422:43431 Logic <> appears_in ind
R43438:43441 Poly <> ::x_'++'_x not
R43436:43437 Logic <> xs var
R43442:43443 Logic <> ys var
R43433:43433 Logic <> x var
R43399:43402 Logic <> :type_scope:x_'\/'_x not
R43384:43393 Logic <> appears_in ind
R43397:43398 Logic <> xs var
R43395:43395 Logic <> x var
R43403:43412 Logic <> appears_in ind
R43416:43417 Logic <> ys var
R43414:43414 Logic <> x var
R43605:43611 Logic <> ai_here constr
R43605:43611 Logic <> ai_here constr
R43638:43640 Poly <> app def
R43649:43656 Logic <> ai_later constr
R43649:43656 Logic <> ai_later constr
R43681:43684 Logic <> :type_scope:x_'\/'_x not
R43667:43676 Logic <> appears_in ind
R43685:43694 Logic <> appears_in ind
R43681:43684 Logic <> :type_scope:x_'\/'_x not
R43667:43676 Logic <> appears_in ind
R43685:43694 Logic <> appears_in ind
R43725:43733 Logic <> or_introl constr
R43725:43733 Logic <> or_introl constr
R43896:43903 Logic <> ai_later constr
R43896:43903 Logic <> ai_later constr
R43928:43931 Logic <> :type_scope:x_'\/'_x not
R43914:43923 Logic <> appears_in ind
R43932:43941 Logic <> appears_in ind
R43928:43931 Logic <> :type_scope:x_'\/'_x not
R43914:43923 Logic <> appears_in ind
R43932:43941 Logic <> appears_in ind
R43974:43982 Logic <> or_intror constr
R43974:43982 Logic <> or_intror constr
def 44242:44249 <> disjoint
R44269:44272 Poly <> list ind
R44274:44274 Logic <> X var
R44293:44293 Logic <> X var
R44315:44317 Logic <> not def
R44320:44329 Logic <> appears_in ind
R44333:44334 Logic <> l2 var
R44331:44331 Logic <> x var
R44296:44305 Logic <> appears_in ind
R44309:44310 Logic <> l1 var
R44307:44307 Logic <> x var
ind 44771:44780 <> no_repeats
constr 44816:44823 <> nil_case
constr 44846:44854 <> head_case
R44795:44798 Poly <> list ind
R44827:44836 Logic <> no_repeats ind
R44840:44842 Poly <> nil constr
R44953:44962 Logic <> no_repeats ind
R44968:44969 Poly <> ::x_'::'_x not
R44967:44967 Logic <> x var
R44970:44970 Logic <> l var
R44891:44900 Logic <> no_repeats ind
R44904:44904 Logic <> l var
R44870:44871 Logic <> :type_scope:'~'_x not
R44886:44886 Logic <> :type_scope:'~'_x not
R44872:44881 Logic <> appears_in ind
R44885:44885 Logic <> l var
R44883:44883 Logic <> x var
prf 45163:45178 <> head_not_appears
R45203:45203 Logic <> X var
R45215:45218 Poly <> list ind
R45220:45220 Logic <> X var
R45257:45258 Logic <> :type_scope:'~'_x not
R45259:45268 Logic <> appears_in ind
R45272:45273 Logic <> l2 var
R45270:45270 Logic <> x var
R45225:45234 Logic <> no_repeats ind
R45239:45239 Poly <> ::x_'++'_x not
R45245:45249 Poly <> ::x_'++'_x not
R45241:45242 Poly <> ::x_'::'_x not
R45240:45240 Logic <> x var
R45243:45244 Logic <> l1 var
R45250:45251 Logic <> l2 var
R45236:45236 Logic <> X var
R45402:45403 Logic <> :type_scope:'~'_x not
R45404:45413 Logic <> appears_in ind
R45420:45421 Poly <> ::x_'++'_x not
R45402:45403 Logic <> :type_scope:'~'_x not
R45404:45413 Logic <> appears_in ind
R45420:45421 Poly <> ::x_'++'_x not
R45435:45437 Logic <> not def
R45455:45464 Logic <> appears_in ind
R45471:45472 Poly <> ::x_'::'_x not
R45475:45476 Poly <> ::x_'++'_x not
R45455:45464 Logic <> appears_in ind
R45471:45472 Poly <> ::x_'::'_x not
R45475:45476 Poly <> ::x_'++'_x not
R45489:45496 Logic <> ai_later constr
R45489:45496 Logic <> ai_later constr
R45516:45518 Logic <> not def
R45572:45580 Logic <> head_case constr
R45572:45580 Logic <> head_case constr
prf 45618:45636 <> disjoint_no_repeats
R45667:45670 Poly <> list ind
R45672:45672 Logic <> X var
R45704:45711 Logic <> disjoint def
R45718:45719 Logic <> l2 var
R45715:45716 Logic <> l1 var
R45713:45713 Logic <> X var
R45677:45686 Logic <> no_repeats ind
R45693:45696 Poly <> ::x_'++'_x not
R45691:45692 Logic <> l1 var
R45697:45698 Logic <> l2 var
R45688:45688 Logic <> X var
R45787:45794 Logic <> disjoint def
R45887:45888 Logic <> :type_scope:'~'_x not
R45889:45898 Logic <> appears_in ind
R45887:45888 Logic <> :type_scope:'~'_x not
R45889:45898 Logic <> appears_in ind
R45913:45928 Logic <> head_not_appears thm
R45913:45928 Logic <> head_not_appears thm
R45962:45969 Logic <> disjoint def
R46063:46070 Logic <> disjoint def
prf 46364:46369 <> O_le_n
R46386:46389 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R46390:46390 Logic <> n var
prf 46440:46455 <> n_le_m__Sn_le_Sm
R46486:46489 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R46483:46483 Coq.Init.Datatypes <> S constr
R46485:46485 Logic <> n var
R46490:46490 Coq.Init.Datatypes <> S constr
R46492:46492 Logic <> m var
R46474:46477 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R46473:46473 Logic <> n var
R46478:46478 Logic <> m var
prf 46543:46558 <> Sn_le_Sm__n_le_m
R46591:46594 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R46590:46590 Logic <> n var
R46595:46595 Logic <> m var
R46579:46582 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R46576:46576 Coq.Init.Datatypes <> S constr
R46578:46578 Logic <> n var
R46583:46583 Coq.Init.Datatypes <> S constr
R46585:46585 Logic <> m var
prf 46701:46709 <> le_plus_l
R46728:46731 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R46727:46727 Logic <> a var
R46733:46735 Basics <> :nat_scope:x_'+'_x not
R46732:46732 Logic <> a var
R46736:46736 Logic <> b var
prf 46787:46793 <> plus_lt
R46838:46841 Logic <> :type_scope:x_'/\'_x not
R46834:46836 Logic <> ::x_'<'_x not
R46832:46833 Logic <> n1 var
R46837:46837 Logic <> m var
R46844:46846 Logic <> ::x_'<'_x not
R46842:46843 Logic <> n2 var
R46847:46847 Logic <> m var
R46822:46824 Logic <> ::x_'<'_x not
R46817:46819 Basics <> :nat_scope:x_'+'_x not
R46815:46816 Logic <> n1 var
R46820:46821 Logic <> n2 var
R46825:46825 Logic <> m var
prf 46897:46900 <> lt_S
R46930:46932 Logic <> ::x_'<'_x not
R46929:46929 Logic <> n var
R46933:46933 Coq.Init.Datatypes <> S constr
R46935:46935 Logic <> m var
R46919:46921 Logic <> ::x_'<'_x not
R46918:46918 Logic <> n var
R46922:46922 Logic <> m var
prf 46985:46996 <> ble_nat_true
R47037:47040 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R47036:47036 Logic <> n var
R47041:47041 Logic <> m var
R47025:47027 Coq.Init.Logic <> :type_scope:x_'='_x not
R47014:47020 Basics <> ble_nat def
R47024:47024 Logic <> m var
R47022:47022 Logic <> n var
R47028:47031 Basics <> true constr
prf 47092:47109 <> ble_nat_n_Sn_false
R47167:47169 Coq.Init.Logic <> :type_scope:x_'='_x not
R47156:47162 Basics <> ble_nat def
R47166:47166 Logic <> m var
R47164:47164 Logic <> n var
R47170:47174 Basics <> false constr
R47142:47144 Coq.Init.Logic <> :type_scope:x_'='_x not
R47127:47133 Basics <> ble_nat def
R47138:47138 Coq.Init.Datatypes <> S constr
R47140:47140 Logic <> m var
R47135:47135 Logic <> n var
R47145:47149 Basics <> false constr
prf 47225:47237 <> ble_nat_false
R47278:47279 Logic <> :type_scope:'~'_x not
R47286:47286 Logic <> :type_scope:'~'_x not
R47281:47284 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R47280:47280 Logic <> n var
R47285:47285 Logic <> m var
R47266:47268 Coq.Init.Logic <> :type_scope:x_'='_x not
R47255:47261 Basics <> ble_nat def
R47265:47265 Logic <> m var
R47263:47263 Logic <> n var
R47269:47273 Basics <> false constr
ind 48019:48027 <> nostutter
constr 48054:48066 <> nil_nostutter
constr 48087:48099 <> one_nostutter
constr 48138:48150 <> two_nostutter
constr 48205:48219 <> heads_nostutter
R48031:48034 Poly <> list ind
R48036:48038 Coq.Init.Datatypes <> nat ind
R48070:48078 Logic <> nostutter ind
R48080:48082 Poly <> nil constr
R48115:48117 Coq.Init.Datatypes <> nat ind
R48121:48129 Logic <> nostutter ind
R48131:48131 Poly <> ::'['_x_','_'..'_','_x_']' not
R48133:48133 Poly <> ::'['_x_','_'..'_','_x_']' not
R48132:48132 Logic <> x var
R48168:48170 Coq.Init.Datatypes <> nat ind
R48186:48194 Logic <> nostutter ind
R48196:48196 Poly <> ::'['_x_','_'..'_','_x_']' not
R48198:48198 Poly <> ::'['_x_','_'..'_','_x_']' not
R48200:48200 Poly <> ::'['_x_','_'..'_','_x_']' not
R48199:48199 Logic <> y var
R48197:48197 Logic <> x var
R48176:48179 Logic <> :type_scope:x_'<>'_x not
R48175:48175 Logic <> x var
R48180:48180 Logic <> y var
R48237:48239 Coq.Init.Datatypes <> nat ind
R48247:48250 Poly <> list ind
R48252:48254 Coq.Init.Datatypes <> nat ind
R48321:48329 Logic <> nostutter ind
R48333:48334 Poly <> ::x_'::'_x not
R48332:48332 Logic <> x var
R48336:48337 Poly <> ::x_'::'_x not
R48335:48335 Logic <> y var
R48338:48338 Logic <> l var
R48311:48314 Logic <> :type_scope:x_'<>'_x not
R48310:48310 Logic <> x var
R48315:48315 Logic <> y var
R48287:48295 Logic <> nostutter ind
R48299:48302 Poly <> ::x_'::'_x not
R48298:48298 Logic <> y var
R48303:48303 Logic <> l var
def 48962:48977 <> test_nostutter_1
R48985:48993 Logic <> nostutter ind
R48995:48995 Poly <> ::'['_x_','_'..'_','_x_']' not
R48997:48997 Poly <> ::'['_x_','_'..'_','_x_']' not
R48999:48999 Poly <> ::'['_x_','_'..'_','_x_']' not
R49001:49001 Poly <> ::'['_x_','_'..'_','_x_']' not
R49003:49003 Poly <> ::'['_x_','_'..'_','_x_']' not
R49005:49005 Poly <> ::'['_x_','_'..'_','_x_']' not
R49007:49007 Poly <> ::'['_x_','_'..'_','_x_']' not
R49043:49058 Logic <> beq_false_not_eq prfax
R49043:49058 Logic <> beq_false_not_eq prfax
R49043:49058 Logic <> beq_false_not_eq prfax
R49043:49058 Logic <> beq_false_not_eq prfax
R49043:49058 Logic <> beq_false_not_eq prfax
R49043:49058 Logic <> beq_false_not_eq prfax
def 49081:49096 <> test_nostutter_2
R49100:49108 Logic <> nostutter ind
R49110:49111 Poly <> ::'['_']' not
R49147:49162 Logic <> beq_false_not_eq prfax
def 49185:49200 <> test_nostutter_3
R49204:49212 Logic <> nostutter ind
R49214:49214 Poly <> ::'['_x_','_'..'_','_x_']' not
R49216:49216 Poly <> ::'['_x_','_'..'_','_x_']' not
R49252:49267 Logic <> beq_false_not_eq prfax
def 49290:49305 <> test_nostutter_4
R49313:49315 Logic <> not def
R49318:49326 Logic <> nostutter ind
R49328:49328 Poly <> ::'['_x_','_'..'_','_x_']' not
R49330:49330 Poly <> ::'['_x_','_'..'_','_x_']' not
R49332:49332 Poly <> ::'['_x_','_'..'_','_x_']' not
R49334:49334 Poly <> ::'['_x_','_'..'_','_x_']' not
R49336:49336 Poly <> ::'['_x_','_'..'_','_x_']' not
R49389:49397 Logic <> nostutter ind
R49389:49397 Logic <> nostutter ind
prf 50027:50036 <> app_length
R50065:50068 Poly <> list ind
R50070:50070 Logic <> X var
R50093:50095 Coq.Init.Logic <> :type_scope:x_'='_x not
R50076:50081 Poly <> length def
R50086:50089 Poly <> ::x_'++'_x not
R50084:50085 Logic <> l1 var
R50090:50091 Logic <> l2 var
R50105:50107 Basics <> :nat_scope:x_'+'_x not
R50096:50101 Poly <> length def
R50103:50104 Logic <> l1 var
R50108:50113 Poly <> length def
R50115:50116 Logic <> l2 var
prf 50261:50280 <> appears_in_app_split
R50303:50303 Logic <> X var
R50309:50312 Poly <> list ind
R50314:50314 Logic <> X var
R50341:50347 Logic <> :type_scope:'exists'_x_','_x not
R50350:50351 Logic <> :type_scope:'exists'_x_','_x not
R50352:50358 Logic <> :type_scope:'exists'_x_','_x not
R50361:50362 Logic <> :type_scope:'exists'_x_','_x not
R50364:50366 Coq.Init.Logic <> :type_scope:x_'='_x not
R50363:50363 Logic <> l var
R50369:50373 Poly <> ::x_'++'_x not
R50379:50379 Poly <> ::x_'++'_x not
R50375:50376 Poly <> ::x_'::'_x not
R50374:50374 Logic <> x var
R50320:50329 Logic <> appears_in ind
R50333:50333 Logic <> l var
R50331:50331 Logic <> x var
R50509:50511 Poly <> nil constr
R50509:50511 Poly <> nil constr
R50716:50717 Poly <> ::x_'::'_x not
R50716:50717 Poly <> ::x_'::'_x not
ind 51014:51020 <> repeats
constr 51054:51064 <> repeat_head
constr 51133:51143 <> repeat_tail
R51033:51036 Poly <> list ind
R51088:51091 Poly <> list ind
R51115:51121 Logic <> repeats ind
R51125:51126 Poly <> ::x_'::'_x not
R51124:51124 Logic <> x var
R51127:51127 Logic <> l var
R51097:51106 Logic <> appears_in ind
R51110:51110 Logic <> l var
R51108:51108 Logic <> x var
R51167:51170 Poly <> list ind
R51189:51195 Logic <> repeats ind
R51199:51200 Poly <> ::x_'::'_x not
R51198:51198 Logic <> x var
R51201:51201 Logic <> l var
R51176:51182 Logic <> repeats ind
R51184:51184 Logic <> l var
prf 51553:51569 <> pigeonhole_helper
R51595:51595 Logic <> X var
R51607:51610 Poly <> list ind
R51612:51612 Logic <> X var
R51654:51663 Logic <> appears_in ind
R51670:51671 Poly <> ::x_'++'_x not
R51668:51669 Logic <> l1 var
R51672:51673 Logic <> l2 var
R51665:51665 Logic <> x var
R51647:51648 Logic <> :type_scope:x_'<>'_x not
R51646:51646 Logic <> x var
R51649:51649 Logic <> y var
R51616:51625 Logic <> appears_in ind
R51632:51634 Poly <> ::x_'++'_x not
R51640:51640 Poly <> ::x_'++'_x not
R51630:51631 Logic <> l1 var
R51636:51637 Poly <> ::x_'::'_x not
R51635:51635 Logic <> y var
R51638:51639 Logic <> l2 var
R51627:51627 Logic <> x var
R51828:51834 Logic <> ai_here constr
R51828:51834 Logic <> ai_here constr
R51862:51869 Logic <> ai_later constr
R51862:51869 Logic <> ai_later constr
prf 51897:51916 <> pigeonhole_principle
R51942:51945 Poly <> list ind
R51947:51947 Logic <> X var
R52056:52062 Logic <> repeats ind
R52064:52065 Logic <> l1 var
R52037:52039 Logic <> ::x_'<'_x not
R52028:52033 Poly <> length def
R52035:52036 Logic <> l2 var
R52040:52045 Poly <> length def
R52047:52048 Logic <> l1 var
R52005:52014 Logic <> appears_in ind
R52018:52019 Logic <> l2 var
R52016:52016 Logic <> x var
R51986:51995 Logic <> appears_in ind
R51999:52000 Logic <> l1 var
R51997:51997 Logic <> x var
R51953:51967 Logic <> excluded_middle def
R52207:52207 Logic <> :type_scope:x_'\/'_x not
R52224:52229 Logic <> :type_scope:x_'\/'_x not
R52248:52248 Logic <> :type_scope:x_'\/'_x not
R52208:52217 Logic <> appears_in ind
R52230:52231 Logic <> :type_scope:'~'_x not
R52232:52241 Logic <> appears_in ind
R52207:52207 Logic <> :type_scope:x_'\/'_x not
R52224:52229 Logic <> :type_scope:x_'\/'_x not
R52248:52248 Logic <> :type_scope:x_'\/'_x not
R52208:52217 Logic <> appears_in ind
R52230:52231 Logic <> :type_scope:'~'_x not
R52232:52241 Logic <> appears_in ind
R52336:52346 Logic <> repeat_head constr
R52336:52346 Logic <> repeat_head constr
R52429:52438 Logic <> appears_in ind
R52429:52438 Logic <> appears_in ind
R52464:52470 Logic <> ai_here constr
R52464:52470 Logic <> ai_here constr
R52489:52508 Logic <> appears_in_app_split thm
R52489:52508 Logic <> appears_in_app_split thm
R52599:52602 Poly <> ::x_'++'_x not
R52599:52602 Poly <> ::x_'++'_x not
R52621:52631 Logic <> repeat_tail constr
R52621:52631 Logic <> repeat_tail constr
R52693:52696 Logic <> :type_scope:x_'<>'_x not
R52693:52696 Logic <> :type_scope:x_'<>'_x not
R52709:52711 Logic <> not def
R52809:52816 Logic <> ai_later constr
R52809:52816 Logic <> ai_later constr
R52890:52906 Logic <> pigeonhole_helper thm
R52890:52906 Logic <> pigeonhole_helper thm
R52984:52993 Logic <> app_length thm
R52984:52993 Logic <> app_length thm
R53036:53044 Induction <> plus_n_Sm thm
R53036:53044 Induction <> plus_n_Sm thm
R53064:53073 Logic <> app_length thm
R53064:53073 Logic <> app_length thm
R53114:53122 Coq.Arith.Lt <> lt_S_n thm
R53114:53122 Coq.Arith.Lt <> lt_S_n thm
ind 53223:53227 <> ptree
constr 53250:53252 <> c11
constr 53276:53278 <> c21
R53266:53270 Logic <> ptree ind
R53304:53308 Logic <> ptree ind
R53293:53297 Logic <> ptree ind
R53282:53286 Logic <> ptree ind
def 53335:53344 <> exam_test1
R53393:53393 Logic <> R var
R53388:53388 Logic <> Q var
R53382:53382 Logic <> R var
R53373:53376 Logic <> :type_scope:x_'\/'_x not
R53372:53372 Logic <> P var
R53377:53377 Logic <> Q var
R53438:53438 Logic <> R var
R53429:53432 Logic <> :type_scope:x_'\/'_x not
R53428:53428 Logic <> P var
R53433:53433 Logic <> Q var
R53444:53444 Logic <> Q var
R53450:53450 Logic <> H var
R53453:53461 Logic <> or_intror constr
R53467:53467 Logic <> X var
R53465:53465 Logic <> Q var
R53463:53463 Logic <> P var
R53477:53480 Coq.Init.Peano <> le_n constr
R53490:53493 Coq.Init.Peano <> le_n constr
