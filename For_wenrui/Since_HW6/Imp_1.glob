DIGEST 7fb8d1a27ff149377fd8f78b5f96696c
FImp_1
R1673:1677 SfLib <> <> lib
mod 2143:2146 <> AExp
ind 2263:2266 AExp aexp
constr 2282:2285 AExp ANum
constr 2305:2309 AExp APlus
constr 2338:2343 AExp AMinus
constr 2372:2376 AExp AMult
R2296:2299 Imp_1 <> aexp ind
R2289:2291 Coq.Init.Datatypes <> nat ind
R2329:2332 Imp_1 <> aexp ind
R2321:2324 Imp_1 <> aexp ind
R2313:2316 Imp_1 <> aexp ind
R2363:2366 Imp_1 <> aexp ind
R2355:2358 Imp_1 <> aexp ind
R2347:2350 Imp_1 <> aexp ind
R2396:2399 Imp_1 <> aexp ind
R2388:2391 Imp_1 <> aexp ind
R2380:2383 Imp_1 <> aexp ind
ind 2413:2416 AExp bexp
constr 2432:2436 AExp BTrue
constr 2449:2454 AExp BFalse
constr 2467:2469 AExp BEq
constr 2498:2500 AExp BLe
constr 2529:2532 AExp BNot
constr 2553:2556 AExp BAnd
R2440:2443 Imp_1 <> bexp ind
R2458:2461 Imp_1 <> bexp ind
R2489:2492 Imp_1 <> bexp ind
R2481:2484 Imp_1 AExp aexp ind
R2473:2476 Imp_1 AExp aexp ind
R2520:2523 Imp_1 <> bexp ind
R2512:2515 Imp_1 AExp aexp ind
R2504:2507 Imp_1 AExp aexp ind
R2544:2547 Imp_1 <> bexp ind
R2536:2539 Imp_1 <> bexp ind
R2576:2579 Imp_1 <> bexp ind
R2568:2571 Imp_1 <> bexp ind
R2560:2563 Imp_1 <> bexp ind
def 5174:5178 AExp aeval
R5185:5188 Imp_1 AExp aexp ind
R5193:5195 Coq.Init.Datatypes <> nat ind
R5208:5208 Imp_1 <> a var
R5219:5222 Imp_1 AExp ANum constr
R5235:5239 Imp_1 AExp APlus constr
R5250:5250 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5259:5263 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5272:5272 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5251:5255 Imp_1 <> aeval def
R5264:5268 Imp_1 <> aeval def
R5278:5283 Imp_1 AExp AMinus constr
R5295:5295 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5304:5308 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5317:5317 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5296:5300 Imp_1 <> aeval def
R5309:5313 Imp_1 <> aeval def
R5323:5327 Imp_1 AExp AMult constr
R5338:5338 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5347:5351 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5360:5360 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5339:5343 Imp_1 <> aeval def
R5352:5356 Imp_1 <> aeval def
def 5378:5388 AExp test_aeval1
R5424:5426 Coq.Init.Logic <> :type_scope:x_'='_x not
R5393:5397 Imp_1 AExp aeval def
R5400:5404 Imp_1 AExp APlus constr
R5416:5419 Imp_1 AExp ANum constr
R5407:5410 Imp_1 AExp ANum constr
def 5534:5538 AExp beval
R5545:5548 Imp_1 AExp bexp ind
R5553:5556 Coq.Init.Datatypes <> bool ind
R5569:5569 Imp_1 <> b var
R5580:5584 Imp_1 AExp BTrue constr
R5595:5598 Coq.Init.Datatypes <> true constr
R5604:5609 Imp_1 AExp BFalse constr
R5619:5623 Coq.Init.Datatypes <> false constr
R5629:5631 Imp_1 AExp BEq constr
R5644:5650 Coq.Arith.EqNat <> beq_nat def
R5664:5668 Imp_1 AExp aeval def
R5653:5657 Imp_1 AExp aeval def
R5678:5680 Imp_1 AExp BLe constr
R5693:5699 SfLib <> ble_nat def
R5713:5717 Imp_1 AExp aeval def
R5702:5706 Imp_1 AExp aeval def
R5727:5730 Imp_1 AExp BNot constr
R5742:5745 Coq.Init.Datatypes <> negb def
R5748:5752 Imp_1 <> beval def
R5762:5765 Imp_1 AExp BAnd constr
R5777:5780 Coq.Init.Datatypes <> andb def
R5794:5798 Imp_1 <> beval def
R5783:5787 Imp_1 <> beval def
def 6197:6210 AExp optimize_0plus
R6215:6218 Imp_1 AExp aexp ind
R6223:6226 Imp_1 AExp aexp ind
R6239:6239 Imp_1 <> a var
R6250:6253 Imp_1 AExp ANum constr
R6266:6269 Imp_1 AExp ANum constr
R6277:6281 Imp_1 AExp APlus constr
R6284:6287 Imp_1 AExp ANum constr
R6304:6317 Imp_1 <> optimize_0plus def
R6326:6330 Imp_1 AExp APlus constr
R6347:6351 Imp_1 AExp APlus constr
R6374:6387 Imp_1 <> optimize_0plus def
R6354:6367 Imp_1 <> optimize_0plus def
R6397:6402 Imp_1 AExp AMinus constr
R6419:6424 Imp_1 AExp AMinus constr
R6447:6460 Imp_1 <> optimize_0plus def
R6427:6440 Imp_1 <> optimize_0plus def
R6470:6474 Imp_1 AExp AMult constr
R6491:6495 Imp_1 AExp AMult constr
R6518:6531 Imp_1 <> optimize_0plus def
R6498:6511 Imp_1 <> optimize_0plus def
def 6684:6702 AExp test_optimize_0plus
R6836:6840 Coq.Init.Logic <> :type_scope:x_'='_x not
R6707:6720 Imp_1 AExp optimize_0plus def
R6723:6727 Imp_1 AExp APlus constr
R6763:6767 Imp_1 AExp APlus constr
R6810:6814 Imp_1 AExp APlus constr
R6826:6829 Imp_1 AExp ANum constr
R6817:6820 Imp_1 AExp ANum constr
R6770:6773 Imp_1 AExp ANum constr
R6730:6733 Imp_1 AExp ANum constr
R6841:6845 Imp_1 AExp APlus constr
R6857:6860 Imp_1 AExp ANum constr
R6848:6851 Imp_1 AExp ANum constr
prf 7080:7099 AExp optimize_0plus_sound
R7138:7140 Coq.Init.Logic <> :type_scope:x_'='_x not
R7114:7118 Imp_1 AExp aeval def
R7121:7134 Imp_1 AExp optimize_0plus def
R7136:7136 Imp_1 <> a var
R7141:7145 Imp_1 AExp aeval def
R7147:7147 Imp_1 <> a var
prf 9253:9257 AExp ev100
R9261:9262 SfLib <> ev ind
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9292:9296 SfLib <> ev_SS constr
R9391:9394 SfLib <> ev_0 constr
R9391:9394 SfLib <> ev_0 constr
prf 9622:9627 AExp ev100'
R9631:9632 SfLib <> ev ind
R9662:9665 SfLib <> ev_0 constr
R9662:9665 SfLib <> ev_0 constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9729:9733 SfLib <> ev_SS constr
R9743:9746 SfLib <> ev_0 constr
R9743:9746 SfLib <> ev_0 constr
prf 10397:10402 AExp silly1
R10425:10427 Coq.Init.Logic <> :type_scope:x_'='_x not
R10417:10421 Imp_1 AExp aeval def
R10423:10424 Imp_1 <> ae var
R10428:10432 Imp_1 AExp aeval def
R10434:10435 Imp_1 <> ae var
prf 10511:10516 AExp silly2
R10544:10544 Imp_1 <> P var
R10539:10539 Imp_1 <> P var
prf 11260:11262 AExp foo
R11287:11289 Coq.Init.Logic <> :type_scope:x_'='_x not
R11276:11282 SfLib <> ble_nat def
R11286:11286 Imp_1 <> n var
R11290:11293 Coq.Init.Datatypes <> true constr
prf 11540:11543 AExp foo'
R11568:11570 Coq.Init.Logic <> :type_scope:x_'='_x not
R11557:11563 SfLib <> ble_nat def
R11567:11567 Imp_1 <> n var
R11571:11574 Coq.Init.Datatypes <> true constr
prf 11905:11925 AExp optimize_0plus_sound'
R11964:11966 Coq.Init.Logic <> :type_scope:x_'='_x not
R11940:11944 Imp_1 AExp aeval def
R11947:11960 Imp_1 AExp optimize_0plus def
R11962:11962 Imp_1 <> a var
R11967:11971 Imp_1 AExp aeval def
R11973:11973 Imp_1 <> a var
prf 14753:14774 AExp optimize_0plus_sound''
R14813:14815 Coq.Init.Logic <> :type_scope:x_'='_x not
R14789:14793 Imp_1 AExp aeval def
R14796:14809 Imp_1 AExp optimize_0plus def
R14811:14811 Imp_1 <> a var
R14816:14820 Imp_1 AExp aeval def
R14822:14822 Imp_1 <> a var
prf 19349:19371 AExp optimize_0plus_sound'''
R19410:19412 Coq.Init.Logic <> :type_scope:x_'='_x not
R19386:19390 Imp_1 AExp aeval def
R19393:19406 Imp_1 AExp optimize_0plus def
R19408:19408 Imp_1 <> a var
R19413:19417 Imp_1 AExp aeval def
R19419:19419 Imp_1 <> a var
def 20669:20684 AExp optimize_0plus_b
R20691:20694 Imp_1 AExp bexp ind
R20699:20702 Imp_1 AExp bexp ind
R20715:20715 Imp_1 <> b var
R20726:20730 Imp_1 AExp BTrue constr
R20741:20745 Imp_1 AExp BTrue constr
R20751:20756 Imp_1 AExp BFalse constr
R20766:20771 Imp_1 AExp BFalse constr
R20777:20779 Imp_1 AExp BEq constr
R20792:20794 Imp_1 AExp BEq constr
R20817:20830 Imp_1 AExp optimize_0plus def
R20797:20810 Imp_1 AExp optimize_0plus def
R20840:20842 Imp_1 AExp BLe constr
R20855:20857 Imp_1 AExp BLe constr
R20880:20893 Imp_1 AExp optimize_0plus def
R20860:20873 Imp_1 AExp optimize_0plus def
R20903:20906 Imp_1 AExp BNot constr
R20918:20921 Imp_1 AExp BNot constr
R20924:20939 Imp_1 <> optimize_0plus_b def
R20949:20952 Imp_1 AExp BAnd constr
R20964:20967 Imp_1 AExp BAnd constr
R20992:21007 Imp_1 <> optimize_0plus_b def
R20970:20985 Imp_1 <> optimize_0plus_b def
prf 21222:21243 AExp optimize_0plus_b_sound
R21285:21287 Coq.Init.Logic <> :type_scope:x_'='_x not
R21259:21263 Imp_1 AExp beval def
R21266:21281 Imp_1 AExp optimize_0plus_b def
R21283:21283 Imp_1 <> b var
R21288:21292 Imp_1 AExp beval def
R21294:21294 Imp_1 <> b var
R21374:21393 Imp_1 AExp optimize_0plus_sound thm
R21374:21393 Imp_1 AExp optimize_0plus_sound thm
R21374:21393 Imp_1 AExp optimize_0plus_sound thm
R21374:21393 Imp_1 AExp optimize_0plus_sound thm
R21374:21393 Imp_1 AExp optimize_0plus_sound thm
R21374:21393 Imp_1 AExp optimize_0plus_sound thm
R21374:21393 Imp_1 AExp optimize_0plus_sound thm
R21374:21393 Imp_1 AExp optimize_0plus_sound thm
R21374:21393 Imp_1 AExp optimize_0plus_sound thm
R21374:21393 Imp_1 AExp optimize_0plus_sound thm
R21374:21393 Imp_1 AExp optimize_0plus_sound thm
def 22629:22652 AExp silly_presburger_example
R22712:22715 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22711:22711 Imp_1 <> m var
R22716:22716 Imp_1 <> p var
R22688:22691 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22679:22682 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22675:22677 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22674:22674 Imp_1 <> m var
R22678:22678 Imp_1 <> n var
R22684:22686 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22683:22683 Imp_1 <> n var
R22687:22687 Imp_1 <> o var
R22697:22699 Coq.Init.Logic <> :type_scope:x_'='_x not
R22693:22695 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22692:22692 Imp_1 <> o var
R22701:22703 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22700:22700 Imp_1 <> p var
mod 24793:24808 <> AExp.aevalR_first_try
ind 24822:24827 AExp.aevalR_first_try aevalR
constr 24858:24863 AExp.aevalR_first_try E_ANum
constr 24913:24919 AExp.aevalR_first_try E_APlus
constr 25043:25050 AExp.aevalR_first_try E_AMinus
constr 25174:25180 AExp.aevalR_first_try E_AMult
R24839:24841 Coq.Init.Datatypes <> nat ind
R24831:24834 Imp_1 AExp.aevalR_first_try aexp ind
R24879:24881 Coq.Init.Datatypes <> nat ind
R24891:24896 Imp_1 <> aevalR ind
R24907:24907 Imp_1 <> n var
R24899:24902 Imp_1 AExp.aevalR_first_try ANum constr
R24904:24904 Imp_1 <> n var
R24938:24941 Imp_1 AExp.aevalR_first_try aexp ind
R24952:24954 Coq.Init.Datatypes <> nat ind
R25008:25013 Imp_1 <> aevalR ind
R25032:25034 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R25030:25031 Imp_1 <> n1 var
R25035:25036 Imp_1 <> n2 var
R25016:25020 Imp_1 AExp.aevalR_first_try APlus constr
R25025:25026 Imp_1 <> e2 var
R25022:25023 Imp_1 <> e1 var
R24986:24991 Imp_1 <> aevalR ind
R24996:24997 Imp_1 <> n2 var
R24993:24994 Imp_1 <> e2 var
R24964:24969 Imp_1 <> aevalR ind
R24974:24975 Imp_1 <> n1 var
R24971:24972 Imp_1 <> e1 var
R25068:25071 Imp_1 AExp.aevalR_first_try aexp ind
R25082:25084 Coq.Init.Datatypes <> nat ind
R25138:25143 Imp_1 <> aevalR ind
R25163:25165 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R25161:25162 Imp_1 <> n1 var
R25166:25167 Imp_1 <> n2 var
R25146:25151 Imp_1 AExp.aevalR_first_try AMinus constr
R25156:25157 Imp_1 <> e2 var
R25153:25154 Imp_1 <> e1 var
R25116:25121 Imp_1 <> aevalR ind
R25126:25127 Imp_1 <> n2 var
R25123:25124 Imp_1 <> e2 var
R25094:25099 Imp_1 <> aevalR ind
R25104:25105 Imp_1 <> n1 var
R25101:25102 Imp_1 <> e1 var
R25199:25202 Imp_1 AExp.aevalR_first_try aexp ind
R25213:25215 Coq.Init.Datatypes <> nat ind
R25269:25274 Imp_1 <> aevalR ind
R25293:25295 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25291:25292 Imp_1 <> n1 var
R25296:25297 Imp_1 <> n2 var
R25277:25281 Imp_1 AExp.aevalR_first_try AMult constr
R25286:25287 Imp_1 <> e2 var
R25283:25284 Imp_1 <> e1 var
R25247:25252 Imp_1 <> aevalR ind
R25257:25258 Imp_1 <> n2 var
R25254:25255 Imp_1 <> e2 var
R25225:25230 Imp_1 <> aevalR ind
R25235:25236 Imp_1 <> n1 var
R25232:25233 Imp_1 <> e1 var
R25856:25861 Imp_1 AExp.aevalR_first_try aevalR ind
not 25841 AExp.aevalR_first_try :type_scope:x_'||'_x
R25887:25902 Imp_1 aevalR_first_try <> mod
ind 26406:26411 AExp aevalR
constr 26442:26447 AExp E_ANum
constr 26491:26497 AExp E_APlus
constr 26602:26609 AExp E_AMinus
constr 26715:26721 AExp E_AMult
R26423:26425 Coq.Init.Datatypes <> nat ind
R26415:26418 Imp_1 AExp aexp ind
R26847:26852 Imp_1 <> aevalR ind
R26461:26463 Coq.Init.Datatypes <> nat ind
R26473:26473 Imp_1 AExp :type_scope:x_'||'_x not
R26480:26484 Imp_1 AExp :type_scope:x_'||'_x not
R26474:26477 Imp_1 AExp ANum constr
R26479:26479 Imp_1 <> n var
R26485:26485 Imp_1 <> n var
R26516:26519 Imp_1 AExp aexp ind
R26531:26533 Coq.Init.Datatypes <> nat ind
R26571:26571 Imp_1 AExp :type_scope:x_'||'_x not
R26583:26588 Imp_1 AExp :type_scope:x_'||'_x not
R26596:26596 Imp_1 AExp :type_scope:x_'||'_x not
R26572:26576 Imp_1 AExp APlus constr
R26581:26582 Imp_1 <> e2 var
R26578:26579 Imp_1 <> e1 var
R26591:26593 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26589:26590 Imp_1 <> n1 var
R26594:26595 Imp_1 <> n2 var
R26560:26563 Imp_1 AExp :type_scope:x_'||'_x not
R26558:26559 Imp_1 <> e2 var
R26564:26565 Imp_1 <> n2 var
R26546:26549 Imp_1 AExp :type_scope:x_'||'_x not
R26544:26545 Imp_1 <> e1 var
R26550:26551 Imp_1 <> n1 var
R26628:26631 Imp_1 AExp aexp ind
R26643:26645 Coq.Init.Datatypes <> nat ind
R26683:26683 Imp_1 AExp :type_scope:x_'||'_x not
R26696:26701 Imp_1 AExp :type_scope:x_'||'_x not
R26709:26709 Imp_1 AExp :type_scope:x_'||'_x not
R26684:26689 Imp_1 AExp AMinus constr
R26694:26695 Imp_1 <> e2 var
R26691:26692 Imp_1 <> e1 var
R26704:26706 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R26702:26703 Imp_1 <> n1 var
R26707:26708 Imp_1 <> n2 var
R26672:26675 Imp_1 AExp :type_scope:x_'||'_x not
R26670:26671 Imp_1 <> e2 var
R26676:26677 Imp_1 <> n2 var
R26658:26661 Imp_1 AExp :type_scope:x_'||'_x not
R26656:26657 Imp_1 <> e1 var
R26662:26663 Imp_1 <> n1 var
R26741:26744 Imp_1 AExp aexp ind
R26756:26758 Coq.Init.Datatypes <> nat ind
R26796:26796 Imp_1 AExp :type_scope:x_'||'_x not
R26808:26813 Imp_1 AExp :type_scope:x_'||'_x not
R26821:26821 Imp_1 AExp :type_scope:x_'||'_x not
R26797:26801 Imp_1 AExp AMult constr
R26806:26807 Imp_1 <> e2 var
R26803:26804 Imp_1 <> e1 var
R26816:26818 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26814:26815 Imp_1 <> n1 var
R26819:26820 Imp_1 <> n2 var
R26785:26788 Imp_1 AExp :type_scope:x_'||'_x not
R26783:26784 Imp_1 <> e2 var
R26789:26790 Imp_1 <> n2 var
R26771:26774 Imp_1 AExp :type_scope:x_'||'_x not
R26769:26770 Imp_1 <> e1 var
R26775:26776 Imp_1 <> n1 var
R26847:26852 Imp_1 AExp aevalR ind
not 26832 AExp :type_scope:x_'||'_x
prf 29892:29907 AExp aeval_iff_aevalR
R29925:29925 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R29932:29937 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R29927:29930 Imp_1 AExp :type_scope:x_'||'_x not
R29926:29926 Imp_1 <> a var
R29931:29931 Imp_1 <> n var
R29945:29947 Coq.Init.Logic <> :type_scope:x_'='_x not
R29938:29942 Imp_1 AExp aeval def
R29944:29944 Imp_1 <> a var
R29948:29948 Imp_1 <> n var
R30437:30442 Imp_1 AExp E_ANum constr
R30437:30442 Imp_1 AExp E_ANum constr
R30474:30480 Imp_1 AExp E_APlus constr
R30474:30480 Imp_1 AExp E_APlus constr
R30575:30582 Imp_1 AExp E_AMinus constr
R30575:30582 Imp_1 AExp E_AMinus constr
R30676:30682 Imp_1 AExp E_AMult constr
R30676:30682 Imp_1 AExp E_AMult constr
prf 30850:30866 AExp aeval_iff_aevalR'
R30884:30884 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30891:30896 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30886:30889 Imp_1 AExp :type_scope:x_'||'_x not
R30885:30885 Imp_1 <> a var
R30890:30890 Imp_1 <> n var
R30904:30906 Coq.Init.Logic <> :type_scope:x_'='_x not
R30897:30901 Imp_1 AExp aeval def
R30903:30903 Imp_1 <> a var
R30907:30907 Imp_1 <> n var
ind 31323:31328 AExp bevalR
constr 31378:31383 AExp BETrue
constr 31409:31415 AExp BEFalse
constr 31443:31446 AExp BEEq
constr 31557:31560 AExp BELe
constr 31671:31675 AExp BENot
constr 31754:31758 AExp BEAnd
R31358:31361 Coq.Init.Datatypes <> bool ind
R31350:31353 Imp_1 AExp bexp ind
R31387:31392 Imp_1 <> bevalR ind
R31400:31403 Coq.Init.Datatypes <> true constr
R31394:31398 Imp_1 AExp BTrue constr
R31419:31424 Imp_1 <> bevalR ind
R31433:31437 Coq.Init.Datatypes <> false constr
R31426:31431 Imp_1 AExp BFalse constr
R31517:31522 Imp_1 <> bevalR ind
R31538:31544 Coq.Arith.EqNat <> beq_nat def
R31549:31550 Imp_1 <> n2 var
R31546:31547 Imp_1 <> n1 var
R31526:31528 Imp_1 AExp BEq constr
R31533:31534 Imp_1 <> a2 var
R31530:31531 Imp_1 <> a1 var
R31496:31501 Imp_1 AExp aevalR ind
R31507:31508 Imp_1 <> n2 var
R31504:31505 Imp_1 <> a2 var
R31475:31480 Imp_1 AExp aevalR ind
R31486:31487 Imp_1 <> n1 var
R31483:31484 Imp_1 <> a1 var
R31631:31636 Imp_1 <> bevalR ind
R31652:31658 SfLib <> ble_nat def
R31663:31664 Imp_1 <> n2 var
R31660:31661 Imp_1 <> n1 var
R31640:31642 Imp_1 AExp BLe constr
R31647:31648 Imp_1 <> a2 var
R31644:31645 Imp_1 <> a1 var
R31610:31615 Imp_1 AExp aevalR ind
R31621:31622 Imp_1 <> n2 var
R31618:31619 Imp_1 <> a2 var
R31589:31594 Imp_1 AExp aevalR ind
R31600:31601 Imp_1 <> n1 var
R31597:31598 Imp_1 <> a1 var
R31721:31726 Imp_1 <> bevalR ind
R31740:31743 Coq.Init.Datatypes <> negb def
R31745:31747 Imp_1 <> tv1 var
R31730:31733 Imp_1 AExp BNot constr
R31735:31736 Imp_1 <> b1 var
R31699:31704 Imp_1 <> bevalR ind
R31710:31712 Imp_1 <> tv1 var
R31707:31708 Imp_1 <> b1 var
R31833:31838 Imp_1 <> bevalR ind
R31855:31858 Coq.Init.Datatypes <> andb def
R31864:31866 Imp_1 <> tv2 var
R31860:31862 Imp_1 <> tv1 var
R31842:31845 Imp_1 AExp BAnd constr
R31850:31851 Imp_1 <> b2 var
R31847:31848 Imp_1 <> b1 var
R31811:31816 Imp_1 <> bevalR ind
R31822:31824 Imp_1 <> tv2 var
R31819:31820 Imp_1 <> b2 var
R31789:31794 Imp_1 <> bevalR ind
R31800:31802 Imp_1 <> tv1 var
R31797:31798 Imp_1 <> b1 var
prf 32078:32093 AExp beval_iff_bevalR
R32123:32127 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R32112:32117 Imp_1 AExp bevalR ind
R32121:32122 Imp_1 <> bv var
R32119:32119 Imp_1 <> b var
R32135:32137 Coq.Init.Logic <> :type_scope:x_'='_x not
R32128:32132 Imp_1 AExp beval def
R32134:32134 Imp_1 <> b var
R32138:32139 Imp_1 <> bv var
R32262:32277 Imp_1 AExp aeval_iff_aevalR thm
R32262:32277 Imp_1 AExp aeval_iff_aevalR thm
R32262:32277 Imp_1 AExp aeval_iff_aevalR thm
R32262:32277 Imp_1 AExp aeval_iff_aevalR thm
R32458:32473 Imp_1 AExp aeval_iff_aevalR thm
R32458:32473 Imp_1 AExp aeval_iff_aevalR thm
R32458:32473 Imp_1 AExp aeval_iff_aevalR thm
R32458:32473 Imp_1 AExp aeval_iff_aevalR thm
R32458:32473 Imp_1 AExp aeval_iff_aevalR thm
R32458:32473 Imp_1 AExp aeval_iff_aevalR thm
R32458:32473 Imp_1 AExp aeval_iff_aevalR thm
R32458:32473 Imp_1 AExp aeval_iff_aevalR thm
R32559:32562 Imp_1 <> <> mod
mod 33386:33400 <> aevalR_division
ind 33539:33542 aevalR_division aexp
constr 33558:33561 aevalR_division ANum
constr 33581:33585 aevalR_division APlus
constr 33614:33619 aevalR_division AMinus
constr 33648:33652 aevalR_division AMult
constr 33681:33684 aevalR_division ADiv
R33572:33575 Imp_1 <> aexp ind
R33565:33567 Coq.Init.Datatypes <> nat ind
R33605:33608 Imp_1 <> aexp ind
R33597:33600 Imp_1 <> aexp ind
R33589:33592 Imp_1 <> aexp ind
R33639:33642 Imp_1 <> aexp ind
R33631:33634 Imp_1 <> aexp ind
R33623:33626 Imp_1 <> aexp ind
R33672:33675 Imp_1 <> aexp ind
R33664:33667 Imp_1 <> aexp ind
R33656:33659 Imp_1 <> aexp ind
R33704:33707 Imp_1 <> aexp ind
R33696:33699 Imp_1 <> aexp ind
R33688:33691 Imp_1 <> aexp ind
ind 33964:33969 aevalR_division aevalR
constr 34000:34005 aevalR_division E_ANum
constr 34049:34055 aevalR_division E_APlus
constr 34160:34167 aevalR_division E_AMinus
constr 34273:34279 aevalR_division E_AMult
constr 34385:34390 aevalR_division E_ADiv
R33981:33983 Coq.Init.Datatypes <> nat ind
R33973:33976 Imp_1 aevalR_division aexp ind
R34529:34534 Imp_1 <> aevalR ind
R34019:34021 Coq.Init.Datatypes <> nat ind
R34031:34031 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34038:34042 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34032:34035 Imp_1 aevalR_division ANum constr
R34037:34037 Imp_1 <> n var
R34043:34043 Imp_1 <> n var
R34074:34077 Imp_1 aevalR_division aexp ind
R34089:34091 Coq.Init.Datatypes <> nat ind
R34129:34129 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34141:34146 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34154:34154 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34130:34134 Imp_1 aevalR_division APlus constr
R34139:34140 Imp_1 <> a2 var
R34136:34137 Imp_1 <> a1 var
R34149:34151 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34147:34148 Imp_1 <> n1 var
R34152:34153 Imp_1 <> n2 var
R34118:34121 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34116:34117 Imp_1 <> a2 var
R34122:34123 Imp_1 <> n2 var
R34104:34107 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34102:34103 Imp_1 <> a1 var
R34108:34109 Imp_1 <> n1 var
R34186:34189 Imp_1 aevalR_division aexp ind
R34201:34203 Coq.Init.Datatypes <> nat ind
R34241:34241 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34254:34259 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34267:34267 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34242:34247 Imp_1 aevalR_division AMinus constr
R34252:34253 Imp_1 <> a2 var
R34249:34250 Imp_1 <> a1 var
R34262:34264 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R34260:34261 Imp_1 <> n1 var
R34265:34266 Imp_1 <> n2 var
R34230:34233 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34228:34229 Imp_1 <> a2 var
R34234:34235 Imp_1 <> n2 var
R34216:34219 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34214:34215 Imp_1 <> a1 var
R34220:34221 Imp_1 <> n1 var
R34299:34302 Imp_1 aevalR_division aexp ind
R34314:34316 Coq.Init.Datatypes <> nat ind
R34354:34354 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34366:34371 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34379:34379 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34355:34359 Imp_1 aevalR_division AMult constr
R34364:34365 Imp_1 <> a2 var
R34361:34362 Imp_1 <> a1 var
R34374:34376 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R34372:34373 Imp_1 <> n1 var
R34377:34378 Imp_1 <> n2 var
R34343:34346 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34341:34342 Imp_1 <> a2 var
R34347:34348 Imp_1 <> n2 var
R34329:34332 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34327:34328 Imp_1 <> a1 var
R34333:34334 Imp_1 <> n1 var
R34410:34413 Imp_1 aevalR_division aexp ind
R34427:34429 Coq.Init.Datatypes <> nat ind
R34488:34488 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34499:34503 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34489:34492 Imp_1 aevalR_division ADiv constr
R34497:34498 Imp_1 <> a2 var
R34494:34495 Imp_1 <> a1 var
R34504:34505 Imp_1 <> n3 var
R34478:34480 Coq.Init.Logic <> :type_scope:x_'='_x not
R34468:34471 Coq.Init.Peano <> mult def
R34476:34477 Imp_1 <> n3 var
R34473:34474 Imp_1 <> n2 var
R34481:34482 Imp_1 <> n1 var
R34456:34459 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34454:34455 Imp_1 <> a2 var
R34460:34461 Imp_1 <> n2 var
R34442:34445 Imp_1 aevalR_division :type_scope:x_'||'_x not
R34440:34441 Imp_1 <> a1 var
R34446:34447 Imp_1 <> n1 var
R34529:34534 Imp_1 aevalR_division aevalR ind
not 34514 aevalR_division :type_scope:x_'||'_x
R34560:34574 Imp_1 <> <> mod
mod 34584:34598 <> aevalR_extended
ind 34612:34615 aevalR_extended aexp
constr 34631:34634 aevalR_extended AAny
constr 34681:34684 aevalR_extended ANum
constr 34704:34708 aevalR_extended APlus
constr 34737:34742 aevalR_extended AMinus
constr 34771:34775 aevalR_extended AMult
R34639:34642 Imp_1 <> aexp ind
R34695:34698 Imp_1 <> aexp ind
R34688:34690 Coq.Init.Datatypes <> nat ind
R34728:34731 Imp_1 <> aexp ind
R34720:34723 Imp_1 <> aexp ind
R34712:34715 Imp_1 <> aexp ind
R34762:34765 Imp_1 <> aexp ind
R34754:34757 Imp_1 <> aexp ind
R34746:34749 Imp_1 <> aexp ind
R34795:34798 Imp_1 <> aexp ind
R34787:34790 Imp_1 <> aexp ind
R34779:34782 Imp_1 <> aexp ind
ind 34991:34996 aevalR_extended aevalR
constr 35027:35031 aevalR_extended E_Any
constr 35102:35107 aevalR_extended E_ANum
constr 35151:35157 aevalR_extended E_APlus
constr 35262:35269 aevalR_extended E_AMinus
constr 35375:35381 aevalR_extended E_AMult
R35008:35010 Coq.Init.Datatypes <> nat ind
R35000:35003 Imp_1 aevalR_extended aexp ind
R35505:35510 Imp_1 <> aevalR ind
R35045:35047 Coq.Init.Datatypes <> nat ind
R35061:35064 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35057:35060 Imp_1 aevalR_extended AAny constr
R35065:35065 Imp_1 <> n var
R35121:35123 Coq.Init.Datatypes <> nat ind
R35133:35133 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35140:35144 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35134:35137 Imp_1 aevalR_extended ANum constr
R35139:35139 Imp_1 <> n var
R35145:35145 Imp_1 <> n var
R35176:35179 Imp_1 aevalR_extended aexp ind
R35191:35193 Coq.Init.Datatypes <> nat ind
R35231:35231 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35243:35248 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35256:35256 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35232:35236 Imp_1 aevalR_extended APlus constr
R35241:35242 Imp_1 <> a2 var
R35238:35239 Imp_1 <> a1 var
R35251:35253 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35249:35250 Imp_1 <> n1 var
R35254:35255 Imp_1 <> n2 var
R35220:35223 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35218:35219 Imp_1 <> a2 var
R35224:35225 Imp_1 <> n2 var
R35206:35209 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35204:35205 Imp_1 <> a1 var
R35210:35211 Imp_1 <> n1 var
R35288:35291 Imp_1 aevalR_extended aexp ind
R35303:35305 Coq.Init.Datatypes <> nat ind
R35343:35343 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35356:35361 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35369:35369 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35344:35349 Imp_1 aevalR_extended AMinus constr
R35354:35355 Imp_1 <> a2 var
R35351:35352 Imp_1 <> a1 var
R35364:35366 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R35362:35363 Imp_1 <> n1 var
R35367:35368 Imp_1 <> n2 var
R35332:35335 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35330:35331 Imp_1 <> a2 var
R35336:35337 Imp_1 <> n2 var
R35318:35321 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35316:35317 Imp_1 <> a1 var
R35322:35323 Imp_1 <> n1 var
R35401:35404 Imp_1 aevalR_extended aexp ind
R35416:35418 Coq.Init.Datatypes <> nat ind
R35456:35456 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35468:35473 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35481:35481 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35457:35461 Imp_1 aevalR_extended AMult constr
R35466:35467 Imp_1 <> a2 var
R35463:35464 Imp_1 <> a1 var
R35476:35478 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R35474:35475 Imp_1 <> n1 var
R35479:35480 Imp_1 <> n2 var
R35445:35448 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35443:35444 Imp_1 <> a2 var
R35449:35450 Imp_1 <> n2 var
R35431:35434 Imp_1 aevalR_extended :type_scope:x_'||'_x not
R35429:35430 Imp_1 <> a1 var
R35435:35436 Imp_1 <> n1 var
R35505:35510 Imp_1 aevalR_extended aevalR ind
not 35490 aevalR_extended :type_scope:x_'||'_x
R35536:35550 Imp_1 <> <> mod
mod 36382:36383 <> Id
ind 36499:36500 Id id
constr 36514:36515 Id Id
R36526:36527 Imp_1 <> id ind
R36519:36521 Coq.Init.Datatypes <> nat ind
def 36542:36547 Id beq_id
R36566:36566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36569:36570 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36573:36573 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36567:36568 Imp_1 <> x1 var
R36571:36572 Imp_1 <> x2 var
R36584:36584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36590:36591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36597:36597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36585:36586 Imp_1 Id Id constr
R36592:36593 Imp_1 Id Id constr
R36602:36608 Coq.Arith.EqNat <> beq_nat def
prf 37079:37089 Id beq_id_refl
R37109:37111 Coq.Init.Logic <> :type_scope:x_'='_x not
R37105:37108 Coq.Init.Datatypes <> true constr
R37112:37117 Imp_1 Id beq_id def
R37121:37121 Imp_1 <> x var
R37119:37119 Imp_1 <> x var
R37161:37172 Coq.Arith.EqNat <> beq_nat_refl thm
R37161:37172 Coq.Arith.EqNat <> beq_nat_refl thm
prf 37439:37447 Id beq_id_eq
R37492:37494 Coq.Init.Logic <> :type_scope:x_'='_x not
R37490:37491 Imp_1 <> i1 var
R37495:37496 Imp_1 <> i2 var
R37471:37473 Coq.Init.Logic <> :type_scope:x_'='_x not
R37467:37470 Coq.Init.Datatypes <> true constr
R37474:37479 Imp_1 Id beq_id def
R37484:37485 Imp_1 <> i2 var
R37481:37482 Imp_1 <> i1 var
R37578:37587 Coq.Arith.EqNat <> beq_nat_eq def
R37578:37587 Coq.Arith.EqNat <> beq_nat_eq def
prf 37703:37721 Id beq_id_false_not_eq
R37767:37770 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37765:37766 Imp_1 <> i1 var
R37771:37772 Imp_1 <> i2 var
R37753:37755 Coq.Init.Logic <> :type_scope:x_'='_x not
R37741:37746 Imp_1 Id beq_id def
R37751:37752 Imp_1 <> i2 var
R37748:37749 Imp_1 <> i1 var
R37756:37760 Coq.Init.Datatypes <> false constr
R37854:37866 Coq.Arith.EqNat <> beq_nat_false thm
R37854:37866 Coq.Arith.EqNat <> beq_nat_false thm
prf 38007:38025 Id not_eq_beq_id_false
R38069:38071 Coq.Init.Logic <> :type_scope:x_'='_x not
R38057:38062 Imp_1 Id beq_id def
R38067:38068 Imp_1 <> i2 var
R38064:38065 Imp_1 <> i1 var
R38072:38076 Coq.Init.Datatypes <> false constr
R38047:38050 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R38045:38046 Imp_1 <> i1 var
R38051:38052 Imp_1 <> i2 var
R38161:38164 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R38161:38164 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R38221:38236 SfLib <> not_eq_beq_false prfax
R38221:38236 SfLib <> not_eq_beq_false prfax
prf 38328:38337 Id beq_id_sym
R38368:38370 Coq.Init.Logic <> :type_scope:x_'='_x not
R38356:38361 Imp_1 Id beq_id def
R38366:38367 Imp_1 <> i2 var
R38363:38364 Imp_1 <> i1 var
R38371:38376 Imp_1 Id beq_id def
R38381:38382 Imp_1 <> i1 var
R38378:38379 Imp_1 <> i2 var
R38458:38468 SfLib <> beq_nat_sym prfax
R38458:38468 SfLib <> beq_nat_sym prfax
R38491:38492 Imp_1 <> <> mod
def 38907:38911 <> state
R38922:38924 Coq.Init.Datatypes <> nat ind
R38916:38917 SfLib <> id ind
def 38939:38949 <> empty_state
R38953:38957 Imp_1 <> state def
def 38988:38993 <> update
R39001:39005 Imp_1 <> state def
R39013:39014 SfLib <> id ind
R39022:39024 Coq.Init.Datatypes <> nat ind
R39029:39033 Imp_1 <> state def
R39053:39058 SfLib <> beq_id def
R39062:39063 Imp_1 <> x' var
R39060:39060 Imp_1 <> x var
R39077:39078 Imp_1 <> st var
R39080:39081 Imp_1 <> x' var
R39070:39070 Imp_1 <> n var
prf 39225:39233 <> update_eq
R39271:39273 Coq.Init.Logic <> :type_scope:x_'='_x not
R39255:39260 Imp_1 <> update def
R39267:39267 Imp_1 <> n var
R39265:39265 Imp_1 <> x var
R39262:39263 Imp_1 <> st var
R39270:39270 Imp_1 <> x var
R39274:39274 Imp_1 <> n var
R39328:39333 Imp_1 <> update def
R39349:39359 SfLib <> beq_id_refl thm
R39349:39359 SfLib <> beq_id_refl thm
prf 39443:39452 <> update_neq
R39522:39525 Coq.Init.Logic <> :type_scope:x_'='_x not
R39531:39531 Coq.Init.Logic <> :type_scope:x_'='_x not
R39504:39509 Imp_1 <> update def
R39517:39517 Imp_1 <> n var
R39514:39515 Imp_1 <> x2 var
R39511:39512 Imp_1 <> st var
R39520:39521 Imp_1 <> x1 var
R39526:39527 Imp_1 <> st var
R39529:39530 Imp_1 <> x1 var
R39489:39491 Coq.Init.Logic <> :type_scope:x_'='_x not
R39477:39482 SfLib <> beq_id def
R39487:39488 Imp_1 <> x1 var
R39484:39485 Imp_1 <> x2 var
R39492:39496 Coq.Init.Datatypes <> false constr
R39594:39599 Imp_1 <> update def
prf 39817:39830 <> update_example
R39844:39846 Coq.Init.Datatypes <> nat ind
R39888:39890 Coq.Init.Logic <> :type_scope:x_'='_x not
R39853:39858 Imp_1 <> update def
R39879:39879 Imp_1 <> n var
R39873:39874 SfLib <> Id constr
R39860:39870 Imp_1 <> empty_state def
R39883:39884 SfLib <> Id constr
prf 40004:40016 <> update_shadow
R40045:40049 Imp_1 <> state def
R40092:40094 Coq.Init.Logic <> :type_scope:x_'='_x not
R40057:40062 Imp_1 <> update def
R40086:40087 Imp_1 <> n2 var
R40083:40084 Imp_1 <> x2 var
R40066:40071 Imp_1 <> update def
R40079:40080 Imp_1 <> n1 var
R40076:40077 Imp_1 <> x2 var
R40073:40074 Imp_1 <> st var
R40090:40091 Imp_1 <> x1 var
R40096:40101 Imp_1 <> update def
R40109:40110 Imp_1 <> n2 var
R40106:40107 Imp_1 <> x2 var
R40103:40104 Imp_1 <> st var
R40113:40114 Imp_1 <> x1 var
R40176:40181 Imp_1 <> update def
R40196:40201 SfLib <> beq_id def
R40196:40201 SfLib <> beq_id def
prf 40293:40303 <> update_same
R40329:40333 Imp_1 <> state def
R40375:40377 Coq.Init.Logic <> :type_scope:x_'='_x not
R40356:40361 Imp_1 <> update def
R40369:40370 Imp_1 <> n1 var
R40366:40367 Imp_1 <> x1 var
R40363:40364 Imp_1 <> st var
R40373:40374 Imp_1 <> x2 var
R40378:40379 Imp_1 <> st var
R40381:40382 Imp_1 <> x2 var
R40344:40346 Coq.Init.Logic <> :type_scope:x_'='_x not
R40339:40340 Imp_1 <> st var
R40342:40343 Imp_1 <> x1 var
R40347:40348 Imp_1 <> n1 var
R40445:40450 Imp_1 <> update def
R40472:40477 SfLib <> beq_id def
R40472:40477 SfLib <> beq_id def
R40531:40539 SfLib <> beq_id_eq thm
R40531:40539 SfLib <> beq_id_eq thm
prf 40675:40688 <> update_permute
R40781:40783 Coq.Init.Logic <> :type_scope:x_'='_x not
R40747:40752 Imp_1 <> update def
R40775:40776 Imp_1 <> n2 var
R40772:40773 Imp_1 <> x1 var
R40755:40760 Imp_1 <> update def
R40768:40769 Imp_1 <> n1 var
R40765:40766 Imp_1 <> x2 var
R40762:40763 Imp_1 <> st var
R40779:40780 Imp_1 <> x3 var
R40785:40790 Imp_1 <> update def
R40813:40814 Imp_1 <> n1 var
R40810:40811 Imp_1 <> x2 var
R40793:40798 Imp_1 <> update def
R40806:40807 Imp_1 <> n2 var
R40803:40804 Imp_1 <> x1 var
R40800:40801 Imp_1 <> st var
R40817:40818 Imp_1 <> x3 var
R40732:40734 Coq.Init.Logic <> :type_scope:x_'='_x not
R40720:40725 SfLib <> beq_id def
R40730:40731 Imp_1 <> x1 var
R40727:40728 Imp_1 <> x2 var
R40735:40739 Coq.Init.Datatypes <> false constr
R40885:40890 Imp_1 <> update def
R40905:40910 SfLib <> beq_id def
R40905:40910 SfLib <> beq_id def
R40939:40944 SfLib <> beq_id def
R40939:40944 SfLib <> beq_id def
R40969:40987 SfLib <> beq_id_false_not_eq thm
R40969:40987 SfLib <> beq_id_false_not_eq thm
R41108:41116 SfLib <> beq_id_eq thm
R41108:41116 SfLib <> beq_id_eq thm
R41141:41149 SfLib <> beq_id_eq thm
R41141:41149 SfLib <> beq_id_eq thm
R41181:41198 SfLib <> ex_falso_quodlibet thm
R41181:41198 SfLib <> ex_falso_quodlibet thm
ind 41443:41446 <> aexp
constr 41462:41465 <> ANum
constr 41485:41487 <> AId
constr 41538:41542 <> APlus
constr 41571:41576 <> AMinus
constr 41605:41609 <> AMult
R41476:41479 Imp_1 <> aexp ind
R41469:41471 Coq.Init.Datatypes <> nat ind
R41497:41500 Imp_1 <> aexp ind
R41491:41492 SfLib <> id ind
R41562:41565 Imp_1 <> aexp ind
R41554:41557 Imp_1 <> aexp ind
R41546:41549 Imp_1 <> aexp ind
R41596:41599 Imp_1 <> aexp ind
R41588:41591 Imp_1 <> aexp ind
R41580:41583 Imp_1 <> aexp ind
R41629:41632 Imp_1 <> aexp ind
R41621:41624 Imp_1 <> aexp ind
R41613:41616 Imp_1 <> aexp ind
def 41924:41924 <> X
R41928:41929 SfLib <> id ind
R41934:41935 SfLib <> Id constr
def 41951:41951 <> Y
R41955:41956 SfLib <> id ind
R41961:41962 SfLib <> Id constr
def 41978:41978 <> Z
R41982:41983 SfLib <> id ind
R41988:41989 SfLib <> Id constr
ind 42357:42360 <> bexp
constr 42376:42380 <> BTrue
constr 42393:42398 <> BFalse
constr 42411:42413 <> BEq
constr 42442:42444 <> BLe
constr 42473:42476 <> BNot
constr 42497:42500 <> BAnd
R42384:42387 Imp_1 <> bexp ind
R42402:42405 Imp_1 <> bexp ind
R42433:42436 Imp_1 <> bexp ind
R42425:42428 Imp_1 <> aexp ind
R42417:42420 Imp_1 <> aexp ind
R42464:42467 Imp_1 <> bexp ind
R42456:42459 Imp_1 <> aexp ind
R42448:42451 Imp_1 <> aexp ind
R42488:42491 Imp_1 <> bexp ind
R42480:42483 Imp_1 <> bexp ind
R42520:42523 Imp_1 <> bexp ind
R42512:42515 Imp_1 <> bexp ind
R42504:42507 Imp_1 <> bexp ind
def 42911:42915 <> aeval
R42923:42927 Imp_1 <> state def
R42935:42938 Imp_1 <> aexp ind
R42943:42945 Coq.Init.Datatypes <> nat ind
R42958:42958 Imp_1 <> a var
R42969:42972 Imp_1 <> ANum constr
R42985:42987 Imp_1 <> AId constr
R42994:42995 Imp_1 <> st var
R43059:43063 Imp_1 <> APlus constr
R43074:43074 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43086:43090 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43102:43102 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43075:43079 Imp_1 <> aeval def
R43081:43082 Imp_1 <> st var
R43091:43095 Imp_1 <> aeval def
R43097:43098 Imp_1 <> st var
R43108:43113 Imp_1 <> AMinus constr
R43125:43125 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43137:43141 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43153:43153 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43126:43130 Imp_1 <> aeval def
R43132:43133 Imp_1 <> st var
R43142:43146 Imp_1 <> aeval def
R43148:43149 Imp_1 <> st var
R43159:43163 Imp_1 <> AMult constr
R43174:43174 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R43186:43190 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R43202:43202 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R43175:43179 Imp_1 <> aeval def
R43181:43182 Imp_1 <> st var
R43191:43195 Imp_1 <> aeval def
R43197:43198 Imp_1 <> st var
def 43221:43225 <> beval
R43233:43237 Imp_1 <> state def
R43245:43248 Imp_1 <> bexp ind
R43253:43256 Coq.Init.Datatypes <> bool ind
R43269:43269 Imp_1 <> b var
R43280:43284 Imp_1 <> BTrue constr
R43295:43298 Coq.Init.Datatypes <> true constr
R43304:43309 Imp_1 <> BFalse constr
R43319:43323 Coq.Init.Datatypes <> false constr
R43329:43331 Imp_1 <> BEq constr
R43344:43350 Coq.Arith.EqNat <> beq_nat def
R43367:43371 Imp_1 <> aeval def
R43373:43374 Imp_1 <> st var
R43353:43357 Imp_1 <> aeval def
R43359:43360 Imp_1 <> st var
R43384:43386 Imp_1 <> BLe constr
R43399:43405 SfLib <> ble_nat def
R43422:43426 Imp_1 <> aeval def
R43428:43429 Imp_1 <> st var
R43408:43412 Imp_1 <> aeval def
R43414:43415 Imp_1 <> st var
R43439:43442 Imp_1 <> BNot constr
R43454:43457 Coq.Init.Datatypes <> negb def
R43460:43464 Imp_1 <> beval def
R43466:43467 Imp_1 <> st var
R43477:43480 Imp_1 <> BAnd constr
R43492:43495 Coq.Init.Datatypes <> andb def
R43512:43516 Imp_1 <> beval def
R43518:43519 Imp_1 <> st var
R43498:43502 Imp_1 <> beval def
R43504:43505 Imp_1 <> st var
def 43541:43545 <> aexp1
R43631:43635 Coq.Init.Logic <> :type_scope:x_'='_x not
R43551:43555 Imp_1 <> aeval def
R43591:43595 Imp_1 <> APlus constr
R43607:43611 Imp_1 <> AMult constr
R43622:43625 Imp_1 <> ANum constr
R43614:43616 Imp_1 <> AId constr
R43618:43618 Imp_1 <> X def
R43598:43601 Imp_1 <> ANum constr
R43558:43563 Imp_1 <> update def
R43577:43577 Imp_1 <> X def
R43565:43575 Imp_1 <> empty_state def
def 43674:43678 <> bexp1
R43765:43769 Coq.Init.Logic <> :type_scope:x_'='_x not
R43684:43688 Imp_1 <> beval def
R43724:43727 Imp_1 <> BAnd constr
R43736:43739 Imp_1 <> BNot constr
R43742:43744 Imp_1 <> BLe constr
R43755:43758 Imp_1 <> ANum constr
R43747:43749 Imp_1 <> AId constr
R43751:43751 Imp_1 <> X def
R43729:43733 Imp_1 <> BTrue constr
R43691:43696 Imp_1 <> update def
R43710:43710 Imp_1 <> X def
R43698:43708 Imp_1 <> empty_state def
R43770:43773 Coq.Init.Datatypes <> true constr
ind 44602:44604 <> com
constr 44620:44624 <> CSkip
constr 44636:44639 <> CAss
constr 44665:44668 <> CSeq
constr 44694:44696 <> CIf
constr 44730:44735 <> CWhile
R44628:44630 Imp_1 <> com ind
R44657:44659 Imp_1 <> com ind
R44649:44652 Imp_1 <> aexp ind
R44643:44644 SfLib <> id ind
R44686:44688 Imp_1 <> com ind
R44679:44681 Imp_1 <> com ind
R44672:44674 Imp_1 <> com ind
R44722:44724 Imp_1 <> com ind
R44715:44717 Imp_1 <> com ind
R44708:44710 Imp_1 <> com ind
R44700:44703 Imp_1 <> bexp ind
R44754:44756 Imp_1 <> com ind
R44747:44749 Imp_1 <> com ind
R44739:44742 Imp_1 <> bexp ind
R45406:45410 Imp_1 <> CSkip constr
not 45392 <> ::'SKIP'
R45440:45443 Imp_1 <> CAss constr
not 45422 <> ::x_'::='_x
R45490:45493 Imp_1 <> CSeq constr
not 45474 <> ::x_';'_x
R45578:45583 Imp_1 <> CWhile constr
not 45547 <> ::'WHILE'_x_'DO'_x_'END'
R45677:45679 Imp_1 <> CIf constr
not 45635 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 45841:45851 <> fact_in_coq
R45855:45857 Imp_1 <> com ind
R45875:45878 Imp_1 <> ::x_';'_x not
R45865:45869 Imp_1 <> ::x_'::='_x not
R45864:45864 Imp_1 <> Z def
R45870:45872 Imp_1 <> AId constr
R45874:45874 Imp_1 <> X def
R45891:45894 Imp_1 <> ::x_';'_x not
R45880:45884 Imp_1 <> ::x_'::='_x not
R45879:45879 Imp_1 <> Y def
R45885:45888 Imp_1 <> ANum constr
R45895:45900 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R45928:45935 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R45998:46003 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R45901:45904 Imp_1 <> BNot constr
R45907:45909 Imp_1 <> BEq constr
R45920:45923 Imp_1 <> ANum constr
R45912:45914 Imp_1 <> AId constr
R45916:45916 Imp_1 <> Z def
R45963:45968 Imp_1 <> ::x_';'_x not
R45937:45941 Imp_1 <> ::x_'::='_x not
R45936:45936 Imp_1 <> Y def
R45942:45946 Imp_1 <> AMult constr
R45957:45959 Imp_1 <> AId constr
R45961:45961 Imp_1 <> Z def
R45949:45951 Imp_1 <> AId constr
R45953:45953 Imp_1 <> Y def
R45970:45974 Imp_1 <> ::x_'::='_x not
R45969:45969 Imp_1 <> Z def
R45975:45980 Imp_1 <> AMinus constr
R45991:45994 Imp_1 <> ANum constr
R45983:45985 Imp_1 <> AId constr
R45987:45987 Imp_1 <> Z def
def 46120:46124 <> plus2
R46128:46130 Imp_1 <> com ind
R46138:46143 Imp_1 <> ::x_'::='_x not
R46166:46166 Imp_1 <> ::x_'::='_x not
R46137:46137 Imp_1 <> X def
R46144:46148 Imp_1 <> APlus constr
R46159:46162 Imp_1 <> ANum constr
R46151:46153 Imp_1 <> AId constr
R46155:46155 Imp_1 <> X def
def 46181:46190 <> XtimesYinZ
R46194:46196 Imp_1 <> com ind
R46204:46209 Imp_1 <> ::x_'::='_x not
R46231:46231 Imp_1 <> ::x_'::='_x not
R46203:46203 Imp_1 <> Z def
R46210:46214 Imp_1 <> AMult constr
R46225:46227 Imp_1 <> AId constr
R46229:46229 Imp_1 <> Y def
R46217:46219 Imp_1 <> AId constr
R46221:46221 Imp_1 <> X def
def 46246:46265 <> subtract_slowly_body
R46269:46271 Imp_1 <> com ind
R46307:46311 Imp_1 <> ::x_';'_x not
R46279:46283 Imp_1 <> ::x_'::='_x not
R46278:46278 Imp_1 <> Z def
R46284:46289 Imp_1 <> AMinus constr
R46300:46303 Imp_1 <> ANum constr
R46292:46294 Imp_1 <> AId constr
R46296:46296 Imp_1 <> Z def
R46313:46317 Imp_1 <> ::x_'::='_x not
R46312:46312 Imp_1 <> X def
R46318:46323 Imp_1 <> AMinus constr
R46334:46337 Imp_1 <> ANum constr
R46326:46328 Imp_1 <> AId constr
R46330:46330 Imp_1 <> X def
def 46370:46384 <> subtract_slowly
R46388:46390 Imp_1 <> com ind
R46397:46402 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R46430:46437 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R46458:46463 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R46403:46406 Imp_1 <> BNot constr
R46409:46411 Imp_1 <> BEq constr
R46422:46425 Imp_1 <> ANum constr
R46414:46416 Imp_1 <> AId constr
R46418:46418 Imp_1 <> X def
R46438:46457 Imp_1 <> subtract_slowly_body def
def 46478:46501 <> subtract_3_from_5_slowly
R46505:46507 Imp_1 <> com ind
R46526:46530 Imp_1 <> ::x_';'_x not
R46515:46519 Imp_1 <> ::x_'::='_x not
R46514:46514 Imp_1 <> X def
R46520:46523 Imp_1 <> ANum constr
R46543:46547 Imp_1 <> ::x_';'_x not
R46532:46536 Imp_1 <> ::x_'::='_x not
R46531:46531 Imp_1 <> Z def
R46537:46540 Imp_1 <> ANum constr
R46548:46562 Imp_1 <> subtract_slowly def
def 46603:46606 <> loop
R46610:46612 Imp_1 <> com ind
R46619:46624 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R46630:46637 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R46642:46647 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R46625:46629 Imp_1 <> BTrue constr
R46638:46641 Imp_1 <> ::'SKIP' not
def 47139:47156 <> ceval_fun_no_while
R47164:47168 Imp_1 <> state def
R47176:47178 Imp_1 <> com ind
R47183:47187 Imp_1 <> state def
R47200:47200 Imp_1 <> c var
R47213:47216 Imp_1 <> ::'SKIP' not
R47229:47230 Imp_1 <> st var
R47239:47243 Imp_1 <> ::x_'::='_x not
R47258:47263 Imp_1 <> update def
R47271:47275 Imp_1 <> aeval def
R47277:47278 Imp_1 <> st var
R47265:47266 Imp_1 <> st var
R47292:47294 Imp_1 <> ::x_';'_x not
R47320:47337 Imp_1 <> ceval_fun_no_while def
R47339:47340 Imp_1 <> st var
R47356:47373 Imp_1 <> ceval_fun_no_while def
R47375:47377 Imp_1 <> st' var
R47388:47391 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47393:47398 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47401:47406 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47409:47411 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47428:47432 Imp_1 <> beval def
R47434:47435 Imp_1 <> st var
R47495:47512 Imp_1 <> ceval_fun_no_while def
R47514:47515 Imp_1 <> st var
R47455:47472 Imp_1 <> ceval_fun_no_while def
R47474:47475 Imp_1 <> st var
R47526:47531 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R47533:47536 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R47538:47541 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R47554:47555 Imp_1 <> st var
ind 51508:51512 <> ceval
constr 51553:51558 <> E_Skip
constr 51599:51603 <> E_Ass
constr 51696:51700 <> E_Seq
constr 51814:51821 <> E_IfTrue
constr 51948:51956 <> E_IfFalse
constr 52084:52093 <> E_WhileEnd
constr 52180:52190 <> E_WhileLoop
R51532:51536 Imp_1 <> state def
R51523:51527 Imp_1 <> state def
R51516:51518 Imp_1 <> com ind
R52382:52386 Imp_1 <> ceval ind
R51583:51585 Imp_1 <> ::x_'/'_x_'||'_x not
R51588:51591 Imp_1 <> ::x_'/'_x_'||'_x not
R51579:51582 Imp_1 <> ::'SKIP' not
R51586:51587 Imp_1 <> st var
R51592:51593 Imp_1 <> st var
R51657:51657 Imp_1 <> ::x_'/'_x_'||'_x not
R51666:51669 Imp_1 <> ::x_'/'_x_'||'_x not
R51672:51676 Imp_1 <> ::x_'/'_x_'||'_x not
R51690:51690 Imp_1 <> ::x_'/'_x_'||'_x not
R51659:51663 Imp_1 <> ::x_'::='_x not
R51658:51658 Imp_1 <> x var
R51664:51665 Imp_1 <> a1 var
R51670:51671 Imp_1 <> st var
R51677:51682 Imp_1 <> update def
R51689:51689 Imp_1 <> n var
R51687:51687 Imp_1 <> x var
R51684:51685 Imp_1 <> st var
R51643:51645 Coq.Init.Logic <> :type_scope:x_'='_x not
R51632:51636 Imp_1 <> aeval def
R51641:51642 Imp_1 <> a1 var
R51638:51639 Imp_1 <> st var
R51646:51646 Imp_1 <> n var
R51787:51787 Imp_1 <> ::x_'/'_x_'||'_x not
R51795:51798 Imp_1 <> ::x_'/'_x_'||'_x not
R51801:51804 Imp_1 <> ::x_'/'_x_'||'_x not
R51790:51792 Imp_1 <> ::x_';'_x not
R51788:51789 Imp_1 <> c1 var
R51793:51794 Imp_1 <> c2 var
R51799:51800 Imp_1 <> st var
R51805:51808 Imp_1 <> st'' var
R51763:51765 Imp_1 <> ::x_'/'_x_'||'_x not
R51769:51772 Imp_1 <> ::x_'/'_x_'||'_x not
R51761:51762 Imp_1 <> c2 var
R51766:51768 Imp_1 <> st' var
R51773:51776 Imp_1 <> st'' var
R51738:51740 Imp_1 <> ::x_'/'_x_'||'_x not
R51743:51747 Imp_1 <> ::x_'/'_x_'||'_x not
R51736:51737 Imp_1 <> c1 var
R51741:51742 Imp_1 <> st var
R51748:51750 Imp_1 <> st' var
R51905:51905 Imp_1 <> ::x_'/'_x_'||'_x not
R51930:51933 Imp_1 <> ::x_'/'_x_'||'_x not
R51936:51939 Imp_1 <> ::x_'/'_x_'||'_x not
R51906:51909 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51911:51916 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51919:51924 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51927:51929 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51910:51910 Imp_1 <> b var
R51917:51918 Imp_1 <> c1 var
R51925:51926 Imp_1 <> c2 var
R51934:51935 Imp_1 <> st var
R51940:51942 Imp_1 <> st' var
R51883:51885 Imp_1 <> ::x_'/'_x_'||'_x not
R51888:51891 Imp_1 <> ::x_'/'_x_'||'_x not
R51881:51882 Imp_1 <> c1 var
R51886:51887 Imp_1 <> st var
R51892:51894 Imp_1 <> st' var
R51864:51866 Coq.Init.Logic <> :type_scope:x_'='_x not
R51854:51858 Imp_1 <> beval def
R51863:51863 Imp_1 <> b var
R51860:51861 Imp_1 <> st var
R51867:51870 Coq.Init.Datatypes <> true constr
R52041:52041 Imp_1 <> ::x_'/'_x_'||'_x not
R52066:52069 Imp_1 <> ::x_'/'_x_'||'_x not
R52072:52075 Imp_1 <> ::x_'/'_x_'||'_x not
R52042:52045 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52047:52052 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52055:52060 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52063:52065 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52046:52046 Imp_1 <> b var
R52053:52054 Imp_1 <> c1 var
R52061:52062 Imp_1 <> c2 var
R52070:52071 Imp_1 <> st var
R52076:52078 Imp_1 <> st' var
R52019:52021 Imp_1 <> ::x_'/'_x_'||'_x not
R52024:52027 Imp_1 <> ::x_'/'_x_'||'_x not
R52017:52018 Imp_1 <> c2 var
R52022:52023 Imp_1 <> st var
R52028:52030 Imp_1 <> st' var
R51999:52001 Coq.Init.Logic <> :type_scope:x_'='_x not
R51989:51993 Imp_1 <> beval def
R51998:51998 Imp_1 <> b var
R51995:51996 Imp_1 <> st var
R52002:52006 Coq.Init.Datatypes <> false constr
R52146:52146 Imp_1 <> ::x_'/'_x_'||'_x not
R52163:52166 Imp_1 <> ::x_'/'_x_'||'_x not
R52169:52172 Imp_1 <> ::x_'/'_x_'||'_x not
R52147:52152 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R52154:52157 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R52159:52162 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R52153:52153 Imp_1 <> b var
R52158:52158 Imp_1 <> c var
R52167:52168 Imp_1 <> st var
R52173:52174 Imp_1 <> st var
R52128:52130 Coq.Init.Logic <> :type_scope:x_'='_x not
R52118:52122 Imp_1 <> beval def
R52127:52127 Imp_1 <> b var
R52124:52125 Imp_1 <> st var
R52131:52135 Coq.Init.Datatypes <> false constr
R52316:52316 Imp_1 <> ::x_'/'_x_'||'_x not
R52333:52336 Imp_1 <> ::x_'/'_x_'||'_x not
R52339:52342 Imp_1 <> ::x_'/'_x_'||'_x not
R52317:52322 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R52324:52327 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R52329:52332 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R52323:52323 Imp_1 <> b var
R52328:52328 Imp_1 <> c var
R52337:52338 Imp_1 <> st var
R52343:52346 Imp_1 <> st'' var
R52274:52274 Imp_1 <> ::x_'/'_x_'||'_x not
R52291:52294 Imp_1 <> ::x_'/'_x_'||'_x not
R52298:52301 Imp_1 <> ::x_'/'_x_'||'_x not
R52275:52280 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R52282:52285 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R52287:52290 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R52281:52281 Imp_1 <> b var
R52286:52286 Imp_1 <> c var
R52295:52297 Imp_1 <> st' var
R52302:52305 Imp_1 <> st'' var
R52252:52254 Imp_1 <> ::x_'/'_x_'||'_x not
R52257:52260 Imp_1 <> ::x_'/'_x_'||'_x not
R52251:52251 Imp_1 <> c var
R52255:52256 Imp_1 <> st var
R52261:52263 Imp_1 <> st' var
R52234:52236 Coq.Init.Logic <> :type_scope:x_'='_x not
R52224:52228 Imp_1 <> beval def
R52233:52233 Imp_1 <> b var
R52230:52231 Imp_1 <> st var
R52237:52240 Coq.Init.Datatypes <> true constr
R52382:52386 Imp_1 <> ceval ind
not 52357 <> ::x_'/'_x_'||'_x
def 52897:52910 <> ceval_example1
R52917:52917 Imp_1 <> ::x_'/'_x_'||'_x not
R53019:53025 Imp_1 <> ::x_'/'_x_'||'_x not
R53037:53044 Imp_1 <> ::x_'/'_x_'||'_x not
R53080:53080 Imp_1 <> ::x_'/'_x_'||'_x not
R52930:52936 Imp_1 <> ::x_';'_x not
R52919:52923 Imp_1 <> ::x_'::='_x not
R52918:52918 Imp_1 <> X def
R52924:52927 Imp_1 <> ANum constr
R52937:52940 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52961:52973 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52986:52998 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53011:53018 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52941:52943 Imp_1 <> BLe constr
R52954:52957 Imp_1 <> ANum constr
R52946:52948 Imp_1 <> AId constr
R52950:52950 Imp_1 <> X def
R52975:52979 Imp_1 <> ::x_'::='_x not
R52974:52974 Imp_1 <> Y def
R52980:52983 Imp_1 <> ANum constr
R53000:53004 Imp_1 <> ::x_'::='_x not
R52999:52999 Imp_1 <> Z def
R53005:53008 Imp_1 <> ANum constr
R53026:53036 Imp_1 <> empty_state def
R53045:53050 Imp_1 <> update def
R53077:53077 Imp_1 <> Z def
R53053:53058 Imp_1 <> update def
R53072:53072 Imp_1 <> X def
R53060:53070 Imp_1 <> empty_state def
R53156:53161 Imp_1 <> update def
R53175:53175 Imp_1 <> X def
R53163:53173 Imp_1 <> empty_state def
R53144:53148 Imp_1 <> E_Seq constr
R53156:53161 Imp_1 <> update def
R53175:53175 Imp_1 <> X def
R53163:53173 Imp_1 <> empty_state def
R53144:53148 Imp_1 <> E_Seq constr
R53220:53224 Imp_1 <> E_Ass constr
R53220:53224 Imp_1 <> E_Ass constr
R53271:53279 Imp_1 <> E_IfFalse constr
R53271:53279 Imp_1 <> E_IfFalse constr
R53313:53317 Imp_1 <> E_Ass constr
R53313:53317 Imp_1 <> E_Ass constr
def 53395:53408 <> ceval_example2
R53415:53415 Imp_1 <> ::x_'/'_x_'||'_x not
R53456:53459 Imp_1 <> ::x_'/'_x_'||'_x not
R53471:53479 Imp_1 <> ::x_'/'_x_'||'_x not
R53528:53528 Imp_1 <> ::x_'/'_x_'||'_x not
R53428:53429 Imp_1 <> ::x_';'_x not
R53417:53421 Imp_1 <> ::x_'::='_x not
R53416:53416 Imp_1 <> X def
R53422:53425 Imp_1 <> ANum constr
R53442:53443 Imp_1 <> ::x_';'_x not
R53431:53435 Imp_1 <> ::x_'::='_x not
R53430:53430 Imp_1 <> Y def
R53436:53439 Imp_1 <> ANum constr
R53445:53449 Imp_1 <> ::x_'::='_x not
R53444:53444 Imp_1 <> Z def
R53450:53453 Imp_1 <> ANum constr
R53460:53470 Imp_1 <> empty_state def
R53480:53485 Imp_1 <> update def
R53525:53525 Imp_1 <> Z def
R53488:53493 Imp_1 <> update def
R53520:53520 Imp_1 <> Y def
R53496:53501 Imp_1 <> update def
R53515:53515 Imp_1 <> X def
R53503:53513 Imp_1 <> empty_state def
R53576:53581 Imp_1 <> update def
R53595:53595 Imp_1 <> X def
R53583:53593 Imp_1 <> empty_state def
R53564:53568 Imp_1 <> E_Seq constr
R53576:53581 Imp_1 <> update def
R53595:53595 Imp_1 <> X def
R53583:53593 Imp_1 <> empty_state def
R53564:53568 Imp_1 <> E_Seq constr
R53646:53650 Imp_1 <> E_Ass constr
R53646:53650 Imp_1 <> E_Ass constr
R53707:53712 Imp_1 <> update def
R53739:53739 Imp_1 <> Y def
R53715:53720 Imp_1 <> update def
R53734:53734 Imp_1 <> X def
R53722:53732 Imp_1 <> empty_state def
R53695:53699 Imp_1 <> E_Seq constr
R53707:53712 Imp_1 <> update def
R53739:53739 Imp_1 <> Y def
R53715:53720 Imp_1 <> update def
R53734:53734 Imp_1 <> X def
R53722:53732 Imp_1 <> empty_state def
R53695:53699 Imp_1 <> E_Seq constr
R53796:53800 Imp_1 <> E_Ass constr
R53796:53800 Imp_1 <> E_Ass constr
R53858:53862 Imp_1 <> E_Ass constr
R53858:53862 Imp_1 <> E_Ass constr
def 54194:54201 <> pup_to_n
R54205:54207 Imp_1 <> com ind
R54246:54249 Imp_1 <> ::x_';'_x not
R54233:54238 Imp_1 <> ::x_'::='_x not
R54245:54245 Imp_1 <> ::x_'::='_x not
R54232:54232 Imp_1 <> Y def
R54239:54242 Imp_1 <> ANum constr
R54250:54255 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R54283:54290 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R54354:54359 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R54256:54259 Imp_1 <> BNot constr
R54262:54264 Imp_1 <> BEq constr
R54275:54278 Imp_1 <> ANum constr
R54267:54269 Imp_1 <> AId constr
R54271:54271 Imp_1 <> X def
R54318:54324 Imp_1 <> ::x_';'_x not
R54292:54296 Imp_1 <> ::x_'::='_x not
R54291:54291 Imp_1 <> Y def
R54297:54301 Imp_1 <> APlus constr
R54312:54314 Imp_1 <> AId constr
R54316:54316 Imp_1 <> X def
R54304:54306 Imp_1 <> AId constr
R54308:54308 Imp_1 <> Y def
R54326:54330 Imp_1 <> ::x_'::='_x not
R54325:54325 Imp_1 <> X def
R54331:54336 Imp_1 <> AMinus constr
R54347:54350 Imp_1 <> ANum constr
R54339:54341 Imp_1 <> AId constr
R54343:54343 Imp_1 <> X def
prf 54371:54384 <> pup_to_2_ceval
R54398:54401 Imp_1 <> ::x_'/'_x_'||'_x not
R54424:54432 Imp_1 <> ::x_'/'_x_'||'_x not
R54390:54397 Imp_1 <> pup_to_n def
R54402:54407 Imp_1 <> update def
R54421:54421 Imp_1 <> X def
R54409:54419 Imp_1 <> empty_state def
R54433:54438 Imp_1 <> update def
R54523:54523 Imp_1 <> X def
R54441:54446 Imp_1 <> update def
R54518:54518 Imp_1 <> Y def
R54449:54454 Imp_1 <> update def
R54513:54513 Imp_1 <> X def
R54457:54462 Imp_1 <> update def
R54508:54508 Imp_1 <> Y def
R54465:54470 Imp_1 <> update def
R54503:54503 Imp_1 <> Y def
R54473:54478 Imp_1 <> update def
R54498:54498 Imp_1 <> X def
R54480:54490 Imp_1 <> empty_state def
R54562:54569 Imp_1 <> pup_to_n def
R54592:54597 Imp_1 <> update def
R54624:54624 Imp_1 <> Y def
R54600:54605 Imp_1 <> update def
R54619:54619 Imp_1 <> X def
R54607:54617 Imp_1 <> empty_state def
R54580:54584 Imp_1 <> E_Seq constr
R54592:54597 Imp_1 <> update def
R54624:54624 Imp_1 <> Y def
R54600:54605 Imp_1 <> update def
R54619:54619 Imp_1 <> X def
R54607:54617 Imp_1 <> empty_state def
R54580:54584 Imp_1 <> E_Seq constr
R54669:54673 Imp_1 <> E_Ass constr
R54669:54673 Imp_1 <> E_Ass constr
R54747:54752 Imp_1 <> update def
R54805:54805 Imp_1 <> X def
R54755:54760 Imp_1 <> update def
R54800:54800 Imp_1 <> Y def
R54763:54768 Imp_1 <> update def
R54795:54795 Imp_1 <> Y def
R54771:54776 Imp_1 <> update def
R54790:54790 Imp_1 <> X def
R54778:54788 Imp_1 <> empty_state def
R54723:54733 Imp_1 <> E_WhileLoop constr
R54747:54752 Imp_1 <> update def
R54805:54805 Imp_1 <> X def
R54755:54760 Imp_1 <> update def
R54800:54800 Imp_1 <> Y def
R54763:54768 Imp_1 <> update def
R54795:54795 Imp_1 <> Y def
R54771:54776 Imp_1 <> update def
R54790:54790 Imp_1 <> X def
R54778:54788 Imp_1 <> empty_state def
R54723:54733 Imp_1 <> E_WhileLoop constr
R54879:54884 Imp_1 <> update def
R54924:54924 Imp_1 <> Y def
R54887:54892 Imp_1 <> update def
R54919:54919 Imp_1 <> Y def
R54895:54900 Imp_1 <> update def
R54914:54914 Imp_1 <> X def
R54902:54912 Imp_1 <> empty_state def
R54867:54871 Imp_1 <> E_Seq constr
R54879:54884 Imp_1 <> update def
R54924:54924 Imp_1 <> Y def
R54887:54892 Imp_1 <> update def
R54919:54919 Imp_1 <> Y def
R54895:54900 Imp_1 <> update def
R54914:54914 Imp_1 <> X def
R54902:54912 Imp_1 <> empty_state def
R54867:54871 Imp_1 <> E_Seq constr
R54942:54946 Imp_1 <> E_Ass constr
R54942:54946 Imp_1 <> E_Ass constr
R54974:54978 Imp_1 <> E_Ass constr
R54974:54978 Imp_1 <> E_Ass constr
R55037:55047 Imp_1 <> E_WhileLoop constr
R55037:55047 Imp_1 <> E_WhileLoop constr
R55107:55111 Imp_1 <> E_Seq constr
R55107:55111 Imp_1 <> E_Seq constr
R55128:55132 Imp_1 <> E_Ass constr
R55128:55132 Imp_1 <> E_Ass constr
R55162:55166 Imp_1 <> E_Ass constr
R55162:55166 Imp_1 <> E_Ass constr
R55236:55244 Imp_1 <> update_eq thm
R55236:55244 Imp_1 <> update_eq thm
R55261:55270 Imp_1 <> E_WhileEnd constr
R55261:55270 Imp_1 <> E_WhileEnd constr
prf 56063:56081 <> ceval_deterministic
R56158:56160 Coq.Init.Logic <> :type_scope:x_'='_x not
R56155:56157 Imp_1 <> st1 var
R56161:56163 Imp_1 <> st2 var
R56134:56136 Imp_1 <> ::x_'/'_x_'||'_x not
R56139:56142 Imp_1 <> ::x_'/'_x_'||'_x not
R56133:56133 Imp_1 <> c var
R56137:56138 Imp_1 <> st var
R56143:56145 Imp_1 <> st2 var
R56111:56113 Imp_1 <> ::x_'/'_x_'||'_x not
R56116:56119 Imp_1 <> ::x_'/'_x_'||'_x not
R56110:56110 Imp_1 <> c var
R56114:56115 Imp_1 <> st var
R56120:56122 Imp_1 <> st1 var
R56402:56404 Coq.Init.Logic <> :type_scope:x_'='_x not
R56402:56404 Coq.Init.Logic <> :type_scope:x_'='_x not
R57191:57193 Coq.Init.Logic <> :type_scope:x_'='_x not
R57191:57193 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 57672:57681 <> plus2_spec
R57746:57748 Coq.Init.Logic <> :type_scope:x_'='_x not
R57741:57743 Imp_1 <> st' var
R57745:57745 Imp_1 <> X def
R57750:57752 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R57749:57749 Imp_1 <> n var
R57723:57725 Imp_1 <> ::x_'/'_x_'||'_x not
R57728:57731 Imp_1 <> ::x_'/'_x_'||'_x not
R57718:57722 Imp_1 <> plus2 def
R57726:57727 Imp_1 <> st var
R57732:57734 Imp_1 <> st' var
R57708:57710 Coq.Init.Logic <> :type_scope:x_'='_x not
R57704:57705 Imp_1 <> st var
R57707:57707 Imp_1 <> X def
R57711:57711 Imp_1 <> n var
R58059:58067 Imp_1 <> update_eq thm
R58059:58067 Imp_1 <> update_eq thm
prf 58263:58278 <> XtimesYinZ_spec1
R58368:58370 Coq.Init.Logic <> :type_scope:x_'='_x not
R58363:58365 Imp_1 <> st' var
R58367:58367 Imp_1 <> Z def
R58371:58374 Coq.Init.Peano <> mult def
R58379:58380 Imp_1 <> ny var
R58376:58377 Imp_1 <> nx var
R58345:58347 Imp_1 <> ::x_'/'_x_'||'_x not
R58350:58353 Imp_1 <> ::x_'/'_x_'||'_x not
R58335:58344 Imp_1 <> XtimesYinZ def
R58348:58349 Imp_1 <> st var
R58354:58356 Imp_1 <> st' var
R58324:58326 Coq.Init.Logic <> :type_scope:x_'='_x not
R58320:58321 Imp_1 <> st var
R58323:58323 Imp_1 <> Y def
R58327:58328 Imp_1 <> ny var
R58309:58311 Coq.Init.Logic <> :type_scope:x_'='_x not
R58305:58306 Imp_1 <> st var
R58308:58308 Imp_1 <> X def
R58312:58313 Imp_1 <> nx var
R58501:58509 Imp_1 <> update_eq thm
R58501:58509 Imp_1 <> update_eq thm
prf 58582:58596 <> XtimesYinZ_spec
R58623:58625 Imp_1 <> ::x_'/'_x_'||'_x not
R58628:58632 Imp_1 <> ::x_'/'_x_'||'_x not
R58658:58658 Imp_1 <> ::x_'/'_x_'||'_x not
R58613:58622 Imp_1 <> XtimesYinZ def
R58626:58627 Imp_1 <> st var
R58633:58638 Imp_1 <> update def
R58650:58652 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R58646:58647 Imp_1 <> st var
R58649:58649 Imp_1 <> X def
R58653:58654 Imp_1 <> st var
R58656:58656 Imp_1 <> Y def
R58643:58643 Imp_1 <> Z def
R58640:58641 Imp_1 <> st var
R58682:58686 Imp_1 <> E_Ass constr
R58682:58686 Imp_1 <> E_Ass constr
prf 58768:58783 <> XtimesYinZ_spec2
R58798:58804 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58808:58809 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58820:58822 Imp_1 <> ::x_'/'_x_'||'_x not
R58825:58828 Imp_1 <> ::x_'/'_x_'||'_x not
R58810:58819 Imp_1 <> XtimesYinZ def
R58823:58824 Imp_1 <> st var
R58829:58831 Imp_1 <> st' var
R58859:58864 Imp_1 <> update def
R58876:58878 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R58875:58875 Imp_1 <> X def
R58882:58882 Imp_1 <> Y def
R58869:58869 Imp_1 <> Z def
R58859:58864 Imp_1 <> update def
R58876:58878 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R58875:58875 Imp_1 <> X def
R58882:58882 Imp_1 <> Y def
R58869:58869 Imp_1 <> Z def
R58895:58899 Imp_1 <> E_Ass constr
R58895:58899 Imp_1 <> E_Ass constr
prf 58988:59003 <> loop_never_stops
R59024:59025 Coq.Init.Logic <> :type_scope:'~'_x not
R59042:59042 Coq.Init.Logic <> :type_scope:'~'_x not
R59030:59032 Imp_1 <> ::x_'/'_x_'||'_x not
R59035:59038 Imp_1 <> ::x_'/'_x_'||'_x not
R59026:59029 Imp_1 <> loop def
R59033:59034 Imp_1 <> st var
R59039:59041 Imp_1 <> st' var
R59083:59086 Imp_1 <> loop def
R59111:59116 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R59122:59125 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R59130:59133 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R59117:59121 Imp_1 <> BTrue constr
R59126:59129 Imp_1 <> ::'SKIP' not
R59111:59116 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R59122:59125 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R59130:59133 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R59117:59121 Imp_1 <> BTrue constr
R59126:59129 Imp_1 <> ::'SKIP' not
def 59705:59713 <> no_whiles
R59720:59722 Imp_1 <> com ind
R59727:59730 Coq.Init.Datatypes <> bool ind
R59743:59743 Imp_1 <> c var
R59754:59757 Imp_1 <> ::'SKIP' not
R59768:59771 Coq.Init.Datatypes <> true constr
R59778:59782 Imp_1 <> ::x_'::='_x not
R59791:59794 Coq.Init.Datatypes <> true constr
R59802:59804 Imp_1 <> ::x_';'_x not
R59812:59815 Coq.Init.Datatypes <> andb def
R59833:59841 Imp_1 <> no_whiles def
R59818:59826 Imp_1 <> no_whiles def
R59851:59854 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59856:59861 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59864:59869 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59872:59874 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59879:59882 Coq.Init.Datatypes <> andb def
R59900:59908 Imp_1 <> no_whiles def
R59885:59893 Imp_1 <> no_whiles def
R59918:59923 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R59925:59928 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R59930:59933 Imp_1 <> ::'WHILE'_x_'DO'_x_'END' not
R59939:59943 Coq.Init.Datatypes <> false constr
ind 60242:60251 <> no_whilesR
constr 60289:60295 <> nw_Skip
constr 60317:60322 <> nw_Ass
constr 60363:60368 <> nw_Seq
constr 60499:60503 <> nw_If
R60254:60256 Imp_1 <> com ind
R60298:60307 Imp_1 <> no_whilesR ind
R60309:60312 Imp_1 <> ::'SKIP' not
R60338:60347 Imp_1 <> no_whilesR ind
R60351:60355 Imp_1 <> ::x_'::='_x not
R60350:60350 Imp_1 <> x var
R60356:60357 Imp_1 <> ae var
R60475:60484 Imp_1 <> no_whilesR ind
R60489:60491 Imp_1 <> ::x_';'_x not
R60487:60488 Imp_1 <> c1 var
R60492:60493 Imp_1 <> c2 var
R60430:60439 Imp_1 <> no_whilesR ind
R60441:60442 Imp_1 <> c2 var
R60385:60394 Imp_1 <> no_whilesR ind
R60396:60397 Imp_1 <> c1 var
R60614:60623 Imp_1 <> no_whilesR ind
R60626:60629 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R60632:60637 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R60640:60645 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R60648:60650 Imp_1 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R60630:60631 Imp_1 <> be var
R60638:60639 Imp_1 <> c1 var
R60646:60647 Imp_1 <> c2 var
R60569:60578 Imp_1 <> no_whilesR ind
R60580:60581 Imp_1 <> c2 var
R60524:60533 Imp_1 <> no_whilesR ind
R60535:60536 Imp_1 <> c1 var
prf 60832:60844 <> no_whiles_eqv
R60878:60882 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R60871:60873 Coq.Init.Logic <> :type_scope:x_'='_x not
R60860:60868 Imp_1 <> no_whiles def
R60870:60870 Imp_1 <> c var
R60874:60877 Coq.Init.Datatypes <> true constr
R60883:60892 Imp_1 <> no_whilesR ind
R60894:60894 Imp_1 <> c var
R61056:61068 Coq.Bool.Bool <> andb_true_iff thm
R61056:61068 Coq.Bool.Bool <> andb_true_iff thm
R61056:61068 Coq.Bool.Bool <> andb_true_iff thm
R61056:61068 Coq.Bool.Bool <> andb_true_iff thm
R61056:61068 Coq.Bool.Bool <> andb_true_iff thm
R61056:61068 Coq.Bool.Bool <> andb_true_iff thm
prf 61727:61747 <> no_whiles_terminating
R61784:61790 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R61794:61797 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R61799:61801 Imp_1 <> ::x_'/'_x_'||'_x not
R61804:61807 Imp_1 <> ::x_'/'_x_'||'_x not
R61798:61798 Imp_1 <> c var
R61802:61803 Imp_1 <> st var
R61808:61810 Imp_1 <> st' var
R61766:61775 Imp_1 <> no_whilesR ind
R61777:61777 Imp_1 <> c var
R61983:61988 Imp_1 <> update def
R61996:62000 Imp_1 <> aeval def
R61983:61988 Imp_1 <> update def
R61996:62000 Imp_1 <> aeval def
R62176:62180 Imp_1 <> E_Seq constr
R62176:62180 Imp_1 <> E_Seq constr
R62234:62238 Imp_1 <> beval def
R62234:62238 Imp_1 <> beval def
R62362:62369 Imp_1 <> E_IfTrue constr
R62362:62369 Imp_1 <> E_IfTrue constr
R62508:62516 Imp_1 <> E_IfFalse constr
R62508:62516 Imp_1 <> E_IfFalse constr
prf 62642:62663 <> no_whiles_terminating'
R62707:62713 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R62717:62718 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R62720:62722 Imp_1 <> ::x_'/'_x_'||'_x not
R62726:62729 Imp_1 <> ::x_'/'_x_'||'_x not
R62719:62719 Imp_1 <> c var
R62723:62725 Imp_1 <> st1 var
R62730:62732 Imp_1 <> st2 var
R62694:62696 Coq.Init.Logic <> :type_scope:x_'='_x not
R62683:62691 Imp_1 <> no_whiles def
R62693:62693 Imp_1 <> c var
R62697:62700 Coq.Init.Datatypes <> true constr
R62827:62832 Imp_1 <> E_Skip constr
R62827:62832 Imp_1 <> E_Skip constr
R62862:62867 Imp_1 <> update def
R62876:62880 Imp_1 <> aeval def
R62862:62867 Imp_1 <> update def
R62876:62880 Imp_1 <> aeval def
R62897:62901 Imp_1 <> E_Ass constr
R62897:62901 Imp_1 <> E_Ass constr
R62966:62980 SfLib <> andb_true_elim1 thm
R62966:62980 SfLib <> andb_true_elim1 thm
R63010:63024 SfLib <> andb_true_elim2 prfax
R63010:63024 SfLib <> andb_true_elim2 prfax
R63193:63197 Imp_1 <> E_Seq constr
R63193:63197 Imp_1 <> E_Seq constr
R63273:63277 Imp_1 <> beval def
R63273:63277 Imp_1 <> beval def
R63340:63354 SfLib <> andb_true_elim1 thm
R63340:63354 SfLib <> andb_true_elim1 thm
R63445:63452 Imp_1 <> E_IfTrue constr
R63445:63452 Imp_1 <> E_IfTrue constr
R63610:63624 SfLib <> andb_true_elim2 prfax
R63610:63624 SfLib <> andb_true_elim2 prfax
R63715:63723 Imp_1 <> E_IfFalse constr
R63715:63723 Imp_1 <> E_IfFalse constr
ind 65234:65239 <> sinstr
constr 65253:65257 <> SPush
constr 65277:65281 <> SLoad
constr 65300:65304 <> SPlus
constr 65317:65322 <> SMinus
constr 65335:65339 <> SMult
R65268:65273 Imp_1 <> sinstr ind
R65261:65263 Coq.Init.Datatypes <> nat ind
R65291:65296 Imp_1 <> sinstr ind
R65285:65286 SfLib <> id ind
R65308:65313 Imp_1 <> sinstr ind
R65326:65331 Imp_1 <> sinstr ind
R65343:65348 Imp_1 <> sinstr ind
def 65993:66001 <> s_execute
R66009:66013 Imp_1 <> state def
R66025:66028 Coq.Init.Datatypes <> list ind
R66030:66032 Coq.Init.Datatypes <> nat ind
R66062:66065 Coq.Init.Datatypes <> list ind
R66067:66072 Imp_1 <> sinstr ind
R66094:66097 Coq.Init.Datatypes <> list ind
R66099:66101 Coq.Init.Datatypes <> nat ind
R66130:66130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66135:66136 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66142:66142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66131:66134 Imp_1 <> prog var
R66137:66141 Imp_1 <> stack var
R66153:66153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66157:66170 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66172:66183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66154:66156 Coq.Init.Datatypes <> nil constr
R66188:66192 Imp_1 <> stack var
R66198:66198 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66213:66215 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66217:66228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66206:66207 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66199:66203 Imp_1 <> SPush constr
R66233:66241 Imp_1 <> s_execute def
R66248:66249 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66250:66254 Imp_1 <> stack var
R66243:66244 Imp_1 <> st var
R66267:66267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66282:66284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66286:66297 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66275:66276 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66268:66272 Imp_1 <> SLoad constr
R66302:66310 Imp_1 <> s_execute def
R66320:66321 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66316:66317 Imp_1 <> st var
R66322:66326 Imp_1 <> stack var
R66312:66313 Imp_1 <> st var
R66339:66339 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66352:66356 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66369:66369 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66345:66346 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66340:66344 Imp_1 <> SPlus constr
R66358:66359 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66361:66362 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66374:66382 Imp_1 <> s_execute def
R66388:66388 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66392:66394 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66390:66390 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R66384:66385 Imp_1 <> st var
R66413:66413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66427:66430 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66443:66443 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66420:66421 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66414:66419 Imp_1 <> SMinus constr
R66432:66433 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66435:66436 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66448:66456 Imp_1 <> s_execute def
R66462:66462 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66466:66468 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66464:66464 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R66458:66459 Imp_1 <> st var
R66487:66487 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66500:66504 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66517:66517 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66493:66494 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66488:66492 Imp_1 <> SMult constr
R66506:66507 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66509:66510 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66522:66530 Imp_1 <> s_execute def
R66536:66536 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66540:66542 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66538:66538 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R66532:66533 Imp_1 <> st var
R66561:66561 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66570:66578 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66580:66591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66563:66564 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66596:66604 Imp_1 <> s_execute def
R66609:66613 Imp_1 <> stack var
R66606:66607 Imp_1 <> st var
def 66698:66707 <> s_execute1
R66783:66788 Coq.Init.Logic <> :type_scope:x_'='_x not
R66716:66724 Imp_1 <> s_execute def
R66748:66748 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66756:66757 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66765:66766 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66774:66775 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66782:66782 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66776:66781 Imp_1 <> SMinus constr
R66767:66771 Imp_1 <> SPush constr
R66758:66762 Imp_1 <> SPush constr
R66749:66753 Imp_1 <> SPush constr
R66738:66739 SfLib <> ::'['_']' not
R66726:66736 Imp_1 <> empty_state def
R66789:66789 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66791:66792 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66794:66794 SfLib <> ::'['_x_','_'..'_','_x_']' not
def 66847:66856 <> s_execute2
R66945:66950 Coq.Init.Logic <> :type_scope:x_'='_x not
R66865:66873 Imp_1 <> s_execute def
R66913:66913 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66921:66922 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66930:66931 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66937:66938 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66944:66944 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66939:66943 Imp_1 <> SPlus constr
R66932:66936 Imp_1 <> SMult constr
R66923:66927 Imp_1 <> SLoad constr
R66929:66929 Imp_1 <> X def
R66914:66918 Imp_1 <> SPush constr
R66900:66900 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66902:66902 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66904:66904 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66876:66881 Imp_1 <> update def
R66895:66895 Imp_1 <> X def
R66883:66893 Imp_1 <> empty_state def
R66951:66951 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66954:66955 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66957:66957 SfLib <> ::'['_x_','_'..'_','_x_']' not
def 67211:67219 <> s_compile
R67226:67229 Imp_1 <> aexp ind
R67234:67237 Coq.Init.Datatypes <> list ind
R67239:67244 Imp_1 <> sinstr ind
R67273:67273 Imp_1 <> e var
R67284:67287 Imp_1 <> ANum constr
R67294:67294 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67302:67302 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67295:67299 Imp_1 <> SPush constr
R67308:67310 Imp_1 <> AId constr
R67317:67317 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67325:67325 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67318:67322 Imp_1 <> SLoad constr
R67331:67335 Imp_1 <> APlus constr
R67358:67361 SfLib <> ::x_'++'_x not
R67346:67354 Imp_1 <> s_compile def
R67374:67377 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R67362:67370 Imp_1 <> s_compile def
R67378:67378 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67384:67384 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67379:67383 Imp_1 <> SPlus constr
R67390:67395 Imp_1 <> AMinus constr
R67419:67422 SfLib <> ::x_'++'_x not
R67407:67415 Imp_1 <> s_compile def
R67435:67438 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R67423:67431 Imp_1 <> s_compile def
R67439:67439 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67446:67446 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67440:67445 Imp_1 <> SMinus constr
R67452:67456 Imp_1 <> AMult constr
R67479:67482 SfLib <> ::x_'++'_x not
R67467:67475 Imp_1 <> s_compile def
R67495:67498 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R67483:67491 Imp_1 <> s_compile def
R67499:67499 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67505:67505 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67500:67504 Imp_1 <> SMult constr
def 67616:67625 <> s_compile1
R67684:67688 Coq.Init.Logic <> :type_scope:x_'='_x not
R67633:67641 Imp_1 <> s_compile def
R67644:67649 Imp_1 <> AMinus constr
R67660:67664 Imp_1 <> AMult constr
R67676:67678 Imp_1 <> AId constr
R67680:67680 Imp_1 <> Y def
R67667:67670 Imp_1 <> ANum constr
R67652:67654 Imp_1 <> AId constr
R67656:67656 Imp_1 <> X def
R67689:67689 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67697:67698 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67706:67707 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67715:67716 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67722:67723 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67730:67730 SfLib <> ::'['_x_','_'..'_','_x_']' not
R67724:67729 Imp_1 <> SMinus constr
R67717:67721 Imp_1 <> SMult constr
R67708:67712 Imp_1 <> SLoad constr
R67714:67714 Imp_1 <> Y def
R67699:67703 Imp_1 <> SPush constr
R67690:67694 Imp_1 <> SLoad constr
R67696:67696 Imp_1 <> X def
prf 68528:68538 <> execute_app
R68598:68602 Coq.Init.Logic <> :type_scope:x_'='_x not
R68569:68577 Imp_1 <> s_execute def
R68591:68594 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R68589:68590 Imp_1 <> p1 var
R68595:68596 Imp_1 <> p2 var
R68582:68586 Imp_1 <> stack var
R68579:68580 Imp_1 <> st var
R68603:68611 Imp_1 <> s_execute def
R68640:68641 Imp_1 <> p2 var
R68617:68625 Imp_1 <> s_execute def
R68636:68637 Imp_1 <> p1 var
R68630:68634 Imp_1 <> stack var
R68627:68628 Imp_1 <> st var
R68613:68614 Imp_1 <> st var
prf 68843:68859 <> execute_eval_comm
R68916:68918 Coq.Init.Logic <> :type_scope:x_'='_x not
R68884:68892 Imp_1 <> s_execute def
R68904:68912 Imp_1 <> s_compile def
R68914:68914 Imp_1 <> e var
R68897:68901 Imp_1 <> stack var
R68894:68895 Imp_1 <> st var
R68929:68932 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R68919:68923 Imp_1 <> aeval def
R68928:68928 Imp_1 <> e var
R68925:68926 Imp_1 <> st var
R68933:68937 Imp_1 <> stack var
R69067:69077 Imp_1 <> execute_app thm
R69067:69077 Imp_1 <> execute_app thm
R69067:69077 Imp_1 <> execute_app thm
R69067:69077 Imp_1 <> execute_app thm
R69067:69077 Imp_1 <> execute_app thm
R69067:69077 Imp_1 <> execute_app thm
R69067:69077 Imp_1 <> execute_app thm
R69067:69077 Imp_1 <> execute_app thm
R69067:69077 Imp_1 <> execute_app thm
R69067:69077 Imp_1 <> execute_app thm
prf 69148:69164 <> s_compile_correct
R69181:69185 Imp_1 <> state def
R69193:69196 Imp_1 <> aexp ind
R69231:69233 Coq.Init.Logic <> :type_scope:x_'='_x not
R69202:69210 Imp_1 <> s_execute def
R69219:69227 Imp_1 <> s_compile def
R69229:69229 Imp_1 <> e var
R69215:69216 SfLib <> ::'['_']' not
R69212:69213 Imp_1 <> st var
R69234:69235 SfLib <> ::'['_x_','_'..'_','_x_']' not
R69246:69247 SfLib <> ::'['_x_','_'..'_','_x_']' not
R69236:69240 Imp_1 <> aeval def
R69245:69245 Imp_1 <> e var
R69242:69243 Imp_1 <> st var
R69291:69307 Imp_1 <> execute_eval_comm thm
R69291:69307 Imp_1 <> execute_eval_comm thm
mod 69385:69392 <> BreakImp
ind 69689:69691 BreakImp com
constr 69707:69711 BreakImp CSkip
constr 69723:69728 BreakImp CBreak
constr 69740:69743 BreakImp CAss
constr 69769:69772 BreakImp CSeq
constr 69798:69800 BreakImp CIf
constr 69834:69839 BreakImp CWhile
R69715:69717 Imp_1 <> com ind
R69732:69734 Imp_1 <> com ind
R69761:69763 Imp_1 <> com ind
R69753:69756 Imp_1 BreakImp aexp ind
R69747:69748 SfLib <> id ind
R69790:69792 Imp_1 <> com ind
R69783:69785 Imp_1 <> com ind
R69776:69778 Imp_1 <> com ind
R69826:69828 Imp_1 <> com ind
R69819:69821 Imp_1 <> com ind
R69812:69814 Imp_1 <> com ind
R69804:69807 Imp_1 BreakImp bexp ind
R69858:69860 Imp_1 <> com ind
R69851:69853 Imp_1 <> com ind
R69843:69846 Imp_1 BreakImp bexp ind
R70075:70079 Imp_1 BreakImp CSkip constr
not 70061 BreakImp ::'SKIP'
R70106:70111 Imp_1 BreakImp CBreak constr
not 70091 BreakImp ::'BREAK'
R70141:70144 Imp_1 BreakImp CAss constr
not 70123 BreakImp ::x_'::='_x
R70191:70194 Imp_1 BreakImp CSeq constr
not 70175 BreakImp ::x_';'_x
R70279:70284 Imp_1 BreakImp CWhile constr
not 70248 BreakImp ::'WHILE'_x_'DO'_x_'END'
R70378:70380 Imp_1 BreakImp CIf constr
not 70336 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 71474:71479 BreakImp status
constr 71495:71503 BreakImp SContinue
constr 71518:71523 BreakImp SBreak
R71507:71512 Imp_1 <> status ind
R71527:71532 Imp_1 <> status ind
ind 73928:73932 BreakImp ceval
constr 73983:73988 BreakImp E_Skip
constr 74060:74066 BreakImp E_Break
constr 74118:74122 BreakImp E_Ass
constr 74227:74239 BreakImp E_SeqContinue
constr 74374:74383 BreakImp E_SeqBreak
constr 74482:74485 BreakImp E_If
constr 74624:74633 BreakImp E_WhileEnd
constr 74732:74746 BreakImp E_WhileContinue
constr 74944:74955 BreakImp E_WhileBreak
R73962:73966 Imp_1 BreakImp state def
R73952:73957 Imp_1 BreakImp status ind
R73943:73947 Imp_1 BreakImp state def
R73936:73938 Imp_1 BreakImp com ind
R75128:75132 Imp_1 <> ceval ind
R74014:74016 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74019:74022 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74032:74034 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74009:74013 Imp_1 BreakImp CSkip constr
R74017:74018 Imp_1 <> st var
R74023:74031 Imp_1 BreakImp SContinue constr
R74035:74036 Imp_1 <> st var
R74093:74095 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74098:74101 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74108:74110 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74087:74092 Imp_1 BreakImp CBreak constr
R74096:74097 Imp_1 <> st var
R74102:74107 Imp_1 BreakImp SBreak constr
R74111:74112 Imp_1 <> st var
R74176:74176 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74185:74188 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74191:74194 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74204:74207 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74221:74221 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74178:74182 Imp_1 BreakImp ::x_'::='_x not
R74177:74177 Imp_1 <> x var
R74183:74184 Imp_1 <> a1 var
R74189:74190 Imp_1 <> st var
R74195:74203 Imp_1 BreakImp SContinue constr
R74208:74213 Imp_1 BreakImp update def
R74220:74220 Imp_1 <> n var
R74218:74218 Imp_1 BreakImp X def
R74215:74216 Imp_1 <> st var
R74162:74164 Coq.Init.Logic <> :type_scope:x_'='_x not
R74151:74155 Imp_1 BreakImp aeval def
R74160:74161 Imp_1 <> a1 var
R74157:74158 Imp_1 <> st var
R74165:74165 Imp_1 <> n var
R74343:74343 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74351:74354 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74357:74360 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74362:74364 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74346:74348 Imp_1 BreakImp ::x_';'_x not
R74344:74345 Imp_1 <> c1 var
R74349:74350 Imp_1 <> c2 var
R74355:74356 Imp_1 <> st var
R74361:74361 Imp_1 <> s var
R74365:74368 Imp_1 <> st'' var
R74315:74317 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74321:74324 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74326:74328 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74313:74314 Imp_1 <> c2 var
R74318:74320 Imp_1 <> st' var
R74325:74325 Imp_1 <> s var
R74329:74332 Imp_1 <> st'' var
R74279:74281 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74284:74287 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74297:74299 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74277:74278 Imp_1 <> c1 var
R74282:74283 Imp_1 <> st var
R74288:74296 Imp_1 BreakImp SContinue constr
R74300:74302 Imp_1 <> st' var
R74447:74447 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74455:74458 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74461:74464 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74471:74473 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74450:74452 Imp_1 BreakImp ::x_';'_x not
R74448:74449 Imp_1 <> c1 var
R74453:74454 Imp_1 <> c2 var
R74459:74460 Imp_1 <> st var
R74465:74470 Imp_1 BreakImp SBreak constr
R74474:74476 Imp_1 <> st' var
R74416:74418 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74421:74424 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74431:74433 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74414:74415 Imp_1 <> c1 var
R74419:74420 Imp_1 <> st var
R74425:74430 Imp_1 BreakImp SBreak constr
R74434:74436 Imp_1 <> st' var
R74577:74577 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74602:74605 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74608:74611 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74613:74615 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74578:74581 Imp_1 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R74583:74588 Imp_1 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R74591:74596 Imp_1 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R74599:74601 Imp_1 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R74582:74582 Imp_1 <> b var
R74589:74590 Imp_1 <> c1 var
R74597:74598 Imp_1 <> c2 var
R74606:74607 Imp_1 <> st var
R74612:74612 Imp_1 <> s var
R74616:74618 Imp_1 <> st' var
R74520:74520 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74550:74553 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74556:74559 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74561:74563 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74524:74528 Imp_1 BreakImp beval def
R74533:74533 Imp_1 <> b var
R74530:74531 Imp_1 <> st var
R74548:74549 Imp_1 <> c2 var
R74540:74541 Imp_1 <> c1 var
R74554:74555 Imp_1 <> st var
R74560:74560 Imp_1 <> s var
R74564:74566 Imp_1 <> st' var
R74686:74686 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74703:74706 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74709:74712 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74722:74724 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74687:74692 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R74694:74697 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R74699:74702 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R74693:74693 Imp_1 <> b var
R74698:74698 Imp_1 <> c var
R74707:74708 Imp_1 <> st var
R74713:74721 Imp_1 BreakImp SContinue constr
R74725:74726 Imp_1 <> st var
R74668:74670 Coq.Init.Logic <> :type_scope:x_'='_x not
R74658:74662 Imp_1 BreakImp beval def
R74667:74667 Imp_1 <> b var
R74664:74665 Imp_1 <> st var
R74671:74675 Coq.Init.Datatypes <> false constr
R74896:74896 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74913:74916 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74919:74922 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74932:74934 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74897:74902 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R74904:74907 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R74909:74912 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R74903:74903 Imp_1 <> b var
R74908:74908 Imp_1 <> c var
R74917:74918 Imp_1 <> st var
R74923:74931 Imp_1 BreakImp SContinue constr
R74935:74938 Imp_1 <> st'' var
R74842:74842 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74859:74862 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74866:74869 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74879:74881 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74843:74848 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R74850:74853 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R74855:74858 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R74849:74849 Imp_1 <> b var
R74854:74854 Imp_1 <> c var
R74863:74865 Imp_1 <> st' var
R74870:74878 Imp_1 BreakImp SContinue constr
R74882:74885 Imp_1 <> st'' var
R74808:74810 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74813:74816 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74826:74828 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74807:74807 Imp_1 <> c var
R74811:74812 Imp_1 <> st var
R74817:74825 Imp_1 BreakImp SContinue constr
R74829:74831 Imp_1 <> st' var
R74790:74792 Coq.Init.Logic <> :type_scope:x_'='_x not
R74780:74784 Imp_1 BreakImp beval def
R74789:74789 Imp_1 <> b var
R74786:74787 Imp_1 <> st var
R74793:74796 Coq.Init.Datatypes <> true constr
R75043:75043 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75060:75063 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75066:75069 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75079:75081 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75044:75049 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R75051:75054 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R75056:75059 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R75050:75050 Imp_1 <> b var
R75055:75055 Imp_1 <> c var
R75064:75065 Imp_1 <> st var
R75070:75078 Imp_1 BreakImp SContinue constr
R75082:75084 Imp_1 <> st' var
R75012:75014 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75017:75020 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75027:75029 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75011:75011 Imp_1 <> c var
R75015:75016 Imp_1 <> st var
R75021:75026 Imp_1 BreakImp SBreak constr
R75030:75032 Imp_1 <> st' var
R74994:74996 Coq.Init.Logic <> :type_scope:x_'='_x not
R74984:74988 Imp_1 BreakImp beval def
R74993:74993 Imp_1 <> b var
R74990:74991 Imp_1 <> st var
R74997:75000 Coq.Init.Datatypes <> true constr
R75128:75132 Imp_1 BreakImp ceval ind
not 75097 BreakImp ::x_'/'_x_'||'_x_'/'_x
prf 75554:75565 BreakImp break_ignore
R75630:75632 Coq.Init.Logic <> :type_scope:x_'='_x not
R75628:75629 Imp_1 <> st var
R75633:75635 Imp_1 <> st' var
R75593:75593 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75602:75605 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75608:75611 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75613:75615 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75599:75600 Imp_1 BreakImp ::x_';'_x not
R75594:75598 Imp_1 BreakImp ::'BREAK' not
R75601:75601 Imp_1 <> c var
R75606:75607 Imp_1 <> st var
R75612:75612 Imp_1 <> s var
R75616:75618 Imp_1 <> st' var
prf 75783:75796 BreakImp while_continue
R75864:75866 Coq.Init.Logic <> :type_scope:x_'='_x not
R75863:75863 Imp_1 <> s var
R75867:75875 Imp_1 BreakImp SContinue constr
R75823:75823 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75840:75843 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75846:75849 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75851:75853 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75824:75829 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R75831:75834 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R75836:75839 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R75830:75830 Imp_1 <> b var
R75835:75835 Imp_1 <> c var
R75844:75845 Imp_1 <> st var
R75850:75850 Imp_1 <> s var
R75854:75856 Imp_1 <> st' var
prf 75968:75987 BreakImp while_stops_on_break
R76063:76063 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76080:76083 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76086:76089 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76099:76101 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76064:76069 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76071:76074 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76076:76079 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76070:76070 Imp_1 <> b var
R76075:76075 Imp_1 <> c var
R76084:76085 Imp_1 <> st var
R76090:76098 Imp_1 BreakImp SContinue constr
R76102:76104 Imp_1 <> st' var
R76036:76038 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76041:76044 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76051:76053 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76035:76035 Imp_1 <> c var
R76039:76040 Imp_1 <> st var
R76045:76050 Imp_1 BreakImp SBreak constr
R76054:76056 Imp_1 <> st' var
R76022:76024 Coq.Init.Logic <> :type_scope:x_'='_x not
R76012:76016 Imp_1 BreakImp beval def
R76021:76021 Imp_1 <> b var
R76018:76019 Imp_1 <> st var
R76025:76028 Coq.Init.Datatypes <> true constr
R76167:76178 Imp_1 BreakImp E_WhileBreak constr
R76167:76178 Imp_1 BreakImp E_WhileBreak constr
prf 76207:76222 BreakImp while_break_true
R76319:76325 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R76330:76331 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R76333:76335 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76340:76343 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76350:76352 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76332:76332 Imp_1 <> c var
R76336:76339 Imp_1 <> st'' var
R76344:76349 Imp_1 BreakImp SBreak constr
R76353:76355 Imp_1 <> st' var
R76306:76308 Coq.Init.Logic <> :type_scope:x_'='_x not
R76295:76299 Imp_1 BreakImp beval def
R76305:76305 Imp_1 <> b var
R76301:76303 Imp_1 <> st' var
R76309:76312 Coq.Init.Datatypes <> true constr
R76247:76247 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76264:76267 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76270:76273 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76283:76285 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76248:76253 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76255:76258 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76260:76263 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76254:76254 Imp_1 <> b var
R76259:76259 Imp_1 <> c var
R76268:76269 Imp_1 <> st var
R76274:76282 Imp_1 BreakImp SContinue constr
R76286:76288 Imp_1 <> st' var
R76419:76424 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76426:76429 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76431:76434 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76419:76424 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76426:76429 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76431:76434 Imp_1 BreakImp ::'WHILE'_x_'DO'_x_'END' not
prf 76729:76747 BreakImp ceval_deterministic
R76760:76762 Imp_1 BreakImp com ind
R76852:76855 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R76846:76848 Coq.Init.Logic <> :type_scope:x_'='_x not
R76843:76845 Imp_1 <> st1 var
R76849:76851 Imp_1 <> st2 var
R76858:76860 Coq.Init.Logic <> :type_scope:x_'='_x not
R76856:76857 Imp_1 <> s1 var
R76861:76862 Imp_1 <> s2 var
R76817:76819 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76822:76825 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76828:76830 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76816:76816 Imp_1 <> c var
R76820:76821 Imp_1 <> st var
R76826:76827 Imp_1 <> s2 var
R76831:76833 Imp_1 <> st2 var
R76789:76791 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76794:76797 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76800:76802 Imp_1 BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76788:76788 Imp_1 <> c var
R76792:76793 Imp_1 <> st var
R76798:76799 Imp_1 <> s1 var
R76803:76805 Imp_1 <> st1 var
R78008:78015 Imp_1 <> <> mod
def 78638:78645 <> beval_sc
R78653:78657 Imp_1 <> state def
R78665:78668 Imp_1 <> bexp ind
R78673:78676 Coq.Init.Datatypes <> bool ind
R78689:78689 Imp_1 <> e var
R78700:78704 Imp_1 <> BTrue constr
R78715:78718 Coq.Init.Datatypes <> true constr
R78724:78729 Imp_1 <> BFalse constr
R78739:78743 Coq.Init.Datatypes <> false constr
R78749:78751 Imp_1 <> BEq constr
R78764:78770 Coq.Arith.EqNat <> beq_nat def
R78787:78791 Imp_1 <> aeval def
R78793:78794 Imp_1 <> st var
R78773:78777 Imp_1 <> aeval def
R78779:78780 Imp_1 <> st var
R78804:78806 Imp_1 <> BLe constr
R78817:78823 SfLib <> ble_nat def
R78840:78844 Imp_1 <> aeval def
R78846:78847 Imp_1 <> st var
R78826:78830 Imp_1 <> aeval def
R78832:78833 Imp_1 <> st var
R78857:78860 Imp_1 <> BNot constr
R78872:78875 Coq.Init.Datatypes <> negb def
R78878:78885 Imp_1 <> beval_sc def
R78887:78888 Imp_1 <> st var
R78898:78901 Imp_1 <> BAnd constr
R78924:78931 Imp_1 <> beval_sc def
R78933:78934 Imp_1 <> st var
R78954:78956 Imp_1 <> eb1 var
R78971:78975 Coq.Init.Datatypes <> false constr
R78980:78984 Coq.Init.Datatypes <> false constr
R78994:78997 Coq.Init.Datatypes <> true constr
R79004:79011 Imp_1 <> beval_sc def
R79013:79014 Imp_1 <> st var
prf 79108:79122 <> beval__beval_sc
R79151:79153 Coq.Init.Logic <> :type_scope:x_'='_x not
R79141:79145 Imp_1 <> beval def
R79150:79150 Imp_1 <> e var
R79147:79148 Imp_1 <> st var
R79154:79161 Imp_1 <> beval_sc def
R79166:79166 Imp_1 <> e var
R79163:79164 Imp_1 <> st var
