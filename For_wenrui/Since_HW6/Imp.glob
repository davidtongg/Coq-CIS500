DIGEST 8726e5979457ac75be3be03f6248a152
FImp
R1717:1721 SfLib <> <> lib
mod 2187:2190 <> AExp
ind 2307:2310 AExp aexp
constr 2326:2329 AExp ANum
constr 2349:2353 AExp APlus
constr 2382:2387 AExp AMinus
constr 2416:2420 AExp AMult
R2340:2343 Imp <> aexp ind
R2333:2335 Coq.Init.Datatypes <> nat ind
R2373:2376 Imp <> aexp ind
R2365:2368 Imp <> aexp ind
R2357:2360 Imp <> aexp ind
R2407:2410 Imp <> aexp ind
R2399:2402 Imp <> aexp ind
R2391:2394 Imp <> aexp ind
R2440:2443 Imp <> aexp ind
R2432:2435 Imp <> aexp ind
R2424:2427 Imp <> aexp ind
ind 2457:2460 AExp bexp
constr 2476:2480 AExp BTrue
constr 2493:2498 AExp BFalse
constr 2511:2513 AExp BEq
constr 2542:2544 AExp BLe
constr 2573:2576 AExp BNot
constr 2597:2600 AExp BAnd
R2484:2487 Imp <> bexp ind
R2502:2505 Imp <> bexp ind
R2533:2536 Imp <> bexp ind
R2525:2528 Imp AExp aexp ind
R2517:2520 Imp AExp aexp ind
R2564:2567 Imp <> bexp ind
R2556:2559 Imp AExp aexp ind
R2548:2551 Imp AExp aexp ind
R2588:2591 Imp <> bexp ind
R2580:2583 Imp <> bexp ind
R2620:2623 Imp <> bexp ind
R2612:2615 Imp <> bexp ind
R2604:2607 Imp <> bexp ind
def 5218:5222 AExp aeval
R5229:5232 Imp AExp aexp ind
R5237:5239 Coq.Init.Datatypes <> nat ind
R5252:5252 Imp <> a var
R5263:5266 Imp AExp ANum constr
R5279:5283 Imp AExp APlus constr
R5294:5294 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5303:5307 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5316:5316 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5295:5299 Imp <> aeval def
R5308:5312 Imp <> aeval def
R5322:5327 Imp AExp AMinus constr
R5339:5339 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5348:5352 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5361:5361 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5340:5344 Imp <> aeval def
R5353:5357 Imp <> aeval def
R5367:5371 Imp AExp AMult constr
R5382:5382 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5391:5395 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5404:5404 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5383:5387 Imp <> aeval def
R5396:5400 Imp <> aeval def
def 5422:5432 AExp test_aeval1
R5468:5470 Coq.Init.Logic <> :type_scope:x_'='_x not
R5437:5441 Imp AExp aeval def
R5444:5448 Imp AExp APlus constr
R5460:5463 Imp AExp ANum constr
R5451:5454 Imp AExp ANum constr
def 5578:5582 AExp beval
R5589:5592 Imp AExp bexp ind
R5597:5600 Coq.Init.Datatypes <> bool ind
R5613:5613 Imp <> b var
R5624:5628 Imp AExp BTrue constr
R5639:5642 Coq.Init.Datatypes <> true constr
R5648:5653 Imp AExp BFalse constr
R5663:5667 Coq.Init.Datatypes <> false constr
R5673:5675 Imp AExp BEq constr
R5688:5694 Coq.Arith.EqNat <> beq_nat def
R5708:5712 Imp AExp aeval def
R5697:5701 Imp AExp aeval def
R5722:5724 Imp AExp BLe constr
R5737:5743 SfLib <> ble_nat def
R5757:5761 Imp AExp aeval def
R5746:5750 Imp AExp aeval def
R5771:5774 Imp AExp BNot constr
R5786:5789 Coq.Init.Datatypes <> negb def
R5792:5796 Imp <> beval def
R5806:5809 Imp AExp BAnd constr
R5821:5824 Coq.Init.Datatypes <> andb def
R5838:5842 Imp <> beval def
R5827:5831 Imp <> beval def
def 6241:6254 AExp optimize_0plus
R6259:6262 Imp AExp aexp ind
R6267:6270 Imp AExp aexp ind
R6283:6283 Imp <> a var
R6294:6297 Imp AExp ANum constr
R6310:6313 Imp AExp ANum constr
R6321:6325 Imp AExp APlus constr
R6328:6331 Imp AExp ANum constr
R6348:6361 Imp <> optimize_0plus def
R6370:6374 Imp AExp APlus constr
R6391:6395 Imp AExp APlus constr
R6418:6431 Imp <> optimize_0plus def
R6398:6411 Imp <> optimize_0plus def
R6441:6446 Imp AExp AMinus constr
R6463:6468 Imp AExp AMinus constr
R6491:6504 Imp <> optimize_0plus def
R6471:6484 Imp <> optimize_0plus def
R6514:6518 Imp AExp AMult constr
R6535:6539 Imp AExp AMult constr
R6562:6575 Imp <> optimize_0plus def
R6542:6555 Imp <> optimize_0plus def
def 6728:6746 AExp test_optimize_0plus
R6880:6884 Coq.Init.Logic <> :type_scope:x_'='_x not
R6751:6764 Imp AExp optimize_0plus def
R6767:6771 Imp AExp APlus constr
R6807:6811 Imp AExp APlus constr
R6854:6858 Imp AExp APlus constr
R6870:6873 Imp AExp ANum constr
R6861:6864 Imp AExp ANum constr
R6814:6817 Imp AExp ANum constr
R6774:6777 Imp AExp ANum constr
R6885:6889 Imp AExp APlus constr
R6901:6904 Imp AExp ANum constr
R6892:6895 Imp AExp ANum constr
prf 7124:7143 AExp optimize_0plus_sound
R7182:7184 Coq.Init.Logic <> :type_scope:x_'='_x not
R7158:7162 Imp AExp aeval def
R7165:7178 Imp AExp optimize_0plus def
R7180:7180 Imp <> a var
R7185:7189 Imp AExp aeval def
R7191:7191 Imp <> a var
prf 9297:9301 AExp ev100
R9305:9306 SfLib <> ev ind
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9336:9340 SfLib <> ev_SS constr
R9435:9438 SfLib <> ev_0 constr
R9435:9438 SfLib <> ev_0 constr
prf 9666:9671 AExp ev100'
R9675:9676 SfLib <> ev ind
R9706:9709 SfLib <> ev_0 constr
R9706:9709 SfLib <> ev_0 constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9773:9777 SfLib <> ev_SS constr
R9787:9790 SfLib <> ev_0 constr
R9787:9790 SfLib <> ev_0 constr
prf 10441:10446 AExp silly1
R10469:10471 Coq.Init.Logic <> :type_scope:x_'='_x not
R10461:10465 Imp AExp aeval def
R10467:10468 Imp <> ae var
R10472:10476 Imp AExp aeval def
R10478:10479 Imp <> ae var
prf 10555:10560 AExp silly2
R10588:10588 Imp <> P var
R10583:10583 Imp <> P var
prf 11304:11306 AExp foo
R11331:11333 Coq.Init.Logic <> :type_scope:x_'='_x not
R11320:11326 SfLib <> ble_nat def
R11330:11330 Imp <> n var
R11334:11337 Coq.Init.Datatypes <> true constr
prf 11584:11587 AExp foo'
R11612:11614 Coq.Init.Logic <> :type_scope:x_'='_x not
R11601:11607 SfLib <> ble_nat def
R11611:11611 Imp <> n var
R11615:11618 Coq.Init.Datatypes <> true constr
prf 11949:11969 AExp optimize_0plus_sound'
R12008:12010 Coq.Init.Logic <> :type_scope:x_'='_x not
R11984:11988 Imp AExp aeval def
R11991:12004 Imp AExp optimize_0plus def
R12006:12006 Imp <> a var
R12011:12015 Imp AExp aeval def
R12017:12017 Imp <> a var
prf 14797:14818 AExp optimize_0plus_sound''
R14857:14859 Coq.Init.Logic <> :type_scope:x_'='_x not
R14833:14837 Imp AExp aeval def
R14840:14853 Imp AExp optimize_0plus def
R14855:14855 Imp <> a var
R14860:14864 Imp AExp aeval def
R14866:14866 Imp <> a var
prf 19393:19415 AExp optimize_0plus_sound'''
R19454:19456 Coq.Init.Logic <> :type_scope:x_'='_x not
R19430:19434 Imp AExp aeval def
R19437:19450 Imp AExp optimize_0plus def
R19452:19452 Imp <> a var
R19457:19461 Imp AExp aeval def
R19463:19463 Imp <> a var
def 20696:20711 AExp optimize_0plus_b
R20716:20719 Imp AExp bexp ind
R20724:20727 Imp AExp bexp ind
R20740:20740 Imp <> b var
R20751:20755 Imp AExp BTrue constr
R20761:20765 Imp AExp BTrue constr
R20771:20776 Imp AExp BFalse constr
R20781:20786 Imp AExp BFalse constr
R20792:20794 Imp AExp BEq constr
R20803:20805 Imp AExp BEq constr
R20827:20840 Imp AExp optimize_0plus def
R20808:20821 Imp AExp optimize_0plus def
R20849:20851 Imp AExp BLe constr
R20860:20862 Imp AExp BLe constr
R20884:20897 Imp AExp optimize_0plus def
R20865:20878 Imp AExp optimize_0plus def
R20905:20908 Imp AExp BNot constr
R20915:20918 Imp AExp BNot constr
R20921:20936 Imp <> optimize_0plus_b def
R20944:20947 Imp AExp BAnd constr
R20949:20954 Imp AExp BFalse constr
R20961:20966 Imp AExp BFalse constr
R20973:20976 Imp AExp BAnd constr
R20985:20988 Imp AExp BAnd constr
R21012:21027 Imp <> optimize_0plus_b def
R20991:21006 Imp <> optimize_0plus_b def
prf 21046:21067 AExp optimize_0plus_b_sound
R21106:21108 Coq.Init.Logic <> :type_scope:x_'='_x not
R21080:21084 Imp AExp beval def
R21087:21102 Imp AExp optimize_0plus_b def
R21104:21104 Imp <> b var
R21109:21113 Imp AExp beval def
R21115:21115 Imp <> b var
R21198:21217 Imp AExp optimize_0plus_sound thm
R21266:21285 Imp AExp optimize_0plus_sound thm
R21198:21217 Imp AExp optimize_0plus_sound thm
R21198:21217 Imp AExp optimize_0plus_sound thm
R21198:21217 Imp AExp optimize_0plus_sound thm
R21198:21217 Imp AExp optimize_0plus_sound thm
R21198:21217 Imp AExp optimize_0plus_sound thm
R21198:21217 Imp AExp optimize_0plus_sound thm
R21198:21217 Imp AExp optimize_0plus_sound thm
R21198:21217 Imp AExp optimize_0plus_sound thm
R21266:21285 Imp AExp optimize_0plus_sound thm
R21266:21285 Imp AExp optimize_0plus_sound thm
R21444:21463 Imp AExp optimize_0plus_sound thm
R21444:21463 Imp AExp optimize_0plus_sound thm
R21444:21463 Imp AExp optimize_0plus_sound thm
R21444:21463 Imp AExp optimize_0plus_sound thm
R21444:21463 Imp AExp optimize_0plus_sound thm
R21444:21463 Imp AExp optimize_0plus_sound thm
R21444:21463 Imp AExp optimize_0plus_sound thm
R21444:21463 Imp AExp optimize_0plus_sound thm
R21444:21463 Imp AExp optimize_0plus_sound thm
R21444:21463 Imp AExp optimize_0plus_sound thm
def 22709:22732 AExp silly_presburger_example
R22792:22795 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22791:22791 Imp <> m var
R22796:22796 Imp <> p var
R22768:22771 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22759:22762 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22755:22757 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22754:22754 Imp <> m var
R22758:22758 Imp <> n var
R22764:22766 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22763:22763 Imp <> n var
R22767:22767 Imp <> o var
R22777:22779 Coq.Init.Logic <> :type_scope:x_'='_x not
R22773:22775 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22772:22772 Imp <> o var
R22781:22783 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22780:22780 Imp <> p var
mod 24873:24888 <> AExp.aevalR_first_try
ind 24902:24907 AExp.aevalR_first_try aevalR
constr 24938:24943 AExp.aevalR_first_try E_ANum
constr 24994:25000 AExp.aevalR_first_try E_APlus
constr 25124:25131 AExp.aevalR_first_try E_AMinus
constr 25255:25261 AExp.aevalR_first_try E_AMult
R24919:24921 Coq.Init.Datatypes <> nat ind
R24911:24914 Imp AExp.aevalR_first_try aexp ind
R24959:24961 Coq.Init.Datatypes <> nat ind
R24971:24976 Imp <> aevalR ind
R24987:24987 Imp <> n var
R24979:24982 Imp AExp.aevalR_first_try ANum constr
R24984:24984 Imp <> n var
R25019:25022 Imp AExp.aevalR_first_try aexp ind
R25033:25035 Coq.Init.Datatypes <> nat ind
R25089:25094 Imp <> aevalR ind
R25113:25115 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R25111:25112 Imp <> n1 var
R25116:25117 Imp <> n2 var
R25097:25101 Imp AExp.aevalR_first_try APlus constr
R25106:25107 Imp <> e2 var
R25103:25104 Imp <> e1 var
R25067:25072 Imp <> aevalR ind
R25077:25078 Imp <> n2 var
R25074:25075 Imp <> e2 var
R25045:25050 Imp <> aevalR ind
R25055:25056 Imp <> n1 var
R25052:25053 Imp <> e1 var
R25149:25152 Imp AExp.aevalR_first_try aexp ind
R25163:25165 Coq.Init.Datatypes <> nat ind
R25219:25224 Imp <> aevalR ind
R25244:25246 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R25242:25243 Imp <> n1 var
R25247:25248 Imp <> n2 var
R25227:25232 Imp AExp.aevalR_first_try AMinus constr
R25237:25238 Imp <> e2 var
R25234:25235 Imp <> e1 var
R25197:25202 Imp <> aevalR ind
R25207:25208 Imp <> n2 var
R25204:25205 Imp <> e2 var
R25175:25180 Imp <> aevalR ind
R25185:25186 Imp <> n1 var
R25182:25183 Imp <> e1 var
R25280:25283 Imp AExp.aevalR_first_try aexp ind
R25294:25296 Coq.Init.Datatypes <> nat ind
R25350:25355 Imp <> aevalR ind
R25374:25376 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25372:25373 Imp <> n1 var
R25377:25378 Imp <> n2 var
R25358:25362 Imp AExp.aevalR_first_try AMult constr
R25367:25368 Imp <> e2 var
R25364:25365 Imp <> e1 var
R25328:25333 Imp <> aevalR ind
R25338:25339 Imp <> n2 var
R25335:25336 Imp <> e2 var
R25306:25311 Imp <> aevalR ind
R25316:25317 Imp <> n1 var
R25313:25314 Imp <> e1 var
R25937:25942 Imp AExp.aevalR_first_try aevalR ind
not 25922 AExp.aevalR_first_try :type_scope:x_'||'_x
R25968:25983 Imp aevalR_first_try <> mod
ind 26487:26492 AExp aevalR
constr 26523:26528 AExp E_ANum
constr 26572:26578 AExp E_APlus
constr 26683:26690 AExp E_AMinus
constr 26796:26802 AExp E_AMult
R26504:26506 Coq.Init.Datatypes <> nat ind
R26496:26499 Imp AExp aexp ind
R26928:26933 Imp <> aevalR ind
R26542:26544 Coq.Init.Datatypes <> nat ind
R26554:26554 Imp AExp :type_scope:x_'||'_x not
R26561:26565 Imp AExp :type_scope:x_'||'_x not
R26555:26558 Imp AExp ANum constr
R26560:26560 Imp <> n var
R26566:26566 Imp <> n var
R26597:26600 Imp AExp aexp ind
R26612:26614 Coq.Init.Datatypes <> nat ind
R26652:26652 Imp AExp :type_scope:x_'||'_x not
R26664:26669 Imp AExp :type_scope:x_'||'_x not
R26677:26677 Imp AExp :type_scope:x_'||'_x not
R26653:26657 Imp AExp APlus constr
R26662:26663 Imp <> e2 var
R26659:26660 Imp <> e1 var
R26672:26674 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26670:26671 Imp <> n1 var
R26675:26676 Imp <> n2 var
R26641:26644 Imp AExp :type_scope:x_'||'_x not
R26639:26640 Imp <> e2 var
R26645:26646 Imp <> n2 var
R26627:26630 Imp AExp :type_scope:x_'||'_x not
R26625:26626 Imp <> e1 var
R26631:26632 Imp <> n1 var
R26709:26712 Imp AExp aexp ind
R26724:26726 Coq.Init.Datatypes <> nat ind
R26764:26764 Imp AExp :type_scope:x_'||'_x not
R26777:26782 Imp AExp :type_scope:x_'||'_x not
R26790:26790 Imp AExp :type_scope:x_'||'_x not
R26765:26770 Imp AExp AMinus constr
R26775:26776 Imp <> e2 var
R26772:26773 Imp <> e1 var
R26785:26787 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R26783:26784 Imp <> n1 var
R26788:26789 Imp <> n2 var
R26753:26756 Imp AExp :type_scope:x_'||'_x not
R26751:26752 Imp <> e2 var
R26757:26758 Imp <> n2 var
R26739:26742 Imp AExp :type_scope:x_'||'_x not
R26737:26738 Imp <> e1 var
R26743:26744 Imp <> n1 var
R26822:26825 Imp AExp aexp ind
R26837:26839 Coq.Init.Datatypes <> nat ind
R26877:26877 Imp AExp :type_scope:x_'||'_x not
R26889:26894 Imp AExp :type_scope:x_'||'_x not
R26902:26902 Imp AExp :type_scope:x_'||'_x not
R26878:26882 Imp AExp AMult constr
R26887:26888 Imp <> e2 var
R26884:26885 Imp <> e1 var
R26897:26899 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26895:26896 Imp <> n1 var
R26900:26901 Imp <> n2 var
R26866:26869 Imp AExp :type_scope:x_'||'_x not
R26864:26865 Imp <> e2 var
R26870:26871 Imp <> n2 var
R26852:26855 Imp AExp :type_scope:x_'||'_x not
R26850:26851 Imp <> e1 var
R26856:26857 Imp <> n1 var
R26928:26933 Imp AExp aevalR ind
not 26913 AExp :type_scope:x_'||'_x
prf 29973:29988 AExp aeval_iff_aevalR
R30006:30006 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30013:30018 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30008:30011 Imp AExp :type_scope:x_'||'_x not
R30007:30007 Imp <> a var
R30012:30012 Imp <> n var
R30026:30028 Coq.Init.Logic <> :type_scope:x_'='_x not
R30019:30023 Imp AExp aeval def
R30025:30025 Imp <> a var
R30029:30029 Imp <> n var
R30518:30523 Imp AExp E_ANum constr
R30518:30523 Imp AExp E_ANum constr
R30555:30561 Imp AExp E_APlus constr
R30555:30561 Imp AExp E_APlus constr
R30656:30663 Imp AExp E_AMinus constr
R30656:30663 Imp AExp E_AMinus constr
R30757:30763 Imp AExp E_AMult constr
R30757:30763 Imp AExp E_AMult constr
prf 30931:30947 AExp aeval_iff_aevalR'
R30965:30965 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30972:30977 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30967:30970 Imp AExp :type_scope:x_'||'_x not
R30966:30966 Imp <> a var
R30971:30971 Imp <> n var
R30985:30987 Coq.Init.Logic <> :type_scope:x_'='_x not
R30978:30982 Imp AExp aeval def
R30984:30984 Imp <> a var
R30988:30988 Imp <> n var
ind 31404:31409 AExp bevalR
constr 31442:31447 AExp E_True
constr 31469:31475 AExp E_False
constr 31499:31502 AExp E_Eq
constr 31621:31624 AExp E_Le
constr 31743:31747 AExp E_Not
constr 31827:31831 AExp E_And
R31421:31424 Coq.Init.Datatypes <> bool ind
R31413:31416 Imp AExp bexp ind
R31968:31973 Imp <> bevalR ind
R31456:31459 Imp AExp :type_scope:x_'||'_x not
R31451:31455 Imp AExp BTrue constr
R31460:31463 Coq.Init.Datatypes <> true constr
R31485:31488 Imp AExp :type_scope:x_'||'_x not
R31479:31484 Imp AExp BFalse constr
R31489:31493 Coq.Init.Datatypes <> false constr
R31521:31524 Imp AExp aexp ind
R31535:31537 Coq.Init.Datatypes <> nat ind
R31586:31586 Imp AExp :type_scope:x_'||'_x not
R31596:31601 Imp AExp :type_scope:x_'||'_x not
R31615:31615 Imp AExp :type_scope:x_'||'_x not
R31587:31589 Imp AExp BEq constr
R31594:31595 Imp <> e2 var
R31591:31592 Imp <> e1 var
R31602:31608 Coq.Arith.EqNat <> beq_nat def
R31613:31614 Imp <> n2 var
R31610:31611 Imp <> n1 var
R31569:31574 Imp AExp aevalR ind
R31579:31580 Imp <> n2 var
R31576:31577 Imp <> e2 var
R31551:31556 Imp AExp aevalR ind
R31561:31562 Imp <> n1 var
R31558:31559 Imp <> e1 var
R31643:31646 Imp AExp aexp ind
R31657:31659 Coq.Init.Datatypes <> nat ind
R31708:31708 Imp AExp :type_scope:x_'||'_x not
R31718:31723 Imp AExp :type_scope:x_'||'_x not
R31737:31737 Imp AExp :type_scope:x_'||'_x not
R31709:31711 Imp AExp BLe constr
R31716:31717 Imp <> e2 var
R31713:31714 Imp <> e1 var
R31724:31730 SfLib <> ble_nat def
R31735:31736 Imp <> n2 var
R31732:31733 Imp <> n1 var
R31691:31696 Imp AExp aevalR ind
R31701:31702 Imp <> n2 var
R31698:31699 Imp <> e2 var
R31673:31678 Imp AExp aevalR ind
R31683:31684 Imp <> n1 var
R31680:31681 Imp <> e1 var
R31763:31766 Imp AExp bexp ind
R31774:31777 Coq.Init.Datatypes <> bool ind
R31800:31800 Imp AExp :type_scope:x_'||'_x not
R31808:31813 Imp AExp :type_scope:x_'||'_x not
R31821:31821 Imp AExp :type_scope:x_'||'_x not
R31801:31804 Imp AExp BNot constr
R31806:31807 Imp <> b1 var
R31814:31817 Coq.Init.Datatypes <> negb def
R31819:31820 Imp <> b2 var
R31782:31787 Imp <> bevalR ind
R31792:31793 Imp <> b2 var
R31789:31790 Imp <> b1 var
R31850:31853 Imp AExp bexp ind
R31864:31867 Coq.Init.Datatypes <> bool ind
R31917:31917 Imp AExp :type_scope:x_'||'_x not
R31928:31933 Imp AExp :type_scope:x_'||'_x not
R31944:31944 Imp AExp :type_scope:x_'||'_x not
R31918:31921 Imp AExp BAnd constr
R31926:31927 Imp <> e2 var
R31923:31924 Imp <> e1 var
R31934:31937 Coq.Init.Datatypes <> andb def
R31942:31943 Imp <> b2 var
R31939:31940 Imp <> b1 var
R31900:31905 Imp <> bevalR ind
R31910:31911 Imp <> b2 var
R31907:31908 Imp <> e2 var
R31882:31887 Imp <> bevalR ind
R31892:31893 Imp <> b1 var
R31889:31890 Imp <> e1 var
R31968:31973 Imp AExp bevalR ind
not 31953 AExp :type_scope:x_'||'_x
R32019:32024 Imp AExp bevalR ind
not 32004 AExp :type_scope:x_'||'_x
prf 32054:32069 AExp beval_iff_bevalR
R32085:32085 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R32092:32097 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R32087:32090 Imp AExp :type_scope:x_'||'_x not
R32086:32086 Imp <> e var
R32091:32091 Imp <> b var
R32105:32107 Coq.Init.Logic <> :type_scope:x_'='_x not
R32098:32102 Imp AExp beval def
R32104:32104 Imp <> e var
R32108:32108 Imp <> b var
R32214:32229 Imp AExp aeval_iff_aevalR thm
R32245:32260 Imp AExp aeval_iff_aevalR thm
R32214:32229 Imp AExp aeval_iff_aevalR thm
R32245:32260 Imp AExp aeval_iff_aevalR thm
R32214:32229 Imp AExp aeval_iff_aevalR thm
R32245:32260 Imp AExp aeval_iff_aevalR thm
R32390:32395 Imp AExp E_True constr
R32408:32414 Imp AExp E_False constr
R32427:32430 Imp AExp E_Eq constr
R32443:32446 Imp AExp E_Le constr
R32459:32463 Imp AExp E_Not constr
R32476:32480 Imp AExp E_And constr
R32499:32514 Imp AExp aeval_iff_aevalR thm
R32390:32395 Imp AExp E_True constr
R32390:32395 Imp AExp E_True constr
R32390:32395 Imp AExp E_True constr
R32390:32395 Imp AExp E_True constr
R32390:32395 Imp AExp E_True constr
R32390:32395 Imp AExp E_True constr
R32408:32414 Imp AExp E_False constr
R32408:32414 Imp AExp E_False constr
R32408:32414 Imp AExp E_False constr
R32408:32414 Imp AExp E_False constr
R32408:32414 Imp AExp E_False constr
R32427:32430 Imp AExp E_Eq constr
R32427:32430 Imp AExp E_Eq constr
R32427:32430 Imp AExp E_Eq constr
R32427:32430 Imp AExp E_Eq constr
R32443:32446 Imp AExp E_Le constr
R32443:32446 Imp AExp E_Le constr
R32443:32446 Imp AExp E_Le constr
R32443:32446 Imp AExp E_Le constr
R32443:32446 Imp AExp E_Le constr
R32459:32463 Imp AExp E_Not constr
R32459:32463 Imp AExp E_Not constr
R32459:32463 Imp AExp E_Not constr
R32459:32463 Imp AExp E_Not constr
R32459:32463 Imp AExp E_Not constr
R32459:32463 Imp AExp E_Not constr
R32476:32480 Imp AExp E_And constr
R32476:32480 Imp AExp E_And constr
R32476:32480 Imp AExp E_And constr
R32476:32480 Imp AExp E_And constr
R32476:32480 Imp AExp E_And constr
R32476:32480 Imp AExp E_And constr
R32499:32514 Imp AExp aeval_iff_aevalR thm
R32499:32514 Imp AExp aeval_iff_aevalR thm
R32499:32514 Imp AExp aeval_iff_aevalR thm
R32499:32514 Imp AExp aeval_iff_aevalR thm
R32499:32514 Imp AExp aeval_iff_aevalR thm
R32499:32514 Imp AExp aeval_iff_aevalR thm
R32499:32514 Imp AExp aeval_iff_aevalR thm
R32499:32514 Imp AExp aeval_iff_aevalR thm
R32499:32514 Imp AExp aeval_iff_aevalR thm
R32499:32514 Imp AExp aeval_iff_aevalR thm
R32499:32514 Imp AExp aeval_iff_aevalR thm
R32652:32655 Imp <> <> mod
mod 33479:33493 <> aevalR_division
ind 33632:33635 aevalR_division aexp
constr 33651:33654 aevalR_division ANum
constr 33674:33678 aevalR_division APlus
constr 33707:33712 aevalR_division AMinus
constr 33741:33745 aevalR_division AMult
constr 33774:33777 aevalR_division ADiv
R33665:33668 Imp <> aexp ind
R33658:33660 Coq.Init.Datatypes <> nat ind
R33698:33701 Imp <> aexp ind
R33690:33693 Imp <> aexp ind
R33682:33685 Imp <> aexp ind
R33732:33735 Imp <> aexp ind
R33724:33727 Imp <> aexp ind
R33716:33719 Imp <> aexp ind
R33765:33768 Imp <> aexp ind
R33757:33760 Imp <> aexp ind
R33749:33752 Imp <> aexp ind
R33797:33800 Imp <> aexp ind
R33789:33792 Imp <> aexp ind
R33781:33784 Imp <> aexp ind
ind 34057:34062 aevalR_division aevalR
constr 34093:34098 aevalR_division E_ANum
constr 34142:34148 aevalR_division E_APlus
constr 34253:34260 aevalR_division E_AMinus
constr 34366:34372 aevalR_division E_AMult
constr 34478:34483 aevalR_division E_ADiv
R34074:34076 Coq.Init.Datatypes <> nat ind
R34066:34069 Imp aevalR_division aexp ind
R34622:34627 Imp <> aevalR ind
R34112:34114 Coq.Init.Datatypes <> nat ind
R34124:34124 Imp aevalR_division :type_scope:x_'||'_x not
R34131:34135 Imp aevalR_division :type_scope:x_'||'_x not
R34125:34128 Imp aevalR_division ANum constr
R34130:34130 Imp <> n var
R34136:34136 Imp <> n var
R34167:34170 Imp aevalR_division aexp ind
R34182:34184 Coq.Init.Datatypes <> nat ind
R34222:34222 Imp aevalR_division :type_scope:x_'||'_x not
R34234:34239 Imp aevalR_division :type_scope:x_'||'_x not
R34247:34247 Imp aevalR_division :type_scope:x_'||'_x not
R34223:34227 Imp aevalR_division APlus constr
R34232:34233 Imp <> a2 var
R34229:34230 Imp <> a1 var
R34242:34244 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34240:34241 Imp <> n1 var
R34245:34246 Imp <> n2 var
R34211:34214 Imp aevalR_division :type_scope:x_'||'_x not
R34209:34210 Imp <> a2 var
R34215:34216 Imp <> n2 var
R34197:34200 Imp aevalR_division :type_scope:x_'||'_x not
R34195:34196 Imp <> a1 var
R34201:34202 Imp <> n1 var
R34279:34282 Imp aevalR_division aexp ind
R34294:34296 Coq.Init.Datatypes <> nat ind
R34334:34334 Imp aevalR_division :type_scope:x_'||'_x not
R34347:34352 Imp aevalR_division :type_scope:x_'||'_x not
R34360:34360 Imp aevalR_division :type_scope:x_'||'_x not
R34335:34340 Imp aevalR_division AMinus constr
R34345:34346 Imp <> a2 var
R34342:34343 Imp <> a1 var
R34355:34357 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R34353:34354 Imp <> n1 var
R34358:34359 Imp <> n2 var
R34323:34326 Imp aevalR_division :type_scope:x_'||'_x not
R34321:34322 Imp <> a2 var
R34327:34328 Imp <> n2 var
R34309:34312 Imp aevalR_division :type_scope:x_'||'_x not
R34307:34308 Imp <> a1 var
R34313:34314 Imp <> n1 var
R34392:34395 Imp aevalR_division aexp ind
R34407:34409 Coq.Init.Datatypes <> nat ind
R34447:34447 Imp aevalR_division :type_scope:x_'||'_x not
R34459:34464 Imp aevalR_division :type_scope:x_'||'_x not
R34472:34472 Imp aevalR_division :type_scope:x_'||'_x not
R34448:34452 Imp aevalR_division AMult constr
R34457:34458 Imp <> a2 var
R34454:34455 Imp <> a1 var
R34467:34469 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R34465:34466 Imp <> n1 var
R34470:34471 Imp <> n2 var
R34436:34439 Imp aevalR_division :type_scope:x_'||'_x not
R34434:34435 Imp <> a2 var
R34440:34441 Imp <> n2 var
R34422:34425 Imp aevalR_division :type_scope:x_'||'_x not
R34420:34421 Imp <> a1 var
R34426:34427 Imp <> n1 var
R34503:34506 Imp aevalR_division aexp ind
R34520:34522 Coq.Init.Datatypes <> nat ind
R34581:34581 Imp aevalR_division :type_scope:x_'||'_x not
R34592:34596 Imp aevalR_division :type_scope:x_'||'_x not
R34582:34585 Imp aevalR_division ADiv constr
R34590:34591 Imp <> a2 var
R34587:34588 Imp <> a1 var
R34597:34598 Imp <> n3 var
R34571:34573 Coq.Init.Logic <> :type_scope:x_'='_x not
R34561:34564 Coq.Init.Peano <> mult def
R34569:34570 Imp <> n3 var
R34566:34567 Imp <> n2 var
R34574:34575 Imp <> n1 var
R34549:34552 Imp aevalR_division :type_scope:x_'||'_x not
R34547:34548 Imp <> a2 var
R34553:34554 Imp <> n2 var
R34535:34538 Imp aevalR_division :type_scope:x_'||'_x not
R34533:34534 Imp <> a1 var
R34539:34540 Imp <> n1 var
R34622:34627 Imp aevalR_division aevalR ind
not 34607 aevalR_division :type_scope:x_'||'_x
R34653:34667 Imp <> <> mod
mod 34677:34691 <> aevalR_extended
ind 34705:34708 aevalR_extended aexp
constr 34724:34727 aevalR_extended AAny
constr 34774:34777 aevalR_extended ANum
constr 34797:34801 aevalR_extended APlus
constr 34830:34835 aevalR_extended AMinus
constr 34864:34868 aevalR_extended AMult
R34732:34735 Imp <> aexp ind
R34788:34791 Imp <> aexp ind
R34781:34783 Coq.Init.Datatypes <> nat ind
R34821:34824 Imp <> aexp ind
R34813:34816 Imp <> aexp ind
R34805:34808 Imp <> aexp ind
R34855:34858 Imp <> aexp ind
R34847:34850 Imp <> aexp ind
R34839:34842 Imp <> aexp ind
R34888:34891 Imp <> aexp ind
R34880:34883 Imp <> aexp ind
R34872:34875 Imp <> aexp ind
ind 35084:35089 aevalR_extended aevalR
constr 35120:35124 aevalR_extended E_Any
constr 35195:35200 aevalR_extended E_ANum
constr 35244:35250 aevalR_extended E_APlus
constr 35355:35362 aevalR_extended E_AMinus
constr 35468:35474 aevalR_extended E_AMult
R35101:35103 Coq.Init.Datatypes <> nat ind
R35093:35096 Imp aevalR_extended aexp ind
R35598:35603 Imp <> aevalR ind
R35138:35140 Coq.Init.Datatypes <> nat ind
R35154:35157 Imp aevalR_extended :type_scope:x_'||'_x not
R35150:35153 Imp aevalR_extended AAny constr
R35158:35158 Imp <> n var
R35214:35216 Coq.Init.Datatypes <> nat ind
R35226:35226 Imp aevalR_extended :type_scope:x_'||'_x not
R35233:35237 Imp aevalR_extended :type_scope:x_'||'_x not
R35227:35230 Imp aevalR_extended ANum constr
R35232:35232 Imp <> n var
R35238:35238 Imp <> n var
R35269:35272 Imp aevalR_extended aexp ind
R35284:35286 Coq.Init.Datatypes <> nat ind
R35324:35324 Imp aevalR_extended :type_scope:x_'||'_x not
R35336:35341 Imp aevalR_extended :type_scope:x_'||'_x not
R35349:35349 Imp aevalR_extended :type_scope:x_'||'_x not
R35325:35329 Imp aevalR_extended APlus constr
R35334:35335 Imp <> a2 var
R35331:35332 Imp <> a1 var
R35344:35346 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35342:35343 Imp <> n1 var
R35347:35348 Imp <> n2 var
R35313:35316 Imp aevalR_extended :type_scope:x_'||'_x not
R35311:35312 Imp <> a2 var
R35317:35318 Imp <> n2 var
R35299:35302 Imp aevalR_extended :type_scope:x_'||'_x not
R35297:35298 Imp <> a1 var
R35303:35304 Imp <> n1 var
R35381:35384 Imp aevalR_extended aexp ind
R35396:35398 Coq.Init.Datatypes <> nat ind
R35436:35436 Imp aevalR_extended :type_scope:x_'||'_x not
R35449:35454 Imp aevalR_extended :type_scope:x_'||'_x not
R35462:35462 Imp aevalR_extended :type_scope:x_'||'_x not
R35437:35442 Imp aevalR_extended AMinus constr
R35447:35448 Imp <> a2 var
R35444:35445 Imp <> a1 var
R35457:35459 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R35455:35456 Imp <> n1 var
R35460:35461 Imp <> n2 var
R35425:35428 Imp aevalR_extended :type_scope:x_'||'_x not
R35423:35424 Imp <> a2 var
R35429:35430 Imp <> n2 var
R35411:35414 Imp aevalR_extended :type_scope:x_'||'_x not
R35409:35410 Imp <> a1 var
R35415:35416 Imp <> n1 var
R35494:35497 Imp aevalR_extended aexp ind
R35509:35511 Coq.Init.Datatypes <> nat ind
R35549:35549 Imp aevalR_extended :type_scope:x_'||'_x not
R35561:35566 Imp aevalR_extended :type_scope:x_'||'_x not
R35574:35574 Imp aevalR_extended :type_scope:x_'||'_x not
R35550:35554 Imp aevalR_extended AMult constr
R35559:35560 Imp <> a2 var
R35556:35557 Imp <> a1 var
R35569:35571 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R35567:35568 Imp <> n1 var
R35572:35573 Imp <> n2 var
R35538:35541 Imp aevalR_extended :type_scope:x_'||'_x not
R35536:35537 Imp <> a2 var
R35542:35543 Imp <> n2 var
R35524:35527 Imp aevalR_extended :type_scope:x_'||'_x not
R35522:35523 Imp <> a1 var
R35528:35529 Imp <> n1 var
R35598:35603 Imp aevalR_extended aevalR ind
not 35583 aevalR_extended :type_scope:x_'||'_x
R35629:35643 Imp <> <> mod
mod 36475:36476 <> Id
ind 36592:36593 Id id
constr 36607:36608 Id Id
R36619:36620 Imp <> id ind
R36612:36614 Coq.Init.Datatypes <> nat ind
def 36635:36640 Id beq_id
R36659:36659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36662:36663 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36666:36666 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36660:36661 Imp <> x1 var
R36664:36665 Imp <> x2 var
R36677:36677 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36683:36684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36690:36690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36678:36679 Imp Id Id constr
R36685:36686 Imp Id Id constr
R36695:36701 Coq.Arith.EqNat <> beq_nat def
prf 37172:37182 Id beq_id_refl
R37202:37204 Coq.Init.Logic <> :type_scope:x_'='_x not
R37198:37201 Coq.Init.Datatypes <> true constr
R37205:37210 Imp Id beq_id def
R37214:37214 Imp <> x var
R37212:37212 Imp <> x var
R37254:37265 Coq.Arith.EqNat <> beq_nat_refl thm
R37254:37265 Coq.Arith.EqNat <> beq_nat_refl thm
prf 37532:37540 Id beq_id_eq
R37585:37587 Coq.Init.Logic <> :type_scope:x_'='_x not
R37583:37584 Imp <> i1 var
R37588:37589 Imp <> i2 var
R37564:37566 Coq.Init.Logic <> :type_scope:x_'='_x not
R37560:37563 Coq.Init.Datatypes <> true constr
R37567:37572 Imp Id beq_id def
R37577:37578 Imp <> i2 var
R37574:37575 Imp <> i1 var
prf 37710:37728 Id beq_id_false_not_eq
R37774:37777 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37772:37773 Imp <> i1 var
R37778:37779 Imp <> i2 var
R37760:37762 Coq.Init.Logic <> :type_scope:x_'='_x not
R37748:37753 Imp Id beq_id def
R37758:37759 Imp <> i2 var
R37755:37756 Imp <> i1 var
R37763:37767 Coq.Init.Datatypes <> false constr
prf 37900:37918 Id not_eq_beq_id_false
R37962:37964 Coq.Init.Logic <> :type_scope:x_'='_x not
R37950:37955 Imp Id beq_id def
R37960:37961 Imp <> i2 var
R37957:37958 Imp <> i1 var
R37965:37969 Coq.Init.Datatypes <> false constr
R37940:37943 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37938:37939 Imp <> i1 var
R37944:37945 Imp <> i2 var
prf 38081:38090 Id beq_id_sym
R38121:38123 Coq.Init.Logic <> :type_scope:x_'='_x not
R38109:38114 Imp Id beq_id def
R38119:38120 Imp <> i2 var
R38116:38117 Imp <> i1 var
R38124:38129 Imp Id beq_id def
R38134:38135 Imp <> i1 var
R38131:38132 Imp <> i2 var
R38191:38192 Imp <> <> mod
def 38607:38611 <> state
R38622:38624 Coq.Init.Datatypes <> nat ind
R38616:38617 SfLib <> id ind
def 38639:38649 <> empty_state
R38653:38657 Imp <> state def
def 38688:38693 <> update
R38701:38705 Imp <> state def
R38713:38714 SfLib <> id ind
R38722:38724 Coq.Init.Datatypes <> nat ind
R38729:38733 Imp <> state def
R38753:38758 SfLib <> beq_id def
R38762:38763 Imp <> x' var
R38760:38760 Imp <> x var
R38777:38778 Imp <> st var
R38780:38781 Imp <> x' var
R38770:38770 Imp <> n var
prf 38925:38933 <> update_eq
R38971:38973 Coq.Init.Logic <> :type_scope:x_'='_x not
R38955:38960 Imp <> update def
R38967:38967 Imp <> n var
R38965:38965 Imp <> x var
R38962:38963 Imp <> st var
R38970:38970 Imp <> x var
R38974:38974 Imp <> n var
R38999:39004 Imp <> update def
R39025:39027 Coq.Init.Logic <> :type_scope:x_'='_x not
R39015:39020 SfLib <> beq_id def
R39028:39031 Coq.Init.Datatypes <> true constr
R39025:39027 Coq.Init.Logic <> :type_scope:x_'='_x not
R39015:39020 SfLib <> beq_id def
R39028:39031 Coq.Init.Datatypes <> true constr
R39051:39061 SfLib <> beq_id_refl thm
R39051:39061 SfLib <> beq_id_refl thm
prf 39155:39164 <> update_neq
R39234:39237 Coq.Init.Logic <> :type_scope:x_'='_x not
R39243:39243 Coq.Init.Logic <> :type_scope:x_'='_x not
R39216:39221 Imp <> update def
R39229:39229 Imp <> n var
R39226:39227 Imp <> x2 var
R39223:39224 Imp <> st var
R39232:39233 Imp <> x1 var
R39238:39239 Imp <> st var
R39241:39242 Imp <> x1 var
R39201:39203 Coq.Init.Logic <> :type_scope:x_'='_x not
R39189:39194 SfLib <> beq_id def
R39199:39200 Imp <> x1 var
R39196:39197 Imp <> x2 var
R39204:39208 Coq.Init.Datatypes <> false constr
R39268:39273 Imp <> update def
prf 39482:39495 <> update_example
R39509:39511 Coq.Init.Datatypes <> nat ind
R39553:39555 Coq.Init.Logic <> :type_scope:x_'='_x not
R39518:39523 Imp <> update def
R39544:39544 Imp <> n var
R39538:39539 SfLib <> Id constr
R39525:39535 Imp <> empty_state def
R39548:39549 SfLib <> Id constr
R39581:39586 Imp <> update def
prf 39672:39684 <> update_shadow
R39713:39717 Imp <> state def
R39760:39762 Coq.Init.Logic <> :type_scope:x_'='_x not
R39725:39730 Imp <> update def
R39754:39755 Imp <> n2 var
R39751:39752 Imp <> x2 var
R39734:39739 Imp <> update def
R39747:39748 Imp <> n1 var
R39744:39745 Imp <> x2 var
R39741:39742 Imp <> st var
R39758:39759 Imp <> x1 var
R39764:39769 Imp <> update def
R39777:39778 Imp <> n2 var
R39774:39775 Imp <> x2 var
R39771:39772 Imp <> st var
R39781:39782 Imp <> x1 var
R39807:39812 Imp <> update def
R39825:39830 SfLib <> beq_id def
R39825:39830 SfLib <> beq_id def
prf 39929:39939 <> update_same
R39965:39969 Imp <> state def
R40011:40013 Coq.Init.Logic <> :type_scope:x_'='_x not
R39992:39997 Imp <> update def
R40005:40006 Imp <> n1 var
R40002:40003 Imp <> x1 var
R39999:40000 Imp <> st var
R40009:40010 Imp <> x2 var
R40014:40015 Imp <> st var
R40017:40018 Imp <> x2 var
R39980:39982 Coq.Init.Logic <> :type_scope:x_'='_x not
R39975:39976 Imp <> st var
R39978:39979 Imp <> x1 var
R39983:39984 Imp <> n1 var
R40043:40048 Imp <> update def
R40062:40067 SfLib <> beq_id def
R40062:40067 SfLib <> beq_id def
R40104:40112 SfLib <> beq_id_eq thm
R40104:40112 SfLib <> beq_id_eq thm
R40104:40112 SfLib <> beq_id_eq thm
prf 40215:40228 <> update_permute
R40321:40323 Coq.Init.Logic <> :type_scope:x_'='_x not
R40287:40292 Imp <> update def
R40315:40316 Imp <> n2 var
R40312:40313 Imp <> x1 var
R40295:40300 Imp <> update def
R40308:40309 Imp <> n1 var
R40305:40306 Imp <> x2 var
R40302:40303 Imp <> st var
R40319:40320 Imp <> x3 var
R40325:40330 Imp <> update def
R40353:40354 Imp <> n1 var
R40350:40351 Imp <> x2 var
R40333:40338 Imp <> update def
R40346:40347 Imp <> n2 var
R40343:40344 Imp <> x1 var
R40340:40341 Imp <> st var
R40357:40358 Imp <> x3 var
R40272:40274 Coq.Init.Logic <> :type_scope:x_'='_x not
R40260:40265 SfLib <> beq_id def
R40270:40271 Imp <> x1 var
R40267:40268 Imp <> x2 var
R40275:40279 Coq.Init.Datatypes <> false constr
R40383:40388 Imp <> update def
R40401:40406 SfLib <> beq_id def
R40401:40406 SfLib <> beq_id def
R40433:40438 SfLib <> beq_id def
R40433:40438 SfLib <> beq_id def
R40492:40500 SfLib <> beq_id_eq thm
R40518:40526 SfLib <> beq_id_eq thm
R40557:40567 SfLib <> beq_id_refl thm
R40492:40500 SfLib <> beq_id_eq thm
R40518:40526 SfLib <> beq_id_eq thm
R40557:40567 SfLib <> beq_id_refl thm
R40492:40500 SfLib <> beq_id_eq thm
R40518:40526 SfLib <> beq_id_eq thm
R40492:40500 SfLib <> beq_id_eq thm
R40492:40500 SfLib <> beq_id_eq thm
ind 40824:40827 <> aexp
constr 40843:40846 <> ANum
constr 40866:40868 <> AId
constr 40919:40923 <> APlus
constr 40952:40957 <> AMinus
constr 40986:40990 <> AMult
R40857:40860 Imp <> aexp ind
R40850:40852 Coq.Init.Datatypes <> nat ind
R40878:40881 Imp <> aexp ind
R40872:40873 SfLib <> id ind
R40943:40946 Imp <> aexp ind
R40935:40938 Imp <> aexp ind
R40927:40930 Imp <> aexp ind
R40977:40980 Imp <> aexp ind
R40969:40972 Imp <> aexp ind
R40961:40964 Imp <> aexp ind
R41010:41013 Imp <> aexp ind
R41002:41005 Imp <> aexp ind
R40994:40997 Imp <> aexp ind
def 41305:41305 <> X
R41309:41310 SfLib <> id ind
R41315:41316 SfLib <> Id constr
def 41332:41332 <> Y
R41336:41337 SfLib <> id ind
R41342:41343 SfLib <> Id constr
def 41359:41359 <> Z
R41363:41364 SfLib <> id ind
R41369:41370 SfLib <> Id constr
ind 41738:41741 <> bexp
constr 41757:41761 <> BTrue
constr 41774:41779 <> BFalse
constr 41792:41794 <> BEq
constr 41823:41825 <> BLe
constr 41854:41857 <> BNot
constr 41878:41881 <> BAnd
R41765:41768 Imp <> bexp ind
R41783:41786 Imp <> bexp ind
R41814:41817 Imp <> bexp ind
R41806:41809 Imp <> aexp ind
R41798:41801 Imp <> aexp ind
R41845:41848 Imp <> bexp ind
R41837:41840 Imp <> aexp ind
R41829:41832 Imp <> aexp ind
R41869:41872 Imp <> bexp ind
R41861:41864 Imp <> bexp ind
R41901:41904 Imp <> bexp ind
R41893:41896 Imp <> bexp ind
R41885:41888 Imp <> bexp ind
def 42292:42296 <> aeval
R42304:42308 Imp <> state def
R42316:42319 Imp <> aexp ind
R42324:42326 Coq.Init.Datatypes <> nat ind
R42339:42339 Imp <> a var
R42350:42353 Imp <> ANum constr
R42366:42368 Imp <> AId constr
R42375:42376 Imp <> st var
R42440:42444 Imp <> APlus constr
R42455:42455 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42467:42471 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42483:42483 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42456:42460 Imp <> aeval def
R42462:42463 Imp <> st var
R42472:42476 Imp <> aeval def
R42478:42479 Imp <> st var
R42489:42494 Imp <> AMinus constr
R42506:42506 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R42518:42522 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R42534:42534 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R42507:42511 Imp <> aeval def
R42513:42514 Imp <> st var
R42523:42527 Imp <> aeval def
R42529:42530 Imp <> st var
R42540:42544 Imp <> AMult constr
R42555:42555 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42567:42571 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42583:42583 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42556:42560 Imp <> aeval def
R42562:42563 Imp <> st var
R42572:42576 Imp <> aeval def
R42578:42579 Imp <> st var
def 42602:42606 <> beval
R42614:42618 Imp <> state def
R42626:42629 Imp <> bexp ind
R42634:42637 Coq.Init.Datatypes <> bool ind
R42650:42650 Imp <> b var
R42661:42665 Imp <> BTrue constr
R42676:42679 Coq.Init.Datatypes <> true constr
R42685:42690 Imp <> BFalse constr
R42700:42704 Coq.Init.Datatypes <> false constr
R42710:42712 Imp <> BEq constr
R42725:42731 Coq.Arith.EqNat <> beq_nat def
R42748:42752 Imp <> aeval def
R42754:42755 Imp <> st var
R42734:42738 Imp <> aeval def
R42740:42741 Imp <> st var
R42765:42767 Imp <> BLe constr
R42780:42786 SfLib <> ble_nat def
R42803:42807 Imp <> aeval def
R42809:42810 Imp <> st var
R42789:42793 Imp <> aeval def
R42795:42796 Imp <> st var
R42820:42823 Imp <> BNot constr
R42835:42838 Coq.Init.Datatypes <> negb def
R42841:42845 Imp <> beval def
R42847:42848 Imp <> st var
R42858:42861 Imp <> BAnd constr
R42873:42876 Coq.Init.Datatypes <> andb def
R42893:42897 Imp <> beval def
R42899:42900 Imp <> st var
R42879:42883 Imp <> beval def
R42885:42886 Imp <> st var
def 42922:42926 <> aexp1
R43012:43016 Coq.Init.Logic <> :type_scope:x_'='_x not
R42932:42936 Imp <> aeval def
R42972:42976 Imp <> APlus constr
R42988:42992 Imp <> AMult constr
R43003:43006 Imp <> ANum constr
R42995:42997 Imp <> AId constr
R42999:42999 Imp <> X def
R42979:42982 Imp <> ANum constr
R42939:42944 Imp <> update def
R42958:42958 Imp <> X def
R42946:42956 Imp <> empty_state def
def 43055:43059 <> bexp1
R43146:43150 Coq.Init.Logic <> :type_scope:x_'='_x not
R43065:43069 Imp <> beval def
R43105:43108 Imp <> BAnd constr
R43117:43120 Imp <> BNot constr
R43123:43125 Imp <> BLe constr
R43136:43139 Imp <> ANum constr
R43128:43130 Imp <> AId constr
R43132:43132 Imp <> X def
R43110:43114 Imp <> BTrue constr
R43072:43077 Imp <> update def
R43091:43091 Imp <> X def
R43079:43089 Imp <> empty_state def
R43151:43154 Coq.Init.Datatypes <> true constr
ind 43983:43985 <> com
constr 44001:44005 <> CSkip
constr 44017:44020 <> CAss
constr 44046:44049 <> CSeq
constr 44075:44077 <> CIf
constr 44111:44116 <> CWhile
R44009:44011 Imp <> com ind
R44038:44040 Imp <> com ind
R44030:44033 Imp <> aexp ind
R44024:44025 SfLib <> id ind
R44067:44069 Imp <> com ind
R44060:44062 Imp <> com ind
R44053:44055 Imp <> com ind
R44103:44105 Imp <> com ind
R44096:44098 Imp <> com ind
R44089:44091 Imp <> com ind
R44081:44084 Imp <> bexp ind
R44135:44137 Imp <> com ind
R44128:44130 Imp <> com ind
R44120:44123 Imp <> bexp ind
R44787:44791 Imp <> CSkip constr
not 44773 <> ::'SKIP'
R44821:44824 Imp <> CAss constr
not 44803 <> ::x_'::='_x
R44871:44874 Imp <> CSeq constr
not 44855 <> ::x_';'_x
R44959:44964 Imp <> CWhile constr
not 44928 <> ::'WHILE'_x_'DO'_x_'END'
R45058:45060 Imp <> CIf constr
not 45016 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 45222:45232 <> fact_in_coq
R45236:45238 Imp <> com ind
R45256:45259 Imp <> ::x_';'_x not
R45246:45250 Imp <> ::x_'::='_x not
R45245:45245 Imp <> Z def
R45251:45253 Imp <> AId constr
R45255:45255 Imp <> X def
R45272:45275 Imp <> ::x_';'_x not
R45261:45265 Imp <> ::x_'::='_x not
R45260:45260 Imp <> Y def
R45266:45269 Imp <> ANum constr
R45276:45281 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45309:45316 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45379:45384 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45282:45285 Imp <> BNot constr
R45288:45290 Imp <> BEq constr
R45301:45304 Imp <> ANum constr
R45293:45295 Imp <> AId constr
R45297:45297 Imp <> Z def
R45344:45349 Imp <> ::x_';'_x not
R45318:45322 Imp <> ::x_'::='_x not
R45317:45317 Imp <> Y def
R45323:45327 Imp <> AMult constr
R45338:45340 Imp <> AId constr
R45342:45342 Imp <> Z def
R45330:45332 Imp <> AId constr
R45334:45334 Imp <> Y def
R45351:45355 Imp <> ::x_'::='_x not
R45350:45350 Imp <> Z def
R45356:45361 Imp <> AMinus constr
R45372:45375 Imp <> ANum constr
R45364:45366 Imp <> AId constr
R45368:45368 Imp <> Z def
def 45501:45505 <> plus2
R45509:45511 Imp <> com ind
R45519:45524 Imp <> ::x_'::='_x not
R45547:45547 Imp <> ::x_'::='_x not
R45518:45518 Imp <> X def
R45525:45529 Imp <> APlus constr
R45540:45543 Imp <> ANum constr
R45532:45534 Imp <> AId constr
R45536:45536 Imp <> X def
def 45562:45571 <> XtimesYinZ
R45575:45577 Imp <> com ind
R45585:45590 Imp <> ::x_'::='_x not
R45612:45612 Imp <> ::x_'::='_x not
R45584:45584 Imp <> Z def
R45591:45595 Imp <> AMult constr
R45606:45608 Imp <> AId constr
R45610:45610 Imp <> Y def
R45598:45600 Imp <> AId constr
R45602:45602 Imp <> X def
def 45627:45646 <> subtract_slowly_body
R45650:45652 Imp <> com ind
R45688:45692 Imp <> ::x_';'_x not
R45660:45664 Imp <> ::x_'::='_x not
R45659:45659 Imp <> Z def
R45665:45670 Imp <> AMinus constr
R45681:45684 Imp <> ANum constr
R45673:45675 Imp <> AId constr
R45677:45677 Imp <> Z def
R45694:45698 Imp <> ::x_'::='_x not
R45693:45693 Imp <> X def
R45699:45704 Imp <> AMinus constr
R45715:45718 Imp <> ANum constr
R45707:45709 Imp <> AId constr
R45711:45711 Imp <> X def
def 45751:45765 <> subtract_slowly
R45769:45771 Imp <> com ind
R45778:45783 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45811:45818 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45839:45844 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45784:45787 Imp <> BNot constr
R45790:45792 Imp <> BEq constr
R45803:45806 Imp <> ANum constr
R45795:45797 Imp <> AId constr
R45799:45799 Imp <> X def
R45819:45838 Imp <> subtract_slowly_body def
def 45859:45882 <> subtract_3_from_5_slowly
R45886:45888 Imp <> com ind
R45907:45911 Imp <> ::x_';'_x not
R45896:45900 Imp <> ::x_'::='_x not
R45895:45895 Imp <> X def
R45901:45904 Imp <> ANum constr
R45924:45928 Imp <> ::x_';'_x not
R45913:45917 Imp <> ::x_'::='_x not
R45912:45912 Imp <> Z def
R45918:45921 Imp <> ANum constr
R45929:45943 Imp <> subtract_slowly def
def 45984:45987 <> loop
R45991:45993 Imp <> com ind
R46000:46005 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46011:46018 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46023:46028 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46006:46010 Imp <> BTrue constr
R46019:46022 Imp <> ::'SKIP' not
def 46520:46537 <> ceval_fun_no_while
R46545:46549 Imp <> state def
R46557:46559 Imp <> com ind
R46564:46568 Imp <> state def
R46581:46581 Imp <> c var
R46594:46597 Imp <> ::'SKIP' not
R46610:46611 Imp <> st var
R46620:46624 Imp <> ::x_'::='_x not
R46639:46644 Imp <> update def
R46652:46656 Imp <> aeval def
R46658:46659 Imp <> st var
R46646:46647 Imp <> st var
R46673:46675 Imp <> ::x_';'_x not
R46701:46718 Imp <> ceval_fun_no_while def
R46720:46721 Imp <> st var
R46737:46754 Imp <> ceval_fun_no_while def
R46756:46758 Imp <> st' var
R46769:46772 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46774:46779 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46782:46787 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46790:46792 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46809:46813 Imp <> beval def
R46815:46816 Imp <> st var
R46876:46893 Imp <> ceval_fun_no_while def
R46895:46896 Imp <> st var
R46836:46853 Imp <> ceval_fun_no_while def
R46855:46856 Imp <> st var
R46907:46912 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46914:46917 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46919:46922 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46935:46936 Imp <> st var
ind 50889:50893 <> ceval
constr 50934:50939 <> E_Skip
constr 50980:50984 <> E_Ass
constr 51077:51081 <> E_Seq
constr 51195:51202 <> E_IfTrue
constr 51329:51337 <> E_IfFalse
constr 51465:51474 <> E_WhileEnd
constr 51561:51571 <> E_WhileLoop
R50913:50917 Imp <> state def
R50904:50908 Imp <> state def
R50897:50899 Imp <> com ind
R51763:51767 Imp <> ceval ind
R50964:50966 Imp <> ::x_'/'_x_'||'_x not
R50969:50972 Imp <> ::x_'/'_x_'||'_x not
R50960:50963 Imp <> ::'SKIP' not
R50967:50968 Imp <> st var
R50973:50974 Imp <> st var
R51038:51038 Imp <> ::x_'/'_x_'||'_x not
R51047:51050 Imp <> ::x_'/'_x_'||'_x not
R51053:51057 Imp <> ::x_'/'_x_'||'_x not
R51071:51071 Imp <> ::x_'/'_x_'||'_x not
R51040:51044 Imp <> ::x_'::='_x not
R51039:51039 Imp <> x var
R51045:51046 Imp <> a1 var
R51051:51052 Imp <> st var
R51058:51063 Imp <> update def
R51070:51070 Imp <> n var
R51068:51068 Imp <> x var
R51065:51066 Imp <> st var
R51024:51026 Coq.Init.Logic <> :type_scope:x_'='_x not
R51013:51017 Imp <> aeval def
R51022:51023 Imp <> a1 var
R51019:51020 Imp <> st var
R51027:51027 Imp <> n var
R51168:51168 Imp <> ::x_'/'_x_'||'_x not
R51176:51179 Imp <> ::x_'/'_x_'||'_x not
R51182:51185 Imp <> ::x_'/'_x_'||'_x not
R51171:51173 Imp <> ::x_';'_x not
R51169:51170 Imp <> c1 var
R51174:51175 Imp <> c2 var
R51180:51181 Imp <> st var
R51186:51189 Imp <> st'' var
R51144:51146 Imp <> ::x_'/'_x_'||'_x not
R51150:51153 Imp <> ::x_'/'_x_'||'_x not
R51142:51143 Imp <> c2 var
R51147:51149 Imp <> st' var
R51154:51157 Imp <> st'' var
R51119:51121 Imp <> ::x_'/'_x_'||'_x not
R51124:51128 Imp <> ::x_'/'_x_'||'_x not
R51117:51118 Imp <> c1 var
R51122:51123 Imp <> st var
R51129:51131 Imp <> st' var
R51286:51286 Imp <> ::x_'/'_x_'||'_x not
R51311:51314 Imp <> ::x_'/'_x_'||'_x not
R51317:51320 Imp <> ::x_'/'_x_'||'_x not
R51287:51290 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51292:51297 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51300:51305 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51308:51310 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51291:51291 Imp <> b var
R51298:51299 Imp <> c1 var
R51306:51307 Imp <> c2 var
R51315:51316 Imp <> st var
R51321:51323 Imp <> st' var
R51264:51266 Imp <> ::x_'/'_x_'||'_x not
R51269:51272 Imp <> ::x_'/'_x_'||'_x not
R51262:51263 Imp <> c1 var
R51267:51268 Imp <> st var
R51273:51275 Imp <> st' var
R51245:51247 Coq.Init.Logic <> :type_scope:x_'='_x not
R51235:51239 Imp <> beval def
R51244:51244 Imp <> b var
R51241:51242 Imp <> st var
R51248:51251 Coq.Init.Datatypes <> true constr
R51422:51422 Imp <> ::x_'/'_x_'||'_x not
R51447:51450 Imp <> ::x_'/'_x_'||'_x not
R51453:51456 Imp <> ::x_'/'_x_'||'_x not
R51423:51426 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51428:51433 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51436:51441 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51444:51446 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51427:51427 Imp <> b var
R51434:51435 Imp <> c1 var
R51442:51443 Imp <> c2 var
R51451:51452 Imp <> st var
R51457:51459 Imp <> st' var
R51400:51402 Imp <> ::x_'/'_x_'||'_x not
R51405:51408 Imp <> ::x_'/'_x_'||'_x not
R51398:51399 Imp <> c2 var
R51403:51404 Imp <> st var
R51409:51411 Imp <> st' var
R51380:51382 Coq.Init.Logic <> :type_scope:x_'='_x not
R51370:51374 Imp <> beval def
R51379:51379 Imp <> b var
R51376:51377 Imp <> st var
R51383:51387 Coq.Init.Datatypes <> false constr
R51527:51527 Imp <> ::x_'/'_x_'||'_x not
R51544:51547 Imp <> ::x_'/'_x_'||'_x not
R51550:51553 Imp <> ::x_'/'_x_'||'_x not
R51528:51533 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51535:51538 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51540:51543 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51534:51534 Imp <> b var
R51539:51539 Imp <> c var
R51548:51549 Imp <> st var
R51554:51555 Imp <> st var
R51509:51511 Coq.Init.Logic <> :type_scope:x_'='_x not
R51499:51503 Imp <> beval def
R51508:51508 Imp <> b var
R51505:51506 Imp <> st var
R51512:51516 Coq.Init.Datatypes <> false constr
R51697:51697 Imp <> ::x_'/'_x_'||'_x not
R51714:51717 Imp <> ::x_'/'_x_'||'_x not
R51720:51723 Imp <> ::x_'/'_x_'||'_x not
R51698:51703 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51705:51708 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51710:51713 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51704:51704 Imp <> b var
R51709:51709 Imp <> c var
R51718:51719 Imp <> st var
R51724:51727 Imp <> st'' var
R51655:51655 Imp <> ::x_'/'_x_'||'_x not
R51672:51675 Imp <> ::x_'/'_x_'||'_x not
R51679:51682 Imp <> ::x_'/'_x_'||'_x not
R51656:51661 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51663:51666 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51668:51671 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51662:51662 Imp <> b var
R51667:51667 Imp <> c var
R51676:51678 Imp <> st' var
R51683:51686 Imp <> st'' var
R51633:51635 Imp <> ::x_'/'_x_'||'_x not
R51638:51641 Imp <> ::x_'/'_x_'||'_x not
R51632:51632 Imp <> c var
R51636:51637 Imp <> st var
R51642:51644 Imp <> st' var
R51615:51617 Coq.Init.Logic <> :type_scope:x_'='_x not
R51605:51609 Imp <> beval def
R51614:51614 Imp <> b var
R51611:51612 Imp <> st var
R51618:51621 Coq.Init.Datatypes <> true constr
R51763:51767 Imp <> ceval ind
not 51738 <> ::x_'/'_x_'||'_x
def 52278:52291 <> ceval_example1
R52298:52298 Imp <> ::x_'/'_x_'||'_x not
R52400:52406 Imp <> ::x_'/'_x_'||'_x not
R52418:52425 Imp <> ::x_'/'_x_'||'_x not
R52461:52461 Imp <> ::x_'/'_x_'||'_x not
R52311:52317 Imp <> ::x_';'_x not
R52300:52304 Imp <> ::x_'::='_x not
R52299:52299 Imp <> X def
R52305:52308 Imp <> ANum constr
R52318:52321 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52342:52354 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52367:52379 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52392:52399 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52322:52324 Imp <> BLe constr
R52335:52338 Imp <> ANum constr
R52327:52329 Imp <> AId constr
R52331:52331 Imp <> X def
R52356:52360 Imp <> ::x_'::='_x not
R52355:52355 Imp <> Y def
R52361:52364 Imp <> ANum constr
R52381:52385 Imp <> ::x_'::='_x not
R52380:52380 Imp <> Z def
R52386:52389 Imp <> ANum constr
R52407:52417 Imp <> empty_state def
R52426:52431 Imp <> update def
R52458:52458 Imp <> Z def
R52434:52439 Imp <> update def
R52453:52453 Imp <> X def
R52441:52451 Imp <> empty_state def
R52537:52542 Imp <> update def
R52556:52556 Imp <> X def
R52544:52554 Imp <> empty_state def
R52525:52529 Imp <> E_Seq constr
R52537:52542 Imp <> update def
R52556:52556 Imp <> X def
R52544:52554 Imp <> empty_state def
R52525:52529 Imp <> E_Seq constr
R52601:52605 Imp <> E_Ass constr
R52601:52605 Imp <> E_Ass constr
R52652:52660 Imp <> E_IfFalse constr
R52652:52660 Imp <> E_IfFalse constr
R52694:52698 Imp <> E_Ass constr
R52694:52698 Imp <> E_Ass constr
def 52776:52789 <> ceval_example2
R52796:52796 Imp <> ::x_'/'_x_'||'_x not
R52837:52840 Imp <> ::x_'/'_x_'||'_x not
R52852:52860 Imp <> ::x_'/'_x_'||'_x not
R52909:52909 Imp <> ::x_'/'_x_'||'_x not
R52809:52810 Imp <> ::x_';'_x not
R52798:52802 Imp <> ::x_'::='_x not
R52797:52797 Imp <> X def
R52803:52806 Imp <> ANum constr
R52823:52824 Imp <> ::x_';'_x not
R52812:52816 Imp <> ::x_'::='_x not
R52811:52811 Imp <> Y def
R52817:52820 Imp <> ANum constr
R52826:52830 Imp <> ::x_'::='_x not
R52825:52825 Imp <> Z def
R52831:52834 Imp <> ANum constr
R52841:52851 Imp <> empty_state def
R52861:52866 Imp <> update def
R52906:52906 Imp <> Z def
R52869:52874 Imp <> update def
R52901:52901 Imp <> Y def
R52877:52882 Imp <> update def
R52896:52896 Imp <> X def
R52884:52894 Imp <> empty_state def
R52938:52943 Imp <> update def
R52957:52957 Imp <> X def
R52945:52955 Imp <> empty_state def
R52926:52930 Imp <> E_Seq constr
R52938:52943 Imp <> update def
R52957:52957 Imp <> X def
R52945:52955 Imp <> empty_state def
R52926:52930 Imp <> E_Seq constr
R52969:52973 Imp <> E_Ass constr
R52969:52973 Imp <> E_Ass constr
R53008:53013 Imp <> update def
R53040:53040 Imp <> Y def
R53016:53021 Imp <> update def
R53035:53035 Imp <> X def
R53023:53033 Imp <> empty_state def
R52996:53000 Imp <> E_Seq constr
R53008:53013 Imp <> update def
R53040:53040 Imp <> Y def
R53016:53021 Imp <> update def
R53035:53035 Imp <> X def
R53023:53033 Imp <> empty_state def
R52996:53000 Imp <> E_Seq constr
R53052:53056 Imp <> E_Ass constr
R53052:53056 Imp <> E_Ass constr
R53079:53083 Imp <> E_Ass constr
R53079:53083 Imp <> E_Ass constr
def 53416:53423 <> pup_to_n
R53427:53429 Imp <> com ind
R53446:53447 Imp <> ::x_';'_x not
R53435:53439 Imp <> ::x_'::='_x not
R53434:53434 Imp <> Y def
R53440:53443 Imp <> ANum constr
R53448:53453 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53481:53486 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53547:53551 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53454:53457 Imp <> BNot constr
R53460:53462 Imp <> BEq constr
R53473:53476 Imp <> ANum constr
R53465:53467 Imp <> AId constr
R53469:53469 Imp <> X def
R53514:53517 Imp <> ::x_';'_x not
R53488:53492 Imp <> ::x_'::='_x not
R53487:53487 Imp <> Y def
R53493:53497 Imp <> APlus constr
R53508:53510 Imp <> AId constr
R53512:53512 Imp <> X def
R53500:53502 Imp <> AId constr
R53504:53504 Imp <> Y def
R53519:53523 Imp <> ::x_'::='_x not
R53518:53518 Imp <> X def
R53524:53529 Imp <> AMinus constr
R53540:53543 Imp <> ANum constr
R53532:53534 Imp <> AId constr
R53536:53536 Imp <> X def
prf 53564:53577 <> pup_to_2_ceval
R53591:53594 Imp <> ::x_'/'_x_'||'_x not
R53617:53625 Imp <> ::x_'/'_x_'||'_x not
R53583:53590 Imp <> pup_to_n def
R53595:53600 Imp <> update def
R53614:53614 Imp <> X def
R53602:53612 Imp <> empty_state def
R53626:53631 Imp <> update def
R53716:53716 Imp <> X def
R53634:53639 Imp <> update def
R53711:53711 Imp <> Y def
R53642:53647 Imp <> update def
R53706:53706 Imp <> X def
R53650:53655 Imp <> update def
R53701:53701 Imp <> Y def
R53658:53663 Imp <> update def
R53696:53696 Imp <> Y def
R53666:53671 Imp <> update def
R53691:53691 Imp <> X def
R53673:53683 Imp <> empty_state def
R53735:53742 Imp <> pup_to_n def
R53764:53769 Imp <> update def
R53796:53796 Imp <> Y def
R53772:53777 Imp <> update def
R53791:53791 Imp <> X def
R53779:53789 Imp <> empty_state def
R53752:53756 Imp <> E_Seq constr
R53764:53769 Imp <> update def
R53796:53796 Imp <> Y def
R53772:53777 Imp <> update def
R53791:53791 Imp <> X def
R53779:53789 Imp <> empty_state def
R53752:53756 Imp <> E_Seq constr
R53808:53812 Imp <> E_Ass constr
R53808:53812 Imp <> E_Ass constr
R53862:53867 Imp <> update def
R53976:53976 Imp <> X def
R53878:53883 Imp <> update def
R53960:53960 Imp <> Y def
R53897:53902 Imp <> update def
R53955:53955 Imp <> X def
R53905:53910 Imp <> update def
R53950:53950 Imp <> Y def
R53913:53918 Imp <> update def
R53945:53945 Imp <> Y def
R53921:53926 Imp <> update def
R53940:53940 Imp <> X def
R53928:53938 Imp <> empty_state def
R53991:53996 Imp <> update def
R54049:54049 Imp <> X def
R53999:54004 Imp <> update def
R54044:54044 Imp <> Y def
R54007:54012 Imp <> update def
R54039:54039 Imp <> Y def
R54015:54020 Imp <> update def
R54034:54034 Imp <> X def
R54022:54032 Imp <> empty_state def
R53835:53845 Imp <> E_WhileLoop constr
R53862:53867 Imp <> update def
R53976:53976 Imp <> X def
R53878:53883 Imp <> update def
R53960:53960 Imp <> Y def
R53897:53902 Imp <> update def
R53955:53955 Imp <> X def
R53905:53910 Imp <> update def
R53950:53950 Imp <> Y def
R53913:53918 Imp <> update def
R53945:53945 Imp <> Y def
R53921:53926 Imp <> update def
R53940:53940 Imp <> X def
R53928:53938 Imp <> empty_state def
R53991:53996 Imp <> update def
R54049:54049 Imp <> X def
R53999:54004 Imp <> update def
R54044:54044 Imp <> Y def
R54007:54012 Imp <> update def
R54039:54039 Imp <> Y def
R54015:54020 Imp <> update def
R54034:54034 Imp <> X def
R54022:54032 Imp <> empty_state def
R53835:53845 Imp <> E_WhileLoop constr
R54097:54102 Imp <> update def
R54142:54142 Imp <> Y def
R54105:54110 Imp <> update def
R54137:54137 Imp <> Y def
R54113:54118 Imp <> update def
R54132:54132 Imp <> X def
R54120:54130 Imp <> empty_state def
R54075:54079 Imp <> E_Seq constr
R54155:54159 Imp <> E_Ass constr
R54097:54102 Imp <> update def
R54142:54142 Imp <> Y def
R54105:54110 Imp <> update def
R54137:54137 Imp <> Y def
R54113:54118 Imp <> update def
R54132:54132 Imp <> X def
R54120:54130 Imp <> empty_state def
R54075:54079 Imp <> E_Seq constr
R54155:54159 Imp <> E_Ass constr
R54155:54159 Imp <> E_Ass constr
R54200:54205 Imp <> update def
R54314:54314 Imp <> X def
R54216:54221 Imp <> update def
R54298:54298 Imp <> Y def
R54235:54240 Imp <> update def
R54293:54293 Imp <> X def
R54243:54248 Imp <> update def
R54288:54288 Imp <> Y def
R54251:54256 Imp <> update def
R54283:54283 Imp <> Y def
R54259:54264 Imp <> update def
R54278:54278 Imp <> X def
R54266:54276 Imp <> empty_state def
R54182:54192 Imp <> E_WhileLoop constr
R54200:54205 Imp <> update def
R54314:54314 Imp <> X def
R54216:54221 Imp <> update def
R54298:54298 Imp <> Y def
R54235:54240 Imp <> update def
R54293:54293 Imp <> X def
R54243:54248 Imp <> update def
R54288:54288 Imp <> Y def
R54251:54256 Imp <> update def
R54283:54283 Imp <> Y def
R54259:54264 Imp <> update def
R54278:54278 Imp <> X def
R54266:54276 Imp <> empty_state def
R54182:54192 Imp <> E_WhileLoop constr
R54359:54364 Imp <> update def
R54441:54441 Imp <> Y def
R54378:54383 Imp <> update def
R54436:54436 Imp <> X def
R54386:54391 Imp <> update def
R54431:54431 Imp <> Y def
R54394:54399 Imp <> update def
R54426:54426 Imp <> Y def
R54402:54407 Imp <> update def
R54421:54421 Imp <> X def
R54409:54419 Imp <> empty_state def
R54340:54344 Imp <> E_Seq constr
R54464:54468 Imp <> E_Ass constr
R54359:54364 Imp <> update def
R54441:54441 Imp <> Y def
R54378:54383 Imp <> update def
R54436:54436 Imp <> X def
R54386:54391 Imp <> update def
R54431:54431 Imp <> Y def
R54394:54399 Imp <> update def
R54426:54426 Imp <> Y def
R54402:54407 Imp <> update def
R54421:54421 Imp <> X def
R54409:54419 Imp <> empty_state def
R54340:54344 Imp <> E_Seq constr
R54464:54468 Imp <> E_Ass constr
R54464:54468 Imp <> E_Ass constr
R54491:54500 Imp <> E_WhileEnd constr
R54491:54500 Imp <> E_WhileEnd constr
prf 55294:55312 <> ceval_deterministic
R55389:55391 Coq.Init.Logic <> :type_scope:x_'='_x not
R55386:55388 Imp <> st1 var
R55392:55394 Imp <> st2 var
R55365:55367 Imp <> ::x_'/'_x_'||'_x not
R55370:55373 Imp <> ::x_'/'_x_'||'_x not
R55364:55364 Imp <> c var
R55368:55369 Imp <> st var
R55374:55376 Imp <> st2 var
R55342:55344 Imp <> ::x_'/'_x_'||'_x not
R55347:55350 Imp <> ::x_'/'_x_'||'_x not
R55341:55341 Imp <> c var
R55345:55346 Imp <> st var
R55351:55353 Imp <> st1 var
R55634:55636 Coq.Init.Logic <> :type_scope:x_'='_x not
R55634:55636 Coq.Init.Logic <> :type_scope:x_'='_x not
R56423:56425 Coq.Init.Logic <> :type_scope:x_'='_x not
R56423:56425 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 56904:56913 <> plus2_spec
R56978:56980 Coq.Init.Logic <> :type_scope:x_'='_x not
R56973:56975 Imp <> st' var
R56977:56977 Imp <> X def
R56982:56984 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R56981:56981 Imp <> n var
R56955:56957 Imp <> ::x_'/'_x_'||'_x not
R56960:56963 Imp <> ::x_'/'_x_'||'_x not
R56950:56954 Imp <> plus2 def
R56958:56959 Imp <> st var
R56964:56966 Imp <> st' var
R56940:56942 Coq.Init.Logic <> :type_scope:x_'='_x not
R56936:56937 Imp <> st var
R56939:56939 Imp <> X def
R56943:56943 Imp <> n var
R57291:57299 Imp <> update_eq thm
R57291:57299 Imp <> update_eq thm
prf 57422:57436 <> XtimesYinZ_spec
R57514:57516 Coq.Init.Logic <> :type_scope:x_'='_x not
R57509:57511 Imp <> st' var
R57513:57513 Imp <> Z def
R57518:57520 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R57517:57517 Imp <> n var
R57521:57521 Imp <> m var
R57493:57495 Imp <> ::x_'/'_x_'||'_x not
R57498:57501 Imp <> ::x_'/'_x_'||'_x not
R57483:57492 Imp <> XtimesYinZ def
R57496:57497 Imp <> st var
R57502:57504 Imp <> st' var
R57475:57477 Coq.Init.Logic <> :type_scope:x_'='_x not
R57471:57472 Imp <> st var
R57474:57474 Imp <> Y def
R57478:57478 Imp <> m var
R57463:57465 Coq.Init.Logic <> :type_scope:x_'='_x not
R57459:57460 Imp <> st var
R57462:57462 Imp <> X def
R57466:57466 Imp <> n var
R57583:57591 Imp <> update_eq thm
R57583:57591 Imp <> update_eq thm
prf 57690:57705 <> loop_never_stops
R57726:57727 Coq.Init.Logic <> :type_scope:'~'_x not
R57744:57744 Coq.Init.Logic <> :type_scope:'~'_x not
R57732:57734 Imp <> ::x_'/'_x_'||'_x not
R57737:57740 Imp <> ::x_'/'_x_'||'_x not
R57728:57731 Imp <> loop def
R57735:57736 Imp <> st var
R57741:57743 Imp <> st' var
R57785:57788 Imp <> loop def
R57813:57818 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57824:57827 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57832:57835 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57819:57823 Imp <> BTrue constr
R57828:57831 Imp <> ::'SKIP' not
R57813:57818 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57824:57827 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57832:57835 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57819:57823 Imp <> BTrue constr
R57828:57831 Imp <> ::'SKIP' not
def 58284:58292 <> no_whiles
R58299:58301 Imp <> com ind
R58306:58309 Coq.Init.Datatypes <> bool ind
R58322:58322 Imp <> c var
R58333:58336 Imp <> ::'SKIP' not
R58347:58350 Coq.Init.Datatypes <> true constr
R58357:58361 Imp <> ::x_'::='_x not
R58370:58373 Coq.Init.Datatypes <> true constr
R58381:58383 Imp <> ::x_';'_x not
R58391:58394 Coq.Init.Datatypes <> andb def
R58412:58420 Imp <> no_whiles def
R58397:58405 Imp <> no_whiles def
R58430:58433 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58435:58440 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58443:58448 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58451:58453 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58458:58461 Coq.Init.Datatypes <> andb def
R58479:58487 Imp <> no_whiles def
R58464:58472 Imp <> no_whiles def
R58497:58502 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58504:58507 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58509:58512 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58518:58522 Coq.Init.Datatypes <> false constr
ind 58821:58830 <> no_whilesR
constr 58851:58865 <> no_whilesR_SKIP
constr 58888:58901 <> no_whilesR_ASS
constr 58941:58954 <> no_whilesR_Seq
constr 59077:59089 <> no_whilesR_If
R58833:58835 Imp <> com ind
R58869:58878 Imp <> no_whilesR ind
R58880:58883 Imp <> ::'SKIP' not
R58917:58926 Imp <> no_whilesR ind
R58930:58934 Imp <> ::x_'::='_x not
R58929:58929 Imp <> A var
R58935:58935 Imp <> X var
R59055:59064 Imp <> no_whilesR ind
R59069:59069 Imp <> ::x_';'_x not
R59067:59068 Imp <> c1 var
R59070:59071 Imp <> c2 var
R58989:58998 Imp <> no_whilesR ind
R59000:59001 Imp <> c2 var
R58972:58981 Imp <> no_whilesR ind
R58983:58984 Imp <> c1 var
R59192:59201 Imp <> no_whilesR ind
R59204:59207 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59209:59214 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59217:59222 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59225:59227 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59208:59208 Imp <> b var
R59215:59216 Imp <> c1 var
R59223:59224 Imp <> c2 var
R59126:59135 Imp <> no_whilesR ind
R59137:59138 Imp <> c2 var
R59109:59118 Imp <> no_whilesR ind
R59120:59121 Imp <> c1 var
prf 59242:59254 <> no_whiles_eqv
R59288:59292 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R59281:59283 Coq.Init.Logic <> :type_scope:x_'='_x not
R59270:59278 Imp <> no_whiles def
R59280:59280 Imp <> c var
R59284:59287 Coq.Init.Datatypes <> true constr
R59293:59302 Imp <> no_whilesR ind
R59304:59304 Imp <> c var
R59363:59377 Imp <> no_whilesR_SKIP constr
R59390:59403 Imp <> no_whilesR_ASS constr
R59416:59429 Imp <> no_whilesR_Seq constr
R59455:59467 Coq.Bool.Bool <> andb_true_iff thm
R59570:59582 Imp <> no_whilesR_If constr
R59363:59377 Imp <> no_whilesR_SKIP constr
R59363:59377 Imp <> no_whilesR_SKIP constr
R59363:59377 Imp <> no_whilesR_SKIP constr
R59363:59377 Imp <> no_whilesR_SKIP constr
R59363:59377 Imp <> no_whilesR_SKIP constr
R59390:59403 Imp <> no_whilesR_ASS constr
R59390:59403 Imp <> no_whilesR_ASS constr
R59390:59403 Imp <> no_whilesR_ASS constr
R59390:59403 Imp <> no_whilesR_ASS constr
R59416:59429 Imp <> no_whilesR_Seq constr
R59416:59429 Imp <> no_whilesR_Seq constr
R59416:59429 Imp <> no_whilesR_Seq constr
R59455:59467 Coq.Bool.Bool <> andb_true_iff thm
R59455:59467 Coq.Bool.Bool <> andb_true_iff thm
R59455:59467 Coq.Bool.Bool <> andb_true_iff thm
R59455:59467 Coq.Bool.Bool <> andb_true_iff thm
R59570:59582 Imp <> no_whilesR_If constr
R59740:59754 Coq.Init.Datatypes <> andb_true_intro thm
R59740:59754 Coq.Init.Datatypes <> andb_true_intro thm
R59740:59754 Coq.Init.Datatypes <> andb_true_intro thm
prf 60065:60085 <> no_whiles_terminating
R60118:60124 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60128:60129 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60131:60133 Imp <> ::x_'/'_x_'||'_x not
R60136:60139 Imp <> ::x_'/'_x_'||'_x not
R60130:60130 Imp <> c var
R60134:60135 Imp <> st var
R60140:60142 Imp <> st' var
R60102:60111 Imp <> no_whilesR ind
R60113:60113 Imp <> c var
R60223:60228 Imp <> E_Skip constr
R60223:60228 Imp <> E_Skip constr
R60246:60251 Imp <> update def
R60259:60263 Imp <> aeval def
R60246:60251 Imp <> update def
R60259:60263 Imp <> aeval def
R60279:60283 Imp <> E_Ass constr
R60279:60283 Imp <> E_Ass constr
R60335:60341 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60345:60346 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60349:60351 Imp <> ::x_'/'_x_'||'_x not
R60354:60357 Imp <> ::x_'/'_x_'||'_x not
R60358:60360 Imp <> st' var
R60335:60341 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60345:60346 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60349:60351 Imp <> ::x_'/'_x_'||'_x not
R60354:60357 Imp <> ::x_'/'_x_'||'_x not
R60358:60360 Imp <> st' var
R60409:60415 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60420:60421 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60424:60426 Imp <> ::x_'/'_x_'||'_x not
R60428:60431 Imp <> ::x_'/'_x_'||'_x not
R60432:60435 Imp <> st'' var
R60409:60415 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60420:60421 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60424:60426 Imp <> ::x_'/'_x_'||'_x not
R60428:60431 Imp <> ::x_'/'_x_'||'_x not
R60432:60435 Imp <> st'' var
R60492:60496 Imp <> E_Seq constr
R60492:60496 Imp <> E_Seq constr
R60617:60623 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60627:60628 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60631:60633 Imp <> ::x_'/'_x_'||'_x not
R60636:60639 Imp <> ::x_'/'_x_'||'_x not
R60640:60642 Imp <> st' var
R60617:60623 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60627:60628 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60631:60633 Imp <> ::x_'/'_x_'||'_x not
R60636:60639 Imp <> ::x_'/'_x_'||'_x not
R60640:60642 Imp <> st' var
R60677:60683 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60687:60688 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60691:60693 Imp <> ::x_'/'_x_'||'_x not
R60696:60699 Imp <> ::x_'/'_x_'||'_x not
R60700:60702 Imp <> st' var
R60677:60683 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60687:60688 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60691:60693 Imp <> ::x_'/'_x_'||'_x not
R60696:60699 Imp <> ::x_'/'_x_'||'_x not
R60700:60702 Imp <> st' var
R60740:60744 Imp <> beval def
R60740:60744 Imp <> beval def
R60821:60828 Imp <> E_IfTrue constr
R60821:60828 Imp <> E_IfTrue constr
R60915:60923 Imp <> E_IfFalse constr
R60915:60923 Imp <> E_IfFalse constr
ind 62332:62337 <> sinstr
constr 62351:62355 <> SPush
constr 62375:62379 <> SLoad
constr 62398:62402 <> SPlus
constr 62415:62420 <> SMinus
constr 62433:62437 <> SMult
R62366:62371 Imp <> sinstr ind
R62359:62361 Coq.Init.Datatypes <> nat ind
R62389:62394 Imp <> sinstr ind
R62383:62384 SfLib <> id ind
R62406:62411 Imp <> sinstr ind
R62424:62429 Imp <> sinstr ind
R62441:62446 Imp <> sinstr ind
def 63091:63099 <> s_execute
R63107:63111 Imp <> state def
R63123:63126 Coq.Init.Datatypes <> list ind
R63128:63130 Coq.Init.Datatypes <> nat ind
R63160:63163 Coq.Init.Datatypes <> list ind
R63165:63170 Imp <> sinstr ind
R63192:63195 Coq.Init.Datatypes <> list ind
R63197:63199 Coq.Init.Datatypes <> nat ind
R63217:63220 Imp <> prog var
R63210:63214 Imp <> stack var
R63234:63235 SfLib <> ::'['_']' not
R63240:63244 Imp <> stack var
R63252:63252 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63260:63262 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63253:63257 Imp <> SPush constr
R63274:63282 Imp <> s_execute def
R63289:63290 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63291:63295 Imp <> stack var
R63284:63285 Imp <> st var
R63312:63312 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63320:63322 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63313:63317 Imp <> SLoad constr
R63333:63341 Imp <> s_execute def
R63347:63347 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63352:63354 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63348:63349 Imp <> st var
R63355:63359 Imp <> stack var
R63343:63344 Imp <> st var
R63373:63374 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63376:63377 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63392:63393 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63387:63391 Imp <> SPlus constr
R63404:63412 Imp <> s_execute def
R63418:63418 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63424:63426 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63420:63422 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R63414:63415 Imp <> st var
R63448:63449 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63451:63452 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63468:63469 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63462:63467 Imp <> SMinus constr
R63480:63488 Imp <> s_execute def
R63494:63494 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63500:63502 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63496:63498 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R63490:63491 Imp <> st var
R63523:63524 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63526:63527 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63542:63543 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63537:63541 Imp <> SMult constr
R63554:63562 Imp <> s_execute def
R63568:63568 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63574:63576 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63570:63572 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R63564:63565 Imp <> st var
R63605:63606 SfLib <> ::'['_']' not
def 63669:63678 <> s_execute1
R63754:63759 Coq.Init.Logic <> :type_scope:x_'='_x not
R63687:63695 Imp <> s_execute def
R63719:63719 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63727:63728 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63736:63737 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63745:63746 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63753:63753 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63747:63752 Imp <> SMinus constr
R63738:63742 Imp <> SPush constr
R63729:63733 Imp <> SPush constr
R63720:63724 Imp <> SPush constr
R63709:63710 SfLib <> ::'['_']' not
R63697:63707 Imp <> empty_state def
R63760:63760 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63762:63763 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63765:63765 SfLib <> ::'['_x_','_'..'_','_x_']' not
def 63803:63812 <> s_execute2
R63901:63906 Coq.Init.Logic <> :type_scope:x_'='_x not
R63821:63829 Imp <> s_execute def
R63869:63869 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63877:63878 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63886:63887 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63893:63894 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63900:63900 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63895:63899 Imp <> SPlus constr
R63888:63892 Imp <> SMult constr
R63879:63883 Imp <> SLoad constr
R63885:63885 Imp <> X def
R63870:63874 Imp <> SPush constr
R63856:63856 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63858:63858 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63860:63860 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63832:63837 Imp <> update def
R63851:63851 Imp <> X def
R63839:63849 Imp <> empty_state def
R63907:63907 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63910:63911 SfLib <> ::'['_x_','_'..'_','_x_']' not
R63913:63913 SfLib <> ::'['_x_','_'..'_','_x_']' not
def 64152:64160 <> s_compile
R64167:64170 Imp <> aexp ind
R64175:64178 Coq.Init.Datatypes <> list ind
R64180:64185 Imp <> sinstr ind
R64196:64196 Imp <> e var
R64207:64210 Imp <> ANum constr
R64217:64217 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64225:64225 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64218:64222 Imp <> SPush constr
R64231:64233 Imp <> AId constr
R64240:64240 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64248:64248 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64241:64245 Imp <> SLoad constr
R64286:64290 Imp <> APlus constr
R64305:64305 SfLib <> ::x_'++'_x not
R64320:64322 SfLib <> ::x_'++'_x not
R64306:64314 Imp <> s_compile def
R64323:64323 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R64338:64340 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R64324:64332 Imp <> s_compile def
R64341:64341 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64347:64347 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64342:64346 Imp <> SPlus constr
R64353:64358 Imp <> AMinus constr
R64373:64373 SfLib <> ::x_'++'_x not
R64388:64390 SfLib <> ::x_'++'_x not
R64374:64382 Imp <> s_compile def
R64391:64391 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R64406:64408 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R64392:64400 Imp <> s_compile def
R64409:64409 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64416:64416 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64410:64415 Imp <> SMinus constr
R64422:64426 Imp <> AMult constr
R64441:64441 SfLib <> ::x_'++'_x not
R64456:64458 SfLib <> ::x_'++'_x not
R64442:64450 Imp <> s_compile def
R64459:64459 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R64474:64476 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R64460:64468 Imp <> s_compile def
R64477:64477 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64483:64483 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64478:64482 Imp <> SMult constr
def 64593:64602 <> s_compile1
R64661:64665 Coq.Init.Logic <> :type_scope:x_'='_x not
R64610:64618 Imp <> s_compile def
R64621:64626 Imp <> AMinus constr
R64637:64641 Imp <> AMult constr
R64653:64655 Imp <> AId constr
R64657:64657 Imp <> Y def
R64644:64647 Imp <> ANum constr
R64629:64631 Imp <> AId constr
R64633:64633 Imp <> X def
R64666:64666 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64674:64675 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64683:64684 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64692:64693 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64699:64700 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64707:64707 SfLib <> ::'['_x_','_'..'_','_x_']' not
R64701:64706 Imp <> SMinus constr
R64694:64698 Imp <> SMult constr
R64685:64689 Imp <> SLoad constr
R64691:64691 Imp <> Y def
R64676:64680 Imp <> SPush constr
R64667:64671 Imp <> SLoad constr
R64673:64673 Imp <> X def
prf 65687:65703 <> s_compile_correct
R65720:65724 Imp <> state def
R65732:65735 Imp <> aexp ind
R65770:65772 Coq.Init.Logic <> :type_scope:x_'='_x not
R65741:65749 Imp <> s_execute def
R65758:65766 Imp <> s_compile def
R65768:65768 Imp <> e var
R65754:65755 SfLib <> ::'['_']' not
R65751:65752 Imp <> st var
R65773:65774 SfLib <> ::'['_x_','_'..'_','_x_']' not
R65785:65786 SfLib <> ::'['_x_','_'..'_','_x_']' not
R65775:65779 Imp <> aeval def
R65784:65784 Imp <> e var
R65781:65782 Imp <> st var
mod 65989:65996 <> BreakImp
ind 66293:66295 BreakImp com
constr 66311:66315 BreakImp CSkip
constr 66327:66332 BreakImp CBreak
constr 66344:66347 BreakImp CAss
constr 66373:66376 BreakImp CSeq
constr 66402:66404 BreakImp CIf
constr 66438:66443 BreakImp CWhile
R66319:66321 Imp <> com ind
R66336:66338 Imp <> com ind
R66365:66367 Imp <> com ind
R66357:66360 Imp BreakImp aexp ind
R66351:66352 SfLib <> id ind
R66394:66396 Imp <> com ind
R66387:66389 Imp <> com ind
R66380:66382 Imp <> com ind
R66430:66432 Imp <> com ind
R66423:66425 Imp <> com ind
R66416:66418 Imp <> com ind
R66408:66411 Imp BreakImp bexp ind
R66462:66464 Imp <> com ind
R66455:66457 Imp <> com ind
R66447:66450 Imp BreakImp bexp ind
R66679:66683 Imp BreakImp CSkip constr
not 66665 BreakImp ::'SKIP'
R66710:66715 Imp BreakImp CBreak constr
not 66695 BreakImp ::'BREAK'
R66745:66748 Imp BreakImp CAss constr
not 66727 BreakImp ::x_'::='_x
R66795:66798 Imp BreakImp CSeq constr
not 66779 BreakImp ::x_';'_x
R66883:66888 Imp BreakImp CWhile constr
not 66852 BreakImp ::'WHILE'_x_'DO'_x_'END'
R66982:66984 Imp BreakImp CIf constr
not 66940 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 68078:68083 BreakImp status
constr 68099:68107 BreakImp SContinue
constr 68122:68127 BreakImp SBreak
R68111:68116 Imp <> status ind
R68131:68136 Imp <> status ind
ind 70532:70536 BreakImp ceval
constr 70587:70592 BreakImp E_Skip
constr 70646:70652 BreakImp E_Break
constr 70704:70708 BreakImp E_Ass
constr 70795:70801 BreakImp E_Seq_1
constr 70925:70931 BreakImp E_Seq_2
constr 71138:71143 BreakImp E_If_1
constr 71314:71319 BreakImp E_If_2
constr 71488:71496 BreakImp E_While_1
constr 71745:71753 BreakImp E_While_2
constr 71925:71933 BreakImp E_While_3
R70566:70570 Imp BreakImp state def
R70556:70561 Imp BreakImp status ind
R70547:70551 Imp BreakImp state def
R70540:70542 Imp BreakImp com ind
R72081:72085 Imp <> ceval ind
R70618:70620 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70623:70626 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70636:70638 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70613:70617 Imp BreakImp CSkip constr
R70621:70622 Imp <> st var
R70627:70635 Imp BreakImp SContinue constr
R70639:70640 Imp <> st var
R70679:70681 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70684:70687 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70694:70696 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70673:70678 Imp BreakImp CBreak constr
R70682:70683 Imp <> st var
R70688:70693 Imp BreakImp SBreak constr
R70697:70698 Imp <> st var
R70733:70733 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70742:70745 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70748:70751 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70761:70764 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70789:70789 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70734:70737 Imp BreakImp CAss constr
R70741:70741 Imp <> a var
R70739:70739 Imp <> x var
R70746:70747 Imp <> st var
R70752:70760 Imp BreakImp SContinue constr
R70765:70770 Imp BreakImp update def
R70778:70782 Imp BreakImp aeval def
R70787:70787 Imp <> a var
R70784:70785 Imp <> st var
R70775:70775 Imp <> x var
R70772:70773 Imp <> st var
R70887:70887 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70898:70901 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70904:70907 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70914:70916 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70888:70891 Imp BreakImp CSeq constr
R70896:70897 Imp <> c2 var
R70893:70894 Imp <> c1 var
R70902:70903 Imp <> st var
R70908:70913 Imp BreakImp SBreak constr
R70917:70919 Imp <> st' var
R70828:70830 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70833:70836 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70843:70845 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70826:70827 Imp <> c1 var
R70831:70832 Imp <> st var
R70837:70842 Imp BreakImp SBreak constr
R70846:70848 Imp <> st' var
R71102:71102 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71113:71116 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71119:71122 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71126:71128 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71103:71106 Imp BreakImp CSeq constr
R71111:71112 Imp <> c2 var
R71108:71109 Imp <> c1 var
R71117:71118 Imp <> st var
R71123:71125 Imp <> sig var
R71129:71132 Imp <> st'' var
R71041:71043 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71047:71050 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71054:71056 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71039:71040 Imp <> c2 var
R71044:71046 Imp <> st' var
R71051:71053 Imp <> sig var
R71057:71060 Imp <> st'' var
R70967:70969 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70972:70975 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70985:70987 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70965:70966 Imp <> c1 var
R70970:70971 Imp <> st var
R70976:70984 Imp BreakImp SContinue constr
R70988:70990 Imp <> st' var
R71278:71278 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71290:71293 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71296:71299 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71303:71305 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71279:71281 Imp BreakImp CIf constr
R71288:71289 Imp <> c2 var
R71285:71286 Imp <> c1 var
R71283:71283 Imp <> b var
R71294:71295 Imp <> st var
R71300:71302 Imp <> sig var
R71306:71308 Imp <> st' var
R71227:71229 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71232:71235 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71239:71241 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71225:71226 Imp <> c1 var
R71230:71231 Imp <> st var
R71236:71238 Imp <> sig var
R71242:71244 Imp <> st' var
R71184:71186 Coq.Init.Logic <> :type_scope:x_'='_x not
R71174:71178 Imp BreakImp beval def
R71183:71183 Imp <> b var
R71180:71181 Imp <> st var
R71187:71190 Coq.Init.Datatypes <> true constr
R71452:71452 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71464:71467 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71470:71473 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71477:71479 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71453:71455 Imp BreakImp CIf constr
R71462:71463 Imp <> c2 var
R71459:71460 Imp <> c1 var
R71457:71457 Imp <> b var
R71468:71469 Imp <> st var
R71474:71476 Imp <> sig var
R71480:71482 Imp <> st' var
R71402:71404 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71407:71410 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71414:71416 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71400:71401 Imp <> c2 var
R71405:71406 Imp <> st var
R71411:71413 Imp <> sig var
R71417:71419 Imp <> st' var
R71360:71362 Coq.Init.Logic <> :type_scope:x_'='_x not
R71350:71354 Imp BreakImp beval def
R71359:71359 Imp <> b var
R71356:71357 Imp <> st var
R71363:71367 Coq.Init.Datatypes <> false constr
R71703:71703 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71714:71717 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71720:71723 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71733:71735 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71704:71709 Imp BreakImp CWhile constr
R71713:71713 Imp <> c var
R71711:71711 Imp <> b var
R71718:71719 Imp <> st var
R71724:71732 Imp BreakImp SContinue constr
R71736:71739 Imp <> st'' var
R71633:71633 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71644:71647 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71651:71654 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71664:71666 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71634:71639 Imp BreakImp CWhile constr
R71643:71643 Imp <> c var
R71641:71641 Imp <> b var
R71648:71650 Imp <> st' var
R71655:71663 Imp BreakImp SContinue constr
R71667:71670 Imp <> st'' var
R71577:71579 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71582:71585 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71595:71597 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71576:71576 Imp <> c var
R71580:71581 Imp <> st var
R71586:71594 Imp BreakImp SContinue constr
R71598:71600 Imp <> st' var
R71534:71536 Coq.Init.Logic <> :type_scope:x_'='_x not
R71524:71528 Imp BreakImp beval def
R71533:71533 Imp <> b var
R71530:71531 Imp <> st var
R71537:71540 Coq.Init.Datatypes <> true constr
R71884:71884 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71895:71898 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71901:71904 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71914:71916 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71885:71890 Imp BreakImp CWhile constr
R71894:71894 Imp <> c var
R71892:71892 Imp <> b var
R71899:71900 Imp <> st var
R71905:71913 Imp BreakImp SContinue constr
R71917:71919 Imp <> st' var
R71828:71830 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71833:71836 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71843:71845 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71827:71827 Imp <> c var
R71831:71832 Imp <> st var
R71837:71842 Imp BreakImp SBreak constr
R71846:71848 Imp <> st' var
R71786:71788 Coq.Init.Logic <> :type_scope:x_'='_x not
R71776:71780 Imp BreakImp beval def
R71785:71785 Imp <> b var
R71782:71783 Imp <> st var
R71789:71792 Coq.Init.Datatypes <> true constr
R72006:72006 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72017:72020 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72023:72026 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72036:72038 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72007:72012 Imp BreakImp CWhile constr
R72016:72016 Imp <> c var
R72014:72014 Imp <> b var
R72021:72022 Imp <> st var
R72027:72035 Imp BreakImp SContinue constr
R72039:72040 Imp <> st var
R71962:71964 Coq.Init.Logic <> :type_scope:x_'='_x not
R71952:71956 Imp BreakImp beval def
R71961:71961 Imp <> b var
R71958:71959 Imp <> st var
R71965:71969 Coq.Init.Datatypes <> false constr
R72081:72085 Imp BreakImp ceval ind
not 72050 BreakImp ::x_'/'_x_'||'_x_'/'_x
prf 72497:72508 BreakImp break_ignore
R72573:72575 Coq.Init.Logic <> :type_scope:x_'='_x not
R72571:72572 Imp <> st var
R72576:72578 Imp <> st' var
R72536:72536 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72545:72548 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72551:72554 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72556:72558 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72542:72543 Imp BreakImp ::x_';'_x not
R72537:72541 Imp BreakImp ::'BREAK' not
R72544:72544 Imp <> c var
R72549:72550 Imp <> st var
R72555:72555 Imp <> s var
R72559:72561 Imp <> st' var
prf 72686:72699 BreakImp while_continue
R72767:72769 Coq.Init.Logic <> :type_scope:x_'='_x not
R72766:72766 Imp <> s var
R72770:72778 Imp BreakImp SContinue constr
R72726:72726 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72743:72746 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72749:72752 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72754:72756 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72727:72732 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72734:72737 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72739:72742 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72733:72733 Imp <> b var
R72738:72738 Imp <> c var
R72747:72748 Imp <> st var
R72753:72753 Imp <> s var
R72757:72759 Imp <> st' var
prf 72849:72868 BreakImp while_stops_on_break
R72944:72944 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72961:72964 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72967:72970 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72980:72982 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72945:72950 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72952:72955 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72957:72960 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72951:72951 Imp <> b var
R72956:72956 Imp <> c var
R72965:72966 Imp <> st var
R72971:72979 Imp BreakImp SContinue constr
R72983:72985 Imp <> st' var
R72917:72919 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72922:72925 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72932:72934 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72916:72916 Imp <> c var
R72920:72921 Imp <> st var
R72926:72931 Imp BreakImp SBreak constr
R72935:72937 Imp <> st' var
R72903:72905 Coq.Init.Logic <> :type_scope:x_'='_x not
R72893:72897 Imp BreakImp beval def
R72902:72902 Imp <> b var
R72899:72900 Imp <> st var
R72906:72909 Coq.Init.Datatypes <> true constr
R73010:73018 Imp BreakImp E_While_2 constr
R73010:73018 Imp BreakImp E_While_2 constr
prf 73083:73098 BreakImp while_break_true
R73195:73201 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R73206:73207 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R73209:73211 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73216:73219 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73226:73228 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73208:73208 Imp <> c var
R73212:73215 Imp <> st'' var
R73220:73225 Imp BreakImp SBreak constr
R73229:73231 Imp <> st' var
R73182:73184 Coq.Init.Logic <> :type_scope:x_'='_x not
R73171:73175 Imp BreakImp beval def
R73181:73181 Imp <> b var
R73177:73179 Imp <> st' var
R73185:73188 Coq.Init.Datatypes <> true constr
R73123:73123 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73140:73143 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73146:73149 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73159:73161 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73124:73129 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R73131:73134 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R73136:73139 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R73130:73130 Imp <> b var
R73135:73135 Imp <> c var
R73144:73145 Imp <> st var
R73150:73158 Imp BreakImp SContinue constr
R73162:73164 Imp <> st' var
R73259:73264 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R73266:73269 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R73271:73274 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R73259:73264 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R73266:73269 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R73271:73274 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
prf 73495:73513 BreakImp ceval_deterministic
R73526:73528 Imp BreakImp com ind
R73618:73621 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R73612:73614 Coq.Init.Logic <> :type_scope:x_'='_x not
R73609:73611 Imp <> st1 var
R73615:73617 Imp <> st2 var
R73624:73626 Coq.Init.Logic <> :type_scope:x_'='_x not
R73622:73623 Imp <> s1 var
R73627:73628 Imp <> s2 var
R73583:73585 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73588:73591 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73594:73596 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73582:73582 Imp <> c var
R73586:73587 Imp <> st var
R73592:73593 Imp <> s2 var
R73597:73599 Imp <> st2 var
R73555:73557 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73560:73563 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73566:73568 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73554:73554 Imp <> c var
R73558:73559 Imp <> st var
R73564:73565 Imp <> s1 var
R73569:73571 Imp <> st1 var
R74705:74709 Coq.Init.Logic <> proj1 thm
R74705:74709 Coq.Init.Logic <> proj1 thm
R74944:74951 Imp <> <> mod
